{"version":3,"sources":["Theme.ts","pages/HelpPage.tsx","AppConstants.tsx","serverApi/http.ts","components/Dialogs/DialogDeleteNews.tsx","components/Dialogs/DialogEditNews.tsx","components/Dialogs/DialogAddLesson.tsx","components/Dialogs/DialogDeleteLesson.tsx","components/Dialogs/DialogEditLesson.tsx","components/Dialogs/DialogAddTaskLesson.tsx","components/UniversalComponents.tsx","pages/StartPage.tsx","serverApi/dataStorage.ts","serverApi/localStorage.ts","components/Dialogs/DialogAddNews.tsx","components/SetAdmin.tsx","pages/AdminComponent.tsx","components/AddTimetable.tsx","components/Dialogs/SnackBar.tsx","components/Dialogs/DialogAddNewTeacher.tsx","components/Dialogs/DialogDeleteTeacher.tsx","components/Dialogs/DialogEditLessonTime.tsx","pages/AccountPage.tsx","pages/SchedulePage.tsx","components/Dialogs/DialogEditTaskLesson.tsx","components/Dialogs/DialogViewDay.tsx","pages/CalendarPage.tsx","AppPagesList.ts","components/Dialogs/DialogLoginForm.tsx","components/Dialogs/DialogRegisterForm.tsx","components/Main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["theme","createMuiTheme","palette","common","black","white","background","paper","default","primary","light","main","dark","contrastText","secondary","error","text","disabled","hint","HelpPage","document","title","react","Typography","variant","Link_Link","href","List","question","ask","map","ListItem","alignItems","key","ListItemText","style","fontSize","component","color","marginTop","React","serverApi","Http","url","data","path","fetch","this","method","headers","Content-Type","body","JSON","stringify","token","Authorization","concat","email","DialogDeleteNews","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","state","openDialogWindow","handleOpenLoginDialog","setState","handleClose","confirmDelete","removeNews","props","newsData","then","res","json","result","getNews","inherits","createClass","value","react_default","a","createElement","Button","onClick","gridRowStart","gridRowEnd","Delete","Dialog","open","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","header","author","DialogActions","Component","DialogEditNews","img","confirmEdit","http","oldHeader","oldBody","oldData","editNews","err","console","handleHeaderChange","event","target","handleBodyChange","handleAuthorChange","handleImgChange","Edit","TextField","autoFocus","margin","label","type","fullWidth","onChange","DialogAddLesson","lessonNumber","lessonName","lessonType","lessonLocation","lessonTeacher","confirmAdd","newLesson","lessonWeek","lessonDay","addLesson","handleLessonNumberChange","handleLessonNameChange","handleLessonTypeChange","handleLessonLocationChange","handleLessonTeacherChange","Add","FormControl","width","InputLabel","htmlFor","Select","input","Input","lessonTime","timeData","MenuItem","Math","random","lessonStartTime","lessonFinishTime","teachers","teacher","name","DialogDeleteLesson","deleteLessonInData","lesson","paddingRight","paddingLeft","DialogEditLesson","Number","split","editLessonInData","oldLesson","uuidv4","require","DialogAddTaskLesson","textForTaskLesson","dateForTaskLesson","Date","newTaskLesson","taskDate","taskText","addNewTaskLesson","handleTaskLessonTextChange","handleChangeDate","PlaylistAdd","material_ui_pickers_esm","utils","MomentUtils","invalidDateMessage","KeyboardButtonProps","aria-label","LoadingComponent","MuiThemeProvider","textAlign","CircularProgress","NewsComponent","_id","Card","admin","display","DialogDeleteNews_DialogDeleteNews","getNewsCb","DialogEditNews_DialogEditNews","Grid","container","spacing","item","xs","sm","CardMedia","height","marginLeft","marginRight","className","image","CardContent","daysInWeek","scheduleString","lessonNumberString","lessonColor","Chip","size","justifyContent","DialogDeleteLesson_DialogDeleteLesson","DialogEditLesson_DialogEditLesson","undefined","DialogAddTaskLesson_DialogAddTaskLesson","Divider","scheduleListComponent","handleAddLesson","week","evenWeek","unevenWeek","dense","day","overflowY","ListItemSecondaryAction","DialogAddLesson_DialogAddLesson","StartPage","news","_this2","getNewsList","toConsumableArray","flexGrow","UniversalComponents_NewsComponent","subtitle","textBody","cardBody","alt","DataStorage","storage","add","logOut","get","LocalStorage","parse","localStorage","getItem","save","removeItem","setItem","DialogAddNews","addNews","SetAdmin","adminEmail","addConfirm","isLoading","findUserData","password","lastLoginDate","registrationDate","handleAdminEmailChange","getUserData","getUserDataFromAdmin","addUserAsAdmin","removeUserAdmin","deleteAccount","userData","AdminComponent","expanded","isNoOneNews","handleChangeExpand","panel","isExpanded","log","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","aria-controls","ExpansionPanelDetails","DialogAddNews_DialogAddNews","SetAdmin_SetAdmin","AddTimetable","tabValue","handleChangeTab","newValue","handleChangeIndexTab","index","lessonObject","addLessonInData","year","getFullYear","month","getMonth","today","getTime","now","round","stylesForTab","textTransform","minWidth","timetableMenu","AppBar","position","Tabs","indicatorColor","textColor","Tab","lib_default","axis","direction","onChangeIndex","dir","lessons","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","useStyles1","makeStyles","backgroundColor","green","amber","icon","iconVariant","opacity","message","MySnackbarContentWrapper","classes","other","objectWithoutProperties","Icon","SnackbarContent","assign","clsx","aria-describedby","action","IconButton","Close_default","SnackbarComponent","handleOpen","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","DialogAddNewTeacher","teacherName","handleTeacherNameChange","addNewTeacher","DialogDeleteTeacher","deleteTeacherInData","DialogEditLessonTime","firstLessonStart","firstLessonFinish","secondLessonStart","secondLessonFinish","thirdLessonStart","thirdLessonFinish","fourthLessonStart","fourthLessonFinish","fifthLessonStart","fifthLessonFinish","sixthLessonStart","sixthLessonFinish","newLessonTimeSchedule","editLessonTimeInData","normalizeLessonTime","date","normalizedLessonTime","toString","handleChangeStartTimeFirst","handleChangeFinishTimeFirst","handleChangeStartTimeSecond","handleChangeFinishTimeSecond","handleChangeStartTimeThird","handleChangeFinishTimeThird","handleChangeStartTimeFourth","handleChangeFinishTimeFourth","handleChangeStartTimeFifth","handleChangeFinishTimeFifth","handleChangeStartTimeSixth","handleChangeFinishTimeSixth","maxWidth","ampm","okLabel","cancelLabel","AccountPage","isDataConfirmed","lessonTasks","openSnackbar","updateHandler","updateUserData","newData","push","splice","indexOf","handleEditLessonTimeInData","lessonSchedule","addTeacherInData","newTeacher","forEach","teacherForDelete","loginWithToken","_this3","tabsArray","ListAlt","Dashboard","Fingerprint","mobileMenu","tabData","fullMenu","accountPageBody","overflow","AddTimetable_AddTimetable","Group","padding","DialogAddNewTeacher_DialogAddNewTeacher","DialogDeleteTeacher_DialogDeleteTeacher","TimeIcon","DialogEditLessonTime_DialogEditLessonTime","avatar","Avatar","AdminComponent_AdminComponent","waitingComponent","SchedulePage","handleAddNewTaskLesson","taskLesson","setTimeout","swipeableViews","SnackBar_SnackbarComponent","DialogEditTaskLesson","handleEditTaskLesson","DialogViewDay","marginBottom","MoreHoriz","moment","format","tasks","task","DialogEditTaskLesson_DialogEditTaskLesson","CalendarPage","months","selectedMonth","taskLessonForEdit","handleCheckboxTaskLesson","returnRussianMonthName","monthName","monthNames","handleChangeMonthInMobileVersion","monthsCounter","count","daysInMonth","days","i","toDateString","calendarMenuFullVersion","dayCard","engMonthName","rusMonthName","Badge","badgeContent","borderLeft","DialogViewDay_DialogViewDay","cells","dayName","Table","tableLayout","TableBody","TableRow","TableCell","slice","monthArray","dayCardMobile","monthArr","pagesForMenus","pages","buttonText","DialogLoginForm","loginState","login","loginForToken","isLoginSuccess","handleEmailChange","handlePasswordChange","mobile","MeetingRoom","DialogRegisterForm","confirmPassword","registrationState","handleConfirmPasswordChange","PersonAdd","validator","isEmail","Main","menuEl","mobileOpenDialogLoginForm","handleClick","evt","currentTarget","handleExitButton","changePage","isDataConfirmedMobileMenu","Toolbar","aria-haspopup","Menu_default","Menu","anchorEl","keepMounted","Boolean","dataPage","react_router_dom","to","activeStyle","fontWeight","Icon_Icon","esm_Input","isDataNotConfirmedMobileMenu","DialogLoginForm_DialogLoginForm","DialogRegisterForm_DialogRegisterForm","isLoadingComponent","react_router","Container","exact","StartPage_StartPage","isDataNotConfirmed","App","Main_Main","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.803ff182.chunk.js","sourcesContent":["import {createMuiTheme} from \"@material-ui/core\";\n\nexport const theme = createMuiTheme({\n    \"palette\": {\n        \"common\": {\n            \"black\": \"#000\",\n            \"white\": \"#fff\"\n        },\n        \"background\": {\n            \"paper\": \"rgba(255, 255, 255, 1)\",\n            \"default\": \"#fafafa\"\n        },\n        \"primary\": {\n            \"light\": \"#40c4ff\",\n            \"main\": \"#0390c2\",\n            \"dark\": \"rgba(74, 144, 226, 1)\",\n            \"contrastText\": \"#fff\"\n        },\n        \"secondary\": {\n            \"light\": \"#4ffcff\",\n            \"main\": \"#ba68c8\",\n            \"dark\": \"#22c5bb\",\n            \"contrastText\": \"#fff\"\n        },\n        \"error\": {\n            \"light\": \"#e52519\",\n            \"main\": \"#f42740\",\n            \"dark\": \"#8d0600\",\n            \"contrastText\": \"#fff\"\n        },\n        \"text\": {\n            \"primary\": \"rgba(0, 0, 0, 0.87)\",\n            \"secondary\": \"rgba(0, 0, 0, 0.54)\",\n            \"disabled\": \"rgba(0, 0, 0, 0.38)\",\n            \"hint\": \"rgba(0, 0, 0, 0.38)\"\n        }\n    }\n});\n","import * as React from \"react\";\nimport {Link, List, ListItem, ListItemText, Typography} from \"@material-ui/core\";\n\ninterface question {\n    question: string\n    ask: string\n}\n\nexport default class HelpPage extends React.Component {\n\n    public render() {\n        document.title = 'Помощь';\n\n        const questions: question[] = [\n            {\n                question: 'Что это вообще такое и зачем ты мне это скинул?',\n                ask: 'Вкратце - этот сервис поможет тебе, если в твоем универе разное расписание на четную и нечетную неделю, все заточено под таких бедолаг (сам такой же).' +\n                    'В принципе, если очень хочется, можно пользоваться и с одним расписанием на все недели.'\n            },\n            {\n                question: 'Че здесь делать-то?',\n                ask: 'Регистрируешься, вносишь расписание, удобно смотришь все с мобилки, добавляешь задание на конкретную дату и смотришь, сколько у тебя еще есть времени чтобы ничего не делать и не встать за кассу в маке'\n            },\n            {\n                question: 'Что за название странное - Project Pear? И почему груша на иконке страницы?',\n                ask: 'Этот проект почти как Apple. Только Pear. Гениально, я считаю'\n            },\n            {\n                question: 'Почему при обновлении страницы в браузере перебрасывает на сломанную страницу?',\n                ask: 'Автор - человек бедный, и еще не купил нормальный адрес. Будет исправлено в ближайшие дни. А пока - просто не обновляй страницу и пользуйся меню на сайте :З'\n            },\n            {\n                question: 'Встречаются косяки с расположением элементов или баги, кому сказать что у него кривые руки?',\n                ask: 'Сказать, что все криво, или все хорошо, можно в телеграм -> @eeenkeeei'\n            },\n            {\n                question: 'Сервис предназначен только для студентов КАИ?',\n                ask: 'Нет, в ближайшее время будут добавлены гибкие настройки расписания времени занятий и т.д. Пользоваться смогут все желающие'\n            },\n            {\n                question: 'А ты не стащишь мой пароль? Или кто-нибудь еще?',\n                ask: 'Нет, при всем желании. Все пароли в базе зашифрованы и расшифровке не поддаются, честно. Если интересна сторона безопасности - пиши в телегу'\n            },\n            {\n                question: 'Ты собираешься поддерживать и развивать все это, если я буду этим пользоваться?',\n                ask: 'Я планирую продать этот проект гуглу и укатить в силиконовую долину. Пользуйся на здоровье! ;)'\n            }\n        ];\n\n        return (\n            <div>\n                <Typography variant={\"h6\"}>\n                    Здесь ты найдешь ответы на интересующие вопросы. А если нет - пиши в тележку <Link\n                    href={'https://t.me/eeenkeeei'}>@eeenkeeei</Link>\n                </Typography>\n                <Typography variant=\"h6\">\n                    Внимание! Скоро сайт переедет на другой, более удобный адрес. Если собираешься пользоваться - следи за обновлениями\n                </Typography>\n                <List>\n                    {questions.map(question => {\n                        return (\n                            <ListItem alignItems=\"flex-start\" key={question.question}>\n                                <ListItemText\n                                    primary={<Typography style={{fontSize: '1.1rem'}}>{question.question}</Typography>}\n                                    secondary={\n                                        <React.Fragment>\n                                            <Typography\n                                                component=\"span\"\n                                                variant=\"caption\"\n                                                color=\"textPrimary\"\n                                                style={{marginTop: '0.4rem', fontSize: '0.9rem'}}\n                                            >\n                                                >>> {question.ask}\n                                            </Typography>\n                                        </React.Fragment>\n                                    }\n                                />\n                            </ListItem>\n                        )\n                    })}\n                </List>\n            </div>\n        )\n    }\n}\n","export const serverApi = 'https://react-timetable-server.herokuapp.com';\n// https://react-timetable-server.herokuapp.com\n// http://192.168.0.122:7777\n","import {serverApi} from \"../AppConstants\";\nimport {User} from \"../pages/AccountPage\";\n\ninterface loginData {\n    email: string;\n    password: string\n}\n\n\nexport default class Http {\n\n    public url = serverApi;\n\n    public loginForToken(data: loginData, path: string) {\n        return fetch(this.url + path, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        });\n    }\n\n    public loginWithToken(token: string, path: string) {\n        return fetch(this.url + path, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n        });\n    }\n\n    public getNewsList(path: string) {\n        return fetch(this.url + path, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        });\n    }\n\n    public removeNews(body: string, path: string) {\n        return fetch(this.url + path, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({body: body})\n        });\n    }\n\n    public editNews(body: any, path: string) {\n        return fetch(this.url + path, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(body)\n        });\n    }\n\n    public addNews(body: any, path: '/addNews') {\n        return fetch(this.url + path, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(body)\n        });\n    }\n\n    public addUserAsAdmin(body: string, path: '/addAdmin') {\n        return fetch(this.url + path, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({email: body})\n        });\n    }\n\n    public getUserDataFromAdmin(body: string, path: '/getUserDataFromAdmin') {\n        return fetch(this.url + path, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({email: body})\n        });\n    }\n\n    public removeUserAdmin(body: string, path: '/removeUserAdmin') {\n        return fetch(this.url + path, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({email: body})\n        });\n    }\n\n    public deleteAccount(body: string, path: '/deleteAccount') {\n        return fetch(this.url + path, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({email: body})\n        });\n    }\n\n    public updateUserData(body: User, path: '/updateData') {\n        return fetch(this.url + path, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(body)\n        });\n    }\n}\n","import React from 'react'\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n} from \"@material-ui/core\";\nimport Http from \"../../serverApi/http\";\n\nimport {Delete} from \"@material-ui/icons\";\nimport {newsData} from \"../../pages/StartPage\";\n\ninterface DialogDeleteNewsProps {\n    newsData: newsData\n    getNews: any // функция обновления новостей\n}\n\n\nexport class DialogDeleteNews extends React.Component<DialogDeleteNewsProps> {\n\n    state = {\n        openDialogWindow: false\n    };\n\n    public handleOpenLoginDialog = () => {\n        this.setState({\n            openDialogWindow: true\n        })\n    };\n\n    public handleClose = () => {\n        this.setState({\n            openDialogWindow: false,\n        })\n    };\n\n    public confirmDelete = () => {\n        const http = new Http();\n        http.removeNews(this.props.newsData.body, '/removeNews')\n            .then (res => res.json())\n            .then(\n                (result) => {\n                    if (result === true){\n                        this.props.getNews();\n                        this.setState({\n                            openDialogWindow: false\n                        })\n                    }\n                }\n            )\n    };\n\n    public render() {\n        return (\n            <div>\n                <Button onClick={this.handleOpenLoginDialog} style={{gridRowStart: '1', gridRowEnd: '2'}}>\n                    <Delete/>\n                </Button>\n\n                <Dialog open={this.state.openDialogWindow} onClose={this.handleClose}\n                        aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Удаление новости</DialogTitle>\n\n                    <DialogContent>\n                        <DialogContentText>\n                            Заголовок: {this.props.newsData.header}\n                        </DialogContentText>\n                        <DialogContentText>\n                            Текст: {this.props.newsData.body}\n                        </DialogContentText>\n                        <DialogContentText>\n                            Автор: {this.props.newsData.author}, дата: {this.props.newsData.data}\n                        </DialogContentText>\n\n\n                    </DialogContent>\n\n                    <DialogActions>\n\n                        <Button onClick={this.confirmDelete} color=\"primary\">\n                            Удалить\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Отмена\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle, TextField,\n    Typography\n} from \"@material-ui/core\";\nimport Http from \"../../serverApi/http\";\n\nimport {Edit} from \"@material-ui/icons\";\nimport {newsData} from \"../../pages/StartPage\";\n\ninterface DialogEditNewsProps {\n    newsData: newsData\n    getNews: any // функция обновления новостей\n}\n\n\nexport class DialogEditNews extends React.Component<DialogEditNewsProps> {\n\n    state = {\n        openDialogWindow: false,\n        header: this.props.newsData.header,\n        body: this.props.newsData.body,\n        author: this.props.newsData.author,\n        img: this.props.newsData.img\n    };\n\n    public handleOpenLoginDialog = () => {\n        this.setState({\n            openDialogWindow: true\n        })\n    };\n\n    public handleClose = () => {\n        this.setState({\n            openDialogWindow: false,\n        })\n    };\n\n    public confirmEdit = () => {\n        const http = new Http();\n        const data = {\n            oldHeader: this.props.newsData.header,\n            oldBody: this.props.newsData.body,\n            oldData: this.props.newsData.data,\n            header: this.state.header,\n            body: this.state.body,\n            author: this.state.author,\n            img: this.state.img\n        };\n        http.editNews(data, '/editNews')\n            .then (res => res.json())\n            .then (\n                (result)=>{\n                    if (result === true){\n                        this.props.getNews();\n                        this.setState({\n                            openDialogWindow: false,\n                        })\n                    }\n                },\n                (err)=>{\n                    console.error(err)\n                }\n            )\n    };\n\n    public handleHeaderChange = (event: any) => {\n        this.setState({\n            header: event.target.value\n        })\n    };\n\n    public handleBodyChange = (event: any) => {\n        this.setState({\n            body: event.target.value\n        })\n    };\n\n    public handleAuthorChange = (event: any) => {\n        this.setState({\n            author: event.target.value\n        })\n    };\n\n    public handleImgChange = (event: any) => {\n        this.setState({\n            img: event.target.value\n        })\n    };\n\n    public render() {\n        return (\n            <div>\n                <Button onClick={this.handleOpenLoginDialog}>\n                    <Edit/>\n                </Button>\n\n                <Dialog open={this.state.openDialogWindow} onClose={this.handleClose}\n                        aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Редактирование новости</DialogTitle>\n\n                    <DialogContent>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"login\"\n                                label={<Typography>Заголовок: </Typography>}\n                                type=\"text\"\n                                value={this.state.header}\n                                fullWidth\n                                onChange={this.handleHeaderChange}\n                            />\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Текст новости: </Typography>}\n                            value={this.state.body}\n                            fullWidth\n                            onChange={this.handleBodyChange}\n                        />\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Автор: </Typography>}\n                            value={this.state.author}\n                            fullWidth\n                            onChange={this.handleAuthorChange}\n                        />\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Картинка: </Typography>}\n                            value={this.state.img}\n                            fullWidth\n                            onChange={this.handleImgChange}\n                        />\n\n\n                    </DialogContent>\n\n                    <DialogActions>\n\n                        <Button onClick={this.confirmEdit} color=\"primary\">\n                            Сохранить\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Отмена\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle, FormControl, Input, InputLabel, MenuItem, Select, TextField,\n    Typography\n} from \"@material-ui/core\";\nimport {Add} from \"@material-ui/icons\";\nimport {LessonTimeData, TeacherData} from \"../../pages/AccountPage\";\n\ninterface DialogAddLessonProps {\n    lessonDay: string,\n    lessonWeek: string,\n    addLesson: any // cb для добавления\n    teachers: TeacherData[]\n    lessonTime: LessonTimeData[]\n}\n\nexport interface newLesson {\n    lessonWeek: string;\n    lessonDay: string;\n    lessonName: string;\n    lessonType: string;\n    lessonNumber: string;\n    lessonLocation: string;\n    lessonTeacher: string;\n}\n\n\nexport class DialogAddLesson extends React.Component<DialogAddLessonProps> {\n\n    state = {\n        openDialogWindow: false,\n        lessonNumber: '',\n        lessonName: '',\n        lessonType: '',\n        lessonLocation: '',\n        lessonTeacher: ''\n    };\n\n\n    public handleOpenLoginDialog = () => {\n        this.setState({\n            openDialogWindow: true\n        })\n    };\n\n    public handleClose = () => {\n        this.setState({\n            openDialogWindow: false,\n        })\n    };\n\n    public confirmAdd = () => {\n        const newLesson: newLesson = {\n            lessonWeek: this.props.lessonWeek,\n            lessonDay: this.props.lessonDay,\n            lessonName: this.state.lessonName,\n            lessonType: this.state.lessonType,\n            lessonNumber: this.state.lessonNumber,\n            lessonLocation: this.state.lessonLocation,\n            lessonTeacher: this.state.lessonTeacher\n        };\n        this.props.addLesson(newLesson);\n        this.handleClose()\n    };\n\n    public handleLessonNumberChange = (event: any) => {\n        this.setState({\n            lessonNumber: event.target.value\n        })\n    };\n\n    public handleLessonNameChange = (event: any) => {\n        this.setState({\n            lessonName: event.target.value\n        })\n    };\n\n    public handleLessonTypeChange = (event: any) => {\n        this.setState({\n            lessonType: event.target.value\n        })\n    };\n\n    public handleLessonLocationChange = (event: any) => {\n        this.setState({\n            lessonLocation: event.target.value\n        })\n    };\n\n    public handleLessonTeacherChange = (event: any) => {\n        this.setState({\n            lessonTeacher: event.target.value\n        })\n    };\n\n    public render() {\n        return (\n            <div>\n                <Button color=\"primary\" onClick={this.handleOpenLoginDialog}>\n                    <Add/>\n                </Button>\n                <Dialog open={this.state.openDialogWindow} onClose={this.handleClose}\n                        aria-labelledby=\"form-dialog-title\">\n\n                    <DialogTitle id=\"form-dialog-title\">Добавление нового занятия</DialogTitle>\n\n                    <DialogContent>\n                        <FormControl style={{width: '100%'}}>\n                            <InputLabel htmlFor=\"selectLessonNumber\">Номер занятия <span style={{color: 'red'}}>*</span></InputLabel>\n                            <Select\n                                value={this.state.lessonNumber}\n                                onChange={this.handleLessonNumberChange}\n                                input={<Input id=\"selectLessonNumber\"/>}\n                                fullWidth\n                            >\n                                {this.props.lessonTime.map (timeData => {\n                                    return (\n                                        <MenuItem key={Math.random()} value={timeData.lessonNumber + ': ' + timeData.lessonStartTime + ' - ' + timeData.lessonFinishTime}>\n                                            {timeData.lessonNumber + ': ' + timeData.lessonStartTime + ' - ' + timeData.lessonFinishTime}\n                                        </MenuItem>\n                                    )\n                                })}\n                            </Select>\n                        </FormControl>\n                        <TextField\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Название предмета: <span style={{color: 'red'}}>*</span></Typography>}\n                            value={this.state.lessonName}\n                            fullWidth\n                            onChange={this.handleLessonNameChange}\n                        />\n                        <FormControl style={{width: '100%'}}>\n                            <InputLabel htmlFor=\"selectLesson\">Вид занятия <span style={{color: 'red'}}>*</span></InputLabel>\n                            <Select\n                                value={this.state.lessonType}\n                                onChange={this.handleLessonTypeChange}\n                                input={<Input id=\"selectLesson\"/>}\n                                fullWidth\n                            >\n                                <MenuItem value={'Лекция'}>Лекция</MenuItem>\n                                <MenuItem value={'Лабораторная работа'}>Лабораторная работа</MenuItem>\n                                <MenuItem value={'Практика'}>Практика</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <TextField\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Здание, аудитория: </Typography>}\n                            value={this.state.lessonLocation}\n                            fullWidth\n                            onChange={this.handleLessonLocationChange}\n                        />\n                        <FormControl style={{width: '100%'}}>\n                            <InputLabel htmlFor=\"selectTeacher\">Преподаватель</InputLabel>\n                            <Select\n                                value={this.state.lessonTeacher}\n                                onChange={this.handleLessonTeacherChange}\n                                input={<Input id=\"selectTeacher\"/>}\n                                fullWidth\n                            >\n                                {this.props.teachers.map((teacher: TeacherData) => {\n                                    return (\n                                        <MenuItem value={teacher.name} key={teacher.id}>{teacher.name}</MenuItem>\n                                    )\n                                })}\n                            </Select>\n                        </FormControl>\n                    </DialogContent>\n\n                    <DialogActions>\n\n                        <Button onClick={this.confirmAdd} color=\"primary\" disabled={this.state.lessonNumber.length === 0 || this.state.lessonName.length === 0 || this.state.lessonType.length === 0}>\n                            Добавить\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Отмена\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n} from \"@material-ui/core\";\n\nimport {Delete} from \"@material-ui/icons\";\nimport {newLesson} from \"./DialogAddLesson\";\n\ninterface DialogDeleteLessonProps {\n    lesson: newLesson\n    deleteLessonInData: any\n}\n\n\nexport class DialogDeleteLesson extends React.Component<DialogDeleteLessonProps> {\n\n    state = {\n        openDialogWindow: false\n    };\n\n    public handleOpenLoginDialog = () => {\n        this.setState({\n            openDialogWindow: true\n        })\n    };\n\n    public handleClose = () => {\n        this.setState({\n            openDialogWindow: false,\n        })\n    };\n\n    public confirmDelete = () => {\n        this.props.deleteLessonInData(this.props.lesson)\n    };\n\n    public render() {\n        return (\n            <div>\n                <Button onClick={this.handleOpenLoginDialog} style={{paddingRight: 0, paddingLeft: 0, marginTop: '5px'}}>\n                    <Delete/>\n                </Button>\n\n                <Dialog open={this.state.openDialogWindow} onClose={this.handleClose}\n                        aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Удаление занятия</DialogTitle>\n\n                    <DialogContent>\n                        <DialogContentText>\n                            Неделя, месяц: {this.props.lesson.lessonWeek}, {this.props.lesson.lessonDay}\n                        </DialogContentText>\n                        <DialogContentText>\n                            Занятие: {this.props.lesson.lessonName}, {this.props.lesson.lessonType}\n                        </DialogContentText>\n\n\n                    </DialogContent>\n\n                    <DialogActions>\n                        <Button onClick={this.confirmDelete} color=\"primary\">\n                            Удалить\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Отмена\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle, FormControl, Input, InputLabel, MenuItem, Select, TextField,\n    Typography\n} from \"@material-ui/core\";\nimport {Edit} from \"@material-ui/icons\";\nimport {newLesson} from \"./DialogAddLesson\";\nimport {LessonTimeData, TeacherData} from \"../../pages/AccountPage\";\n\ninterface DialogEditLessonProps {\n    lesson: newLesson\n    editLessonInData: any // cb для добавления\n    teachers: TeacherData[]\n    lessonTime: LessonTimeData[]\n}\n\n\nexport class DialogEditLesson extends React.Component<DialogEditLessonProps> {\n\n    public lessonNumber = Number(this.props.lesson.lessonNumber.split(':')[0])-1;\n\n    state = {\n        openDialogWindow: false,\n        lessonNumber: this.props.lessonTime[this.lessonNumber].lessonNumber + ': ' +\n            this.props.lessonTime[this.lessonNumber].lessonStartTime + ' - ' +\n            this.props.lessonTime[this.lessonNumber].lessonFinishTime,\n        lessonName: this.props.lesson.lessonName,\n        lessonType: this.props.lesson.lessonType,\n        lessonLocation: this.props.lesson.lessonLocation,\n        lessonTeacher: this.props.lesson.lessonTeacher\n    };\n\n    public handleOpenLoginDialog = () => {\n        this.setState({\n            openDialogWindow: true\n        })\n    };\n\n    public handleClose = () => {\n        this.setState({\n            openDialogWindow: false,\n        })\n    };\n\n    public confirmEdit= () => {\n        const newLesson: newLesson = {\n            lessonWeek: this.props.lesson.lessonWeek,\n            lessonDay: this.props.lesson.lessonDay,\n            lessonName: this.state.lessonName,\n            lessonType: this.state.lessonType,\n            lessonNumber: this.state.lessonNumber,\n            lessonLocation: this.state.lessonLocation,\n            lessonTeacher: this.state.lessonTeacher\n        };\n        this.props.editLessonInData({oldLesson: this.props.lesson, newLesson: newLesson});\n        this.handleClose()\n    };\n\n    public handleLessonNumberChange = (event: any) => {\n        this.setState({\n            lessonNumber: event.target.value\n        })\n    };\n\n    public handleLessonNameChange = (event: any) => {\n        this.setState({\n            lessonName: event.target.value\n        })\n    };\n\n    public handleLessonTypeChange = (event: any) => {\n        this.setState({\n            lessonType: event.target.value\n        })\n    };\n\n    public handleLessonLocationChange = (event: any) => {\n        this.setState({\n            lessonLocation: event.target.value\n        })\n    };\n\n    public handleLessonTeacherChange = (event: any) => {\n        this.setState({\n            lessonTeacher: event.target.value\n        })\n    };\n\n    public render() {\n        return (\n            <div>\n                <Button onClick={this.handleOpenLoginDialog}  style={{paddingRight: 0, paddingLeft: 0, marginTop: '5px'}}>\n                    <Edit/>\n                </Button>\n\n                <Dialog open={this.state.openDialogWindow} onClose={this.handleClose}\n                        aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Редактирование занятия</DialogTitle>\n\n                    <DialogContent>\n                        <FormControl style={{width: '100%'}}>\n                            <InputLabel htmlFor=\"selectLessonNumber\">Номер занятия</InputLabel>\n                            <Select\n                                value={this.state.lessonNumber}\n                                onChange={this.handleLessonNumberChange}\n                                input={<Input id=\"selectLessonNumber\" />}\n                                fullWidth\n                            >\n                                {this.props.lessonTime.map (timeData => {\n                                    return (\n                                        <MenuItem key={Math.random()} value={timeData.lessonNumber + ': ' + timeData.lessonStartTime + ' - ' + timeData.lessonFinishTime}>\n                                            {timeData.lessonNumber + ': ' + timeData.lessonStartTime + ' - ' + timeData.lessonFinishTime}\n                                        </MenuItem>\n                                    )\n                                })}\n                            </Select>\n                        </FormControl>\n                        <TextField\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Название предмета: <span style={{color: 'red'}}>*</span></Typography>}\n                            value={this.state.lessonName}\n                            fullWidth\n                            onChange={this.handleLessonNameChange}\n                        />\n                        <FormControl style={{width: '100%'}}>\n                            <InputLabel htmlFor=\"selectLesson\">Вид занятия</InputLabel>\n                            <Select\n                                value={this.state.lessonType}\n                                onChange={this.handleLessonTypeChange}\n                                input={<Input id=\"selectLesson\" />}\n                                fullWidth\n                            >\n                                <MenuItem value={'Лекция'}>Лекция</MenuItem>\n                                <MenuItem value={'Лабораторная работа'}>Лабораторная работа</MenuItem>\n                                <MenuItem value={'Практика'}>Практика</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <TextField\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Здание, аудитория: </Typography>}\n                            value={this.state.lessonLocation}\n                            fullWidth\n                            onChange={this.handleLessonLocationChange}\n                        />\n                        <FormControl style={{width: '100%'}}>\n                            <InputLabel htmlFor=\"selectTeacher\">Преподаватель</InputLabel>\n                            <Select\n                                value={this.props.lesson.lessonTeacher}\n                                onChange={this.handleLessonTeacherChange}\n                                input={<Input id=\"selectTeacher\"/>}\n                                fullWidth\n                            >\n                                {this.props.teachers.map((teacher: TeacherData) => {\n                                    return (\n                                        <MenuItem value={teacher.name} key={teacher.id}>{teacher.name}</MenuItem>\n                                    )\n                                })}\n                            </Select>\n                        </FormControl>\n\n                    </DialogContent>\n\n                    <DialogActions>\n\n                        <Button onClick={this.confirmEdit} color=\"primary\" disabled={this.state.lessonName.length === 0}>\n                            Сохранить\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Отмена\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle, TextField,\n    Typography\n} from \"@material-ui/core\";\nimport {PlaylistAdd} from \"@material-ui/icons\";\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport MomentUtils from \"@date-io/moment\";\nimport \"moment/locale/ru\";\nconst uuidv4 = require('uuid/v4');\n\n\ninterface DialogAddTaskLessonProps {\n    lesson: newLesson\n    addNewTaskLesson: any // cb для добавления\n}\n\nexport interface newLesson {\n    lessonWeek: string;\n    lessonDay: string;\n    lessonName: string;\n    lessonType: string;\n    lessonNumber: string;\n    lessonLocation: string;\n    lessonTeacher: string;\n}\n\nexport interface newTaskLesson {\n    lesson: newLesson,\n    taskDate: any,\n    taskText: string,\n    id: string\n}\n\n\nexport class DialogAddTaskLesson extends React.Component<DialogAddTaskLessonProps> {\n\n    state = {\n        openDialogWindow: false,\n        textForTaskLesson: '',\n        dateForTaskLesson: new Date()\n    };\n\n    public handleOpenLoginDialog = () => {\n        this.setState({\n            openDialogWindow: true\n        })\n    };\n\n    public handleClose = () => {\n        this.setState({\n            openDialogWindow: false,\n        })\n    };\n\n    public confirmAdd = () => {\n        const newTaskLesson: newTaskLesson = {\n            lesson: {\n                lessonWeek: this.props.lesson.lessonWeek,\n                lessonDay: this.props.lesson.lessonDay,\n                lessonName: this.props.lesson.lessonName,\n                lessonType: this.props.lesson.lessonType,\n                lessonNumber: this.props.lesson.lessonNumber,\n                lessonLocation: this.props.lesson.lessonLocation,\n                lessonTeacher: this.props.lesson.lessonTeacher\n\n            },\n            taskDate: new Date(this.state.dateForTaskLesson),\n            taskText: this.state.textForTaskLesson,\n            id: uuidv4()\n        };\n        this.props.addNewTaskLesson(newTaskLesson);\n        this.handleClose()\n    };\n\n    public handleTaskLessonTextChange = (event: any) => {\n        this.setState({\n            textForTaskLesson: event.target.value\n        })\n    };\n\n    public handleChangeDate = (value: any) => {\n        this.setState({\n            dateForTaskLesson: value\n        })\n    };\n\n    public render() {\n        return (\n            <div>\n                <Button color=\"primary\" onClick={this.handleOpenLoginDialog}>\n                    <PlaylistAdd/>\n                </Button>\n                <Dialog open={this.state.openDialogWindow} onClose={this.handleClose}\n                        aria-labelledby=\"form-dialog-title\">\n\n                    <DialogTitle id=\"form-dialog-title\">Добавление задания: {this.props.lesson.lessonDay}, {this.props.lesson.lessonWeek} неделя</DialogTitle>\n\n                    <DialogContent>\n                        <Typography variant=\"body1\">Предмет: {this.props.lesson.lessonName}</Typography>\n                        <Typography variant=\"body1\">Тип занятия: {this.props.lesson.lessonType}</Typography>\n                        <Typography variant=\"body1\">Номер пары: {this.props.lesson.lessonNumber}</Typography>\n                        <Typography variant=\"body1\">Преподаватель: {this.props.lesson.lessonTeacher}</Typography>\n                        <Typography variant=\"body1\">Место занятия: {this.props.lesson.lessonLocation}</Typography>\n                        <TextField\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Текст задания: </Typography>}\n                            value={this.state.textForTaskLesson}\n                            fullWidth\n                            onChange={this.handleTaskLessonTextChange}\n                        />\n                        <MuiPickersUtilsProvider utils={MomentUtils} >\n                                <KeyboardDatePicker\n                                    style={{width: '100%'}}\n                                    id=\"mui-pickers-date\"\n                                    invalidDateMessage=\"Неверный формат даты\"\n                                    label=\"На какую дату внести задание:\"\n                                    value={this.state.dateForTaskLesson}\n                                    onChange={this.handleChangeDate}\n                                    KeyboardButtonProps={{\n                                        'aria-label': 'change date',\n                                    }}\n                                />\n\n                        </MuiPickersUtilsProvider>\n\n                    </DialogContent>\n\n                    <DialogActions>\n\n                        <Button onClick={this.confirmAdd} color=\"primary\">\n                            Добавить\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Отмена\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n","import {theme} from \"../Theme\";\nimport {\n    Card,\n    CardContent,\n    CardMedia, Chip,\n    CircularProgress, Divider,\n    Grid,\n    List,\n    ListItem, ListItemSecondaryAction,\n    ListItemText,\n    Typography\n} from \"@material-ui/core\";\nimport {MuiThemeProvider} from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport {DialogDeleteNews} from \"./Dialogs/DialogDeleteNews\";\nimport {DialogEditNews} from \"./Dialogs/DialogEditNews\";\nimport {newsData} from \"../pages/StartPage\";\nimport {DialogAddLesson, newLesson} from \"./Dialogs/DialogAddLesson\";\nimport {DialogDeleteLesson} from \"./Dialogs/DialogDeleteLesson\";\nimport {DialogEditLesson} from \"./Dialogs/DialogEditLesson\";\nimport {DialogAddTaskLesson} from \"./Dialogs/DialogAddTaskLesson\";\nimport {LessonTimeData, TeacherData} from \"../pages/AccountPage\";\n\nexport const LoadingComponent = (\n    <MuiThemeProvider theme={theme}>\n        <div style={{marginTop: '1rem', textAlign: 'center'}}>\n            <CircularProgress/>\n            <div>\n                <Typography variant={\"h6\"}>Пожалуйста, подождите. Данные обновляются.</Typography>\n            </div>\n        </div>\n    </MuiThemeProvider>\n);\n\ninterface NewsComponentProps {\n    newsData: newsData,\n    admin: boolean,\n    getNewsCb?: any\n}\n\nexport default class NewsComponent extends React.Component<NewsComponentProps> {\n\n    public render() {\n        return (\n            <div key={this.props.newsData._id}>\n\n                <Card style={{marginTop: '1rem'}}>\n                    {this.props.admin ? <div style={{display: 'flex', margin: '10px'}}>\n                        <DialogDeleteNews newsData={this.props.newsData}\n                                          getNews={this.props.getNewsCb}/>\n                        <DialogEditNews newsData={this.props.newsData}\n                                        getNews={this.props.getNewsCb}/>\n                    </div> : null}\n\n                    <div style={{textAlign: 'center'}}>\n                        <Grid container spacing={3}>\n                            <Grid item xs={12} sm={6}>\n                                <CardMedia\n                                    style={{\n                                        width: '240',\n                                        height: '220px',\n                                        marginLeft: 'auto',\n                                        marginRight: 'auto',\n                                        margin: '1.5rem',\n                                        gridRowStart: 1,\n                                        gridRowEnd: 2\n                                    }}\n                                    className=\"boxShadow\"\n                                    image={this.props.newsData.img}\n                                    title={this.props.newsData.header}\n                                />\n\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <CardContent>\n                                    <Typography\n                                        variant=\"h6\">{this.props.newsData.header}</Typography>\n                                </CardContent>\n                                <Typography\n                                    variant=\"body1\">{this.props.newsData.body}</Typography>\n                                <Typography variant=\"caption\"\n                                            style={{\n                                                color: 'grey',\n                                                marginLeft: 'auto',\n                                            }}>Дата:&nbsp; {this.props.newsData.data}, &nbsp; Автор: &nbsp;{this.props.newsData.author}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </Card>\n            </div>\n        )\n    }\n}\n\nconst daysInWeek = ['Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'];\n\nconst scheduleString = (lessonTime: LessonTimeData[], teachers: TeacherData[], lesson: newLesson, editLessonInData: any, deleteLessonInData: any, addNewTaskLesson?: any ) => {\n\n    let lessonNumber = Number(lesson.lessonNumber.split(':')[0])-1;\n\n    const lessonNumberString = lessonTime[lessonNumber].lessonNumber + ': ' +\n        lessonTime[lessonNumber].lessonStartTime + ' - ' +\n        lessonTime[lessonNumber].lessonFinishTime;\n\n    let lessonColor: 'primary' | 'default' | 'secondary' = 'primary';\n\n    if (lesson.lessonType === 'Практика') {\n        lessonColor = 'default'\n    } else if (lesson.lessonType === 'Лабораторная работа') {\n        lessonColor = 'secondary'\n    }\n\n    return (\n        <div key={Math.random()} style={{marginTop: '7px'}}>\n            <Grid container spacing={3} key={Math.random()} style={{marginLeft: '1rem', width: '95%'}}>\n                <Grid item xs={12} sm={3}>\n                    <Typography>{lesson.lessonName}</Typography>\n                    <Typography style={{color: 'grey'}}>{lessonNumberString}</Typography>\n                </Grid>\n                <Grid item xs={12} sm={3}>\n                    <Chip size=\"small\" label={lesson.lessonType} color={lessonColor}/>\n                    <Typography style={{color: 'grey'}}>{lesson.lessonTeacher}</Typography>\n                </Grid>\n                <Grid item xs={6} sm={3}>\n                    <Typography>{lesson.lessonLocation}</Typography>\n                </Grid>\n                <Grid item sm={3} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                    {editLessonInData === false ? null :\n                        <DialogDeleteLesson lesson={lesson} deleteLessonInData={deleteLessonInData}/>}\n                    {editLessonInData === false ? null :\n                        <DialogEditLesson teachers={teachers} lesson={lesson} lessonTime={lessonTime} editLessonInData={editLessonInData}/>}\n                    {addNewTaskLesson === undefined ? null :\n                        <DialogAddTaskLesson lesson={lesson} addNewTaskLesson={addNewTaskLesson}/>}\n                </Grid>\n            </Grid>\n            <Divider/>\n        </div>\n    )\n};\n\n\nexport const scheduleListComponent = (lessonTime: LessonTimeData[], teachers: TeacherData[], handleAddLesson: any, editLessonInData: any, deleteLessonInData: any, week: 'Четная' | 'Нечетная', evenWeek: newLesson[], unevenWeek: newLesson[], addNewTaskLesson?: any) => {\n    return (\n        <div>\n            <List dense={true}>\n                {daysInWeek.map((day: string) => {\n                    return (\n                        <div key={'day' + Math.random()} style={{overflowY: 'hidden'}}>\n                            <ListItem>\n                                <ListItemText\n                                    primary={<Typography variant='h6'>{day}</Typography>}\n                                />\n                                <ListItemSecondaryAction>\n                                    {addNewTaskLesson !== undefined ? null :\n                                        <DialogAddLesson lessonDay={day} lessonWeek={week}\n                                                         addLesson={handleAddLesson} lessonTime={lessonTime} teachers={teachers}/>}\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            {evenWeek.map((lesson: newLesson) => {\n                                if (lesson.lessonDay === day && lesson.lessonWeek === week) {\n                                    return (scheduleString(lessonTime, teachers, lesson, editLessonInData, deleteLessonInData, addNewTaskLesson))\n                                }\n                            })}\n                            {unevenWeek.map((lesson: newLesson) => {\n                                if (lesson.lessonDay === day && lesson.lessonWeek === week) {\n                                    return (scheduleString(lessonTime, teachers, lesson, editLessonInData, deleteLessonInData, addNewTaskLesson))\n                                }\n                            })}\n                        </div>\n                    )\n                })}\n            </List>\n        </div>\n    )\n};\n\n\n","import * as React from \"react\";\nimport {Card, CardContent, CardMedia, Grid, Typography} from \"@material-ui/core\";\nimport Http from \"../serverApi/http\";\nimport NewsComponent, {LoadingComponent} from \"../components/UniversalComponents\";\n\n\nexport interface newsData {\n    _id: string\n    header: string,\n    body: string,\n    img: string,\n    author: string,\n    data: string\n}\n\nexport default class StartPage extends React.Component {\n\n    state = {\n        news: []\n    };\n\n    public componentDidMount(): void {\n        const http = new Http();\n        http.getNewsList('/getNewsList')\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        news: [...result]\n                    })\n                }\n            )\n    }\n\n\n    public render() {\n        document.title = 'Главная';\n\n\n        const cardTextArray = [\n            {\n                id: '0',\n                title: 'Задание на дом',\n                subtitle: '',\n                textBody: 'Добавь домашнее задание на любую дату',\n                img: 'https://1.bp.blogspot.com/-rIHSvpNC0ac/W7AMioDMmZI/AAAAAAAATEY/4Kw38DZpWV0Fry7vz29PaO0YMm5qwy5sQCK4BGAYYCw/w1200-h630-p-k-no-nu/IMedia9_Writing.jpg'\n            },\n            {\n                id: '1',\n                title: 'Новости',\n                subtitle: '',\n                textBody: 'Получай всегда актуальные новости КАИ и не только',\n                img: 'https://c.pxhere.com/photos/dd/d8/blogging_computer_desk_notebook_notes_pen_writing-971343.jpg!d'\n            },\n            {\n                id: '2',\n                title: 'Уведомления',\n                subtitle: 'Псс... хочешь немного уведомлений?',\n                textBody: 'Отклоняй надоедливые уведомления каждый раз, когда они почему-то приходят',\n                img: 'http://www.twseo.com.tw/wp-content/uploads/2018/05/a3749ad203d8f65ac6290fde65778583.jpeg'\n            },\n            {\n                id: '3',\n                title: 'Внеси собственное расписание',\n                subtitle: '',\n                textBody: 'Сервис позволяет тебе внести свое расписание, записывать задания на каждый отдельный предмет и отмечать, если оно было уже выполнено!',\n                img: 'https://miro.medium.com/max/4043/0*gzqObH33C3zVLxKg.jpg'\n            },\n            {\n                id: '4',\n                title: 'Следи за своими задачами',\n                subtitle: '',\n                textBody: 'Внеси свои задачи, чтобы не забыть, что нужно сделать. Редактируй их, отмечай выполненные и просматривай их в отдельном хранилище!',\n                img: 'https://i.imgur.com/plWb1GA.jpg'\n            },\n            {\n                id: '5',\n                title: 'Сохрани все важные ссылки',\n                subtitle: '',\n                textBody: 'Сохрани важные ссылки, чтобы не забыть прочитать их позже! Редактируй, добавляй теги, используй поиск по названиям и тегам!',\n                img: 'https://i.pinimg.com/originals/a2/5f/69/a25f69c7252cc082307310bf76c42d95.jpg'\n            },\n\n        ];\n        return (\n            <div>\n                <div style={{flexGrow: 1}}>\n                    <Grid container spacing={3}>\n                        <Grid style={{textAlign: 'center'}} item xs={12} sm={12}>\n\n                                {this.state.news.length === 0 ?\n                                    <CardContent>\n                                        {LoadingComponent}\n                                    </CardContent> :\n                                    <div>\n                                        {this.state.news.map((newsData: newsData) => {\n                                            return (\n                                                <NewsComponent key={newsData._id} newsData={newsData} admin={false} />\n                                            )\n                                        })}\n                                    </div>\n                                }\n\n                        </Grid>\n                        {cardTextArray.map((cardBody) => {\n                            return (\n                                <Grid style={{textAlign: 'center'}} item xs={12} sm={4} key={cardBody.id}>\n                                    <Card>\n                                        {cardBody.img.length > 0 ? <CardMedia\n                                            component=\"img\"\n                                            alt=\"\"\n                                            height=\"140\"\n                                            image={cardBody.img}\n                                            title=\"\"\n                                        /> : null}\n\n                                        <CardContent style={{height: '130px'}}>\n                                            <Typography variant=\"h5\">\n                                                {cardBody.title}\n                                            </Typography>\n                                            <Typography color=\"textSecondary\">\n                                                {cardBody.subtitle}\n                                            </Typography>\n                                            <Typography variant=\"body1\" component=\"p\">\n                                                {cardBody.textBody}\n                                            </Typography>\n                                        </CardContent>\n                                    </Card>\n                                </Grid>\n                            )\n                        })}\n                    </Grid>\n                </div>\n            </div>\n        )\n    }\n}\n","export class Link {\n    public data:string;\n    constructor(data:string) {\n        this.data = data\n    }\n}\n\nexport class DataStorage {\n    public storage:any;\n\n    constructor(storage:any) {\n        this.storage = storage;\n    }\n\n    get getUserData() {\n        return this.storage.data;\n    }\n\n    add(data:string) {\n        this.storage.add(data);\n    }\n\n    logOut () {\n        this.storage.logOut();\n    }\n\n}\n","export class LocalStorage {\n    public data:string;\n    constructor() {\n        // @ts-ignore\n        this.data = JSON.parse(localStorage.getItem('data'));\n\n    }\n\n    add(data:any) {\n        this.data = data;\n        this.save();\n    }\n\n    logOut() {\n        localStorage.removeItem('data');\n    }\n\n    save() {\n        localStorage.setItem('data', JSON.stringify(this.data)); // stringify - преобразование объекта в строку\n    }\n\n\n}\n\n","import React from 'react'\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle, TextField,\n    Typography\n} from \"@material-ui/core\";\nimport Http from \"../../serverApi/http\";\n\ninterface DialogAddNewsProps {\n    getNews: any // функция обновления новостей\n}\n\n\nexport class DialogAddNews extends React.Component<DialogAddNewsProps> {\n\n    state = {\n        openDialogWindow: false,\n        header: '',\n        body: '',\n        author: '',\n        img: ''\n    };\n\n    public handleOpenLoginDialog = () => {\n        this.setState({\n            openDialogWindow: true\n        })\n    };\n\n    public handleClose = () => {\n        this.setState({\n            openDialogWindow: false,\n        })\n    };\n\n    public confirmEdit = () => {\n        const http = new Http();\n        const data = {\n            header: this.state.header,\n            body: this.state.body,\n            author: this.state.author,\n            img: this.state.img,\n            data: new Date()\n        };\n        http.addNews(data, '/addNews')\n            .then (res => res.json())\n            .then (\n                (result)=>{\n                    if (result === true){\n                        this.props.getNews();\n                        this.setState({\n                            openDialogWindow: false\n                        })\n                    }\n                },\n                (err)=>{\n                    console.error(err)\n                }\n            )\n    };\n\n    public handleHeaderChange = (event: any) => {\n        this.setState({\n            header: event.target.value\n        })\n    };\n\n    public handleBodyChange = (event: any) => {\n        this.setState({\n            body: event.target.value\n        })\n    };\n\n    public handleAuthorChange = (event: any) => {\n        this.setState({\n            author: event.target.value\n        })\n    };\n\n    public handleImgChange = (event: any) => {\n        this.setState({\n            img: event.target.value\n        })\n    };\n\n    public render() {\n        return (\n            <div>\n                <Button color=\"primary\" variant=\"contained\" onClick={this.handleOpenLoginDialog}>\n                    Добавить новость\n                </Button>\n\n                <Dialog open={this.state.openDialogWindow} onClose={this.handleClose}\n                        aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Добавление новости</DialogTitle>\n\n                    <DialogContent>\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Заголовок: </Typography>}\n                            type=\"text\"\n                            value={this.state.header}\n                            fullWidth\n                            onChange={this.handleHeaderChange}\n                        />\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Текст новости: </Typography>}\n                            value={this.state.body}\n                            fullWidth\n                            onChange={this.handleBodyChange}\n                        />\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Автор: </Typography>}\n                            value={this.state.author}\n                            fullWidth\n                            onChange={this.handleAuthorChange}\n                        />\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Картинка: </Typography>}\n                            value={this.state.img}\n                            fullWidth\n                            onChange={this.handleImgChange}\n                        />\n\n                    </DialogContent>\n\n                    <DialogActions>\n\n                        <Button onClick={this.confirmEdit} color=\"primary\">\n                            Сохранить\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Отмена\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n","import * as React from \"react\";\nimport {Button, Card, CardContent, TextField, Typography} from \"@material-ui/core\";\nimport Http from \"../serverApi/http\";\nimport {LoadingComponent} from \"./UniversalComponents\";\n\nexport default class SetAdmin extends React.Component {\n\n    state = {\n        adminEmail: '',\n        addConfirm: '',\n        isLoading: false,\n        findUserData: {email: '1', password: '', lastLoginDate: '', registrationDate: '', admin: false}\n    };\n\n    public handleAdminEmailChange = (event: any) => {\n        this.setState({\n            adminEmail: event.target.value\n        })\n    };\n\n    public getUserData = () => {\n        this.setState({\n            isLoading: true,\n            addConfirm: '',\n            findUserData: {email: '1', password: '', lastLoginDate: '', registrationDate: '', admin: false}\n        });\n        const http = new Http();\n        http.getUserDataFromAdmin(this.state.adminEmail, '/getUserDataFromAdmin')\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    if (result !== 'false') {\n                        this.setState({\n                            isLoading: false,\n                            findUserData: result\n                        })\n                    }\n                    if (result === 'false') {\n                        this.setState({\n                            isLoading: false,\n                            addConfirm: 'Пользователь не найден'\n                        })\n                    }\n                }\n            )\n    }\n\n    public addUserAsAdmin = () => {\n        this.setState({\n            isLoading: true,\n            addConfirm: ''\n        });\n        const http = new Http();\n        http.addUserAsAdmin(this.state.findUserData.email, '/addAdmin')\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    if (result === true) {\n                        this.setState({\n                            addConfirm: 'Пользователь успешно добавлен',\n                            isLoading: false,\n                            findUserData: {email: '1', password: '', lastLoginDate: '', registrationDate: '', admin: false}\n                        })\n                    }\n                    if (result === 'false') {\n                        this.setState({\n                            isLoading: false,\n                            addConfirm: 'Пользователь не найден',\n                        })\n                    }\n                }\n            )\n    };\n\n    public removeUserAdmin = () => {\n        this.setState({\n            isLoading: true,\n            addConfirm: ''\n        });\n        const http = new Http();\n        http.removeUserAdmin(this.state.findUserData.email, '/removeUserAdmin')\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    if (result === true) {\n                        this.setState({\n                            addConfirm: 'Пользователь успешно обновлен',\n                            isLoading: false,\n                            findUserData: {email: '1', password: '', lastLoginDate: '', registrationDate: '', admin: false}\n                        })\n                    }\n                    if (result === 'false') {\n                        this.setState({\n                            isLoading: false,\n                            addConfirm: 'Пользователь не найден',\n                        })\n                    }\n                }\n            )\n    };\n\n    public deleteAccount = () => {\n        this.setState({\n            isLoading: true,\n            addConfirm: ''\n        });\n        const http = new Http();\n        http.deleteAccount(this.state.findUserData.email, '/deleteAccount')\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    if (result === true) {\n                        this.setState({\n                            addConfirm: 'Пользователь удален',\n                            isLoading: false,\n                            findUserData: {email: '1', password: '', lastLoginDate: '', registrationDate: '', admin: false}\n                        })\n                    }\n                    if (result === 'false') {\n                        this.setState({\n                            isLoading: false,\n                            addConfirm: 'Пользователь не найден',\n                        })\n                    }\n                }\n            )\n    }\n\n\n    public render() {\n\n        const userData = (\n            <div style={{marginTop: '1rem'}}>\n                <Card>\n                    <CardContent>\n                        <Typography>Email: {this.state.findUserData.email}</Typography>\n                        <Typography>Дата регистрации: {this.state.findUserData.registrationDate}</Typography>\n                        <Typography>Дата последнего входа: {this.state.findUserData.lastLoginDate}</Typography>\n                        <Typography>Администратор: {this.state.findUserData.admin ? <Typography variant=\"button\">Да</Typography> : <Typography variant=\"button\">Нет</Typography>}</Typography>\n                        {this.state.findUserData.admin ?   <Button color=\"primary\" variant=\"contained\" onClick={this.removeUserAdmin}>\n                            Забрать права администратора\n                        </Button> : <Button color=\"primary\" variant=\"contained\" onClick={this.addUserAsAdmin}>\n                            Сделать пользователя администратором\n                        </Button>}\n\n                        <Button variant=\"contained\" onClick={this.deleteAccount} style={{display: 'flex', marginTop: '10px'}}>\n                            Удалить аккаунт\n                        </Button>\n                    </CardContent>\n                </Card>\n            </div>\n        );\n\n        return (\n            <div style={{width: '100%'}}>\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"login\"\n                    label={<Typography>Найти пользователя</Typography>}\n                    fullWidth\n                    onChange={this.handleAdminEmailChange}\n                />\n                <Button color=\"primary\" variant=\"contained\" onClick={this.getUserData}>\n                    Найти\n                </Button>\n\n                {this.state.isLoading ? LoadingComponent : null}\n                {<Typography variant=\"body1\">{this.state.addConfirm}</Typography>}\n                {this.state.findUserData.email !== '1' ? userData : null}\n\n            </div>\n        )\n    }\n}\n","import * as React from \"react\";\nimport {\n    CardContent,\n    ExpansionPanel,\n    ExpansionPanelDetails,\n    ExpansionPanelSummary, Grid,\n    Typography\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Http from \"../serverApi/http\";\nimport {newsData} from \"./StartPage\";\nimport NewsComponent, {LoadingComponent} from \"../components/UniversalComponents\";\nimport {DialogAddNews} from \"../components/Dialogs/DialogAddNews\";\nimport SetAdmin from \"../components/SetAdmin\";\n\nexport default class AdminComponent extends React.Component {\n\n    state = {\n        expanded: '',\n        news: [],\n        isNoOneNews: false\n    };\n\n    public handleChangeExpand = (panel: any) => (event: React.ChangeEvent<{}>, isExpanded: boolean) => {\n        if (isExpanded) {\n            this.setState({\n                expanded: panel\n            })\n        } else {\n            this.setState({\n                expanded: false\n            })\n        }\n        if (panel === 'getNews') {\n            const http = new Http();\n            http.getNewsList('/getNewsList')\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        if (result.length > 0) {\n                            this.setState({\n                                news: [...result]\n                            });\n                        } else {\n                            this.setState({\n                                isNoOneNews: true\n                            })\n                        }\n                    }\n                )\n        }\n    };\n\n    public getNewsList = () => {\n        const http = new Http();\n        http.getNewsList('/getNewsList')\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    if (result.length > 0) {\n                        this.setState({\n                            news: [...result]\n                        }, () => {\n                            console.log(this.state.news)\n                        });\n                    } else {\n                        this.setState({\n                            isNoOneNews: true\n                        })\n                    }\n\n                }\n            )\n    };\n\n    public render() {\n\n        return (\n            <div style={{marginTop: '1rem'}}>\n                <div>\n                    {/* ПРОСМОТР ВСЕХ НОВОСТЕЙ */}\n\n                    <ExpansionPanel expanded={this.state.expanded === 'getNews'}\n                                    onChange={this.handleChangeExpand('getNews')}\n                                    style={{width: '98%', margin: '1em auto'}}>\n                        <ExpansionPanelSummary\n                            expandIcon={<ExpandMoreIcon/>}\n                            aria-controls=\"panel1bh-content\"\n                            id=\"panel1bh-header\"\n                        >\n                            <Typography>Новости на сайте</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            <Grid container spacing={3}>\n                                <Grid item xs={12} sm={12}>\n                                    <DialogAddNews getNews={this.getNewsList}/>\n\n                                    {this.state.news.length === 0 ?\n                                        <CardContent>\n                                            {this.state.isNoOneNews ?\n                                                <Typography>Новостей нет</Typography> : LoadingComponent}\n                                        </CardContent> :\n                                        <div>\n                                            {this.state.news.map((newsData: newsData) => {\n                                                return (\n                                                    <NewsComponent key={newsData._id} newsData={newsData} admin={true} getNewsCb={this.getNewsList}/>\n                                                )\n                                            })}\n                                        </div>\n\n                                    }\n                                </Grid>\n                            </Grid>\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n\n\n                    <ExpansionPanel expanded={this.state.expanded === 'getUserData'}\n                                    onChange={this.handleChangeExpand('getUserData')}\n                                    style={{width: '98%', margin: '1em auto'}}>\n                        <ExpansionPanelSummary\n                            expandIcon={<ExpandMoreIcon/>}\n                            aria-controls=\"panel3bh-content\"\n                            id=\"panel3bh-header\"\n                        >\n                            <Typography>Найти пользователя</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            <SetAdmin/>\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n\n                </div>\n            </div>\n        )\n    }\n\n\n}\n","import * as React from \"react\";\nimport {\n    AppBar,\n    Tab,\n    Tabs,\n} from \"@material-ui/core\";\nimport {theme} from \"../Theme\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport {newLesson} from \"./Dialogs/DialogAddLesson\";\nimport {scheduleListComponent} from \"./UniversalComponents\";\nimport {LessonTimeData, TeacherData} from \"../pages/AccountPage\";\n\ninterface AddTimetableProps {\n    lessons: { evenWeek: newLesson[], unevenWeek: newLesson[] }\n    addLessonInData: any\n    deleteLessonInData: any\n    editLessonInData: any\n    teachers: TeacherData[]\n    lessonTime: LessonTimeData[]\n}\n\nexport default class AddTimetable extends React.Component<AddTimetableProps> {\n\n    state = {\n        tabValue: 0,\n    };\n\n    public componentDidMount(): void {\n        const year = new Date().getFullYear();\n        const month = new Date().getMonth();\n        const today = new Date(year, month, 0).getTime();\n        const now = new Date().getTime();\n        const week = Math.round((now - today) / (1000 * 60 * 60 * 24 * 7));\n        if (week % 2) {\n            this.setState({\n                tabValue: 0\n            })\n        } else {\n            this.setState({\n                tabValue: 1\n            })\n        }\n    }\n\n    public handleChangeTab = (event: React.ChangeEvent<{}>, newValue: number) => {\n        this.setState({\n            tabValue: newValue\n        })\n    };\n\n    public handleChangeIndexTab = (index: number) => {\n        this.setState({\n            tabValue: index\n        })\n    };\n\n    public handleAddLesson = (lessonObject: newLesson) => {\n        this.props.addLessonInData(lessonObject)\n    };\n\n    public deleteLessonInData = (lessonObject: newLesson) => {\n        this.props.deleteLessonInData(lessonObject)\n    };\n\n    public editLessonInData = (lessonObject: newLesson) => {\n        this.props.editLessonInData(lessonObject)\n    };\n\n\n    public render() {\n        const stylesForTab = {\n            textTransform: 'none',\n            minWidth: 72,\n        } as React.CSSProperties;\n\n        const timetableMenu = (\n            <AppBar position=\"static\" color=\"default\" style={{marginTop: '1rem'}}>\n                <Tabs\n                    value={this.state.tabValue}\n                    onChange={this.handleChangeTab}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"fullWidth\"\n                >\n                    return (\n                    <Tab label={'Четная неделя'} style={stylesForTab}/>\n                    <Tab label={'Нечетная неделя'} style={stylesForTab}/>\n                    )\n                </Tabs>\n            </AppBar>\n        );\n\n        return (\n            <div>\n                {timetableMenu}\n                <SwipeableViews axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'} index={this.state.tabValue}\n                                onChangeIndex={this.handleChangeIndexTab}>\n                    <div dir={theme.direction}>\n                        {scheduleListComponent(this.props.lessonTime, this.props.teachers, this.handleAddLesson, this.editLessonInData, this.deleteLessonInData, 'Четная', this.props.lessons.evenWeek, this.props.lessons.unevenWeek)}\n                    </div>\n                    <div dir={theme.direction}>\n                        {scheduleListComponent(this.props.lessonTime, this.props.teachers, this.handleAddLesson, this.editLessonInData, this.deleteLessonInData, 'Нечетная', this.props.lessons.evenWeek, this.props.lessons.unevenWeek)}\n                    </div>\n                </SwipeableViews>\n\n            </div>\n        )\n    }\n}\n","import React, {SyntheticEvent} from 'react';\nimport clsx from 'clsx';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport {amber, green} from '@material-ui/core/colors';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport {makeStyles, Theme} from '@material-ui/core/styles';\nimport {IconButton} from \"@material-ui/core\";\nimport CloseIcon from '@material-ui/icons/Close';\nexport const variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\n\nexport const useStyles1 = makeStyles((theme: Theme) => ({\n    success: {\n        backgroundColor: green[600],\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    warning: {\n        backgroundColor: amber[700],\n    },\n    icon: {\n        fontSize: 20,\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n}));\n\nexport interface Props {\n    className?: string;\n    message?: string;\n    onClose?: () => void;\n    variant: keyof typeof variantIcon;\n}\n\nexport function MySnackbarContentWrapper(props: Props) {\n    const classes = useStyles1();\n    const {className, message, onClose, variant, ...other} = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            className={clsx(classes[variant], className)}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)}/>\n                    {message}\n        </span>\n            }\n            action={[\n                <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\n                    <CloseIcon className={classes.icon} />\n                </IconButton>,\n            ]}\n            {...other}\n        />\n    );\n}\n\ninterface SnackbarProps {\n    variant: \"success\" | \"error\" | \"warning\" | \"info\"\n    message: string,\n}\n\nexport default class SnackbarComponent extends React.Component<SnackbarProps> {\n\n    state = {\n        open: false\n    };\n\n    public handleOpen = () => {\n        this.setState({\n            open: true\n        })\n    };\n\n    public handleClose = (event?: SyntheticEvent, reason?: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({\n            open: false\n        })\n    };\n\n    public render() {\n        return (\n            <div>\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                    open={this.state.open}\n                    autoHideDuration={4000}\n                    onClose={this.handleClose}\n                >\n                    <MySnackbarContentWrapper\n                        onClose={this.handleClose}\n                        variant={this.props.variant}\n                        message={this.props.message}\n                    />\n                </Snackbar>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle, TextField,\n    Typography\n} from \"@material-ui/core\";\nimport {Add} from \"@material-ui/icons\";\nimport \"moment/locale/ru\";\n\ninterface DialogAddTaskLessonProps {\n    addNewTeacher: any // cb для добавления\n}\n\n\nexport class DialogAddNewTeacher extends React.Component<DialogAddTaskLessonProps> {\n\n    state = {\n        openDialogWindow: false,\n        teacherName: '',\n    };\n\n    public handleOpenLoginDialog = () => {\n        this.setState({\n            openDialogWindow: true\n        })\n    };\n\n    public handleClose = () => {\n        this.setState({\n            openDialogWindow: false,\n        })\n    };\n\n\n    public handleTeacherNameChange = (event: any) => {\n        this.setState({\n            teacherName: event.target.value\n        })\n    };\n\n    public addNewTeacher = () => {\n        this.props.addNewTeacher({name: this.state.teacherName})\n    };\n\n    public render() {\n        return (\n            <div>\n                <Button color=\"primary\" onClick={this.handleOpenLoginDialog} style={{marginLeft: '1rem'}}>\n                    Добавить преподавателя\n                </Button>\n                <Dialog open={this.state.openDialogWindow} onClose={this.handleClose}\n                        aria-labelledby=\"form-dialog-title\">\n\n                    <DialogTitle id=\"form-dialog-title\">Добавить нового преподавателя</DialogTitle>\n\n                    <DialogContent>\n\n                        <TextField\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Имя преподавателя: </Typography>}\n                            value={this.state.teacherName}\n                            fullWidth\n                            onChange={this.handleTeacherNameChange}\n                        />\n\n                    </DialogContent>\n\n                    <DialogActions>\n                        <Button onClick={this.addNewTeacher} color=\"primary\">\n                            Добавить\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Отмена\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n} from \"@material-ui/core\";\n\nimport {Delete} from \"@material-ui/icons\";\nimport {TeacherData} from \"../../pages/AccountPage\";\n\n\ninterface DialogDeleteTeacherProps {\n    teacher: TeacherData\n    deleteTeacherInData: (teacher: TeacherData) => void\n}\n\n\nexport class DialogDeleteTeacher extends React.Component<DialogDeleteTeacherProps> {\n\n    state = {\n        openDialogWindow: false\n    };\n\n    public handleOpenLoginDialog = () => {\n        this.setState({\n            openDialogWindow: true\n        })\n    };\n\n    public handleClose = () => {\n        this.setState({\n            openDialogWindow: false,\n        })\n    };\n\n    public confirmDelete = () => {\n        this.props.deleteTeacherInData(this.props.teacher)\n    };\n\n    public render() {\n        return (\n            <div>\n                <Button onClick={this.handleOpenLoginDialog} style={{paddingRight: 0, paddingLeft: 0, marginTop: '5px'}}>\n                    <Delete/>\n                </Button>\n\n                <Dialog open={this.state.openDialogWindow} onClose={this.handleClose}\n                        aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Удаление преподавателя</DialogTitle>\n\n                    <DialogContent>\n                        <DialogContentText>\n                            Вы действительно хотите удалить этого преподавателя?\n                        </DialogContentText>\n                        <DialogContentText>\n                            {this.props.teacher.name}\n                        </DialogContentText>\n                    </DialogContent>\n\n                    <DialogActions>\n                        <Button onClick={this.confirmDelete} color=\"primary\">\n                            Удалить\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Отмена\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport {\n    Avatar,\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle, TextField, Typography,\n} from \"@material-ui/core\";\nimport {LessonTimeData} from \"../../pages/AccountPage\";\nimport {TimePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\n\nconst uuidv4 = require('uuid/v4');\n\ninterface DialogEditLessonTimeProps {\n    editLessonTimeInData: any // cb для добавления\n    lessonTime: LessonTimeData[]\n}\n\n\nexport class DialogEditLessonTime extends React.Component<DialogEditLessonTimeProps> {\n\n    state = {\n        openDialogWindow: false,\n        firstLessonStart: this.props.lessonTime[0].lessonStartTime,\n        firstLessonFinish: this.props.lessonTime[0].lessonFinishTime,\n        secondLessonStart: this.props.lessonTime[1].lessonStartTime,\n        secondLessonFinish: this.props.lessonTime[1].lessonFinishTime,\n        thirdLessonStart: this.props.lessonTime[2].lessonStartTime,\n        thirdLessonFinish: this.props.lessonTime[2].lessonFinishTime,\n        fourthLessonStart: this.props.lessonTime[3].lessonStartTime,\n        fourthLessonFinish: this.props.lessonTime[3].lessonFinishTime,\n        fifthLessonStart: this.props.lessonTime[4].lessonStartTime,\n        fifthLessonFinish: this.props.lessonTime[4].lessonFinishTime,\n        sixthLessonStart: this.props.lessonTime[5].lessonStartTime,\n        sixthLessonFinish: this.props.lessonTime[5].lessonFinishTime,\n    };\n\n    public handleOpenLoginDialog = () => {\n        this.setState({\n            openDialogWindow: true\n        })\n    };\n\n    public handleClose = () => {\n        this.setState({\n            openDialogWindow: false,\n        })\n    };\n\n    public handleLessonNumberChange = (event: any) => {\n        this.setState({\n            lessonNumber: event.target.value\n        })\n    };\n\n    public handleLessonNameChange = (event: any) => {\n        this.setState({\n            lessonName: event.target.value\n        })\n    };\n\n    public handleLessonTypeChange = (event: any) => {\n        this.setState({\n            lessonType: event.target.value\n        })\n    };\n\n    public handleLessonLocationChange = (event: any) => {\n        this.setState({\n            lessonLocation: event.target.value\n        })\n    };\n\n    public handleLessonTeacherChange = (event: any) => {\n        this.setState({\n            lessonTeacher: event.target.value\n        })\n    };\n\n    public confirmEdit = () => {\n        const newLessonTimeSchedule: LessonTimeData[] = [\n            {\n                id: uuidv4(),\n                lessonNumber: 1,\n                lessonStartTime: this.state.firstLessonStart,\n                lessonFinishTime: this.state.firstLessonFinish\n            },\n            {\n                id: uuidv4(),\n                lessonNumber: 2,\n                lessonStartTime: this.state.secondLessonStart,\n                lessonFinishTime: this.state.secondLessonFinish\n            },\n            {\n                id: uuidv4(),\n                lessonNumber: 3,\n                lessonStartTime: this.state.thirdLessonStart,\n                lessonFinishTime: this.state.thirdLessonFinish\n            },\n            {\n                id: uuidv4(),\n                lessonNumber: 4,\n                lessonStartTime: this.state.fourthLessonStart,\n                lessonFinishTime: this.state.fourthLessonFinish\n            },\n            {\n                id: uuidv4(),\n                lessonNumber: 5,\n                lessonStartTime: this.state.fifthLessonStart,\n                lessonFinishTime: this.state.fifthLessonFinish\n            },\n            {\n                id: uuidv4(),\n                lessonNumber: 6,\n                lessonStartTime: this.state.sixthLessonStart,\n                lessonFinishTime: this.state.sixthLessonFinish\n            }\n        ];\n        this.props.editLessonTimeInData(newLessonTimeSchedule)\n    };\n\n    public normalizeLessonTime = (date: string) => {\n        let lessonTime = new Date(date).toString().split(' ')[4];  // 9:00:00\n        let normalizedLessonTime = lessonTime.split(':'); // ['9'], ['00'], ['00']\n        const resultTime = normalizedLessonTime[0] + ':' + normalizedLessonTime[1];\n        return (resultTime)\n    };\n\n    public handleChangeStartTimeFirst = (date: any) => {\n        this.setState({\n            firstLessonStart: this.normalizeLessonTime(date)\n        })\n    };\n\n    public handleChangeFinishTimeFirst = (date: any) => {\n        this.setState({\n            firstLessonFinish: this.normalizeLessonTime(date)\n        })\n    };\n\n    public handleChangeStartTimeSecond = (date: any) => {\n        this.setState({\n            secondLessonStart: this.normalizeLessonTime(date)\n        })\n    };\n\n    public handleChangeFinishTimeSecond = (date: any) => {\n        this.setState({\n            secondLessonFinish: this.normalizeLessonTime(date)\n        })\n    };\n\n    public handleChangeStartTimeThird = (date: any) => {\n        this.setState({\n            thirdLessonStart: this.normalizeLessonTime(date)\n        })\n    };\n\n    public handleChangeFinishTimeThird = (date: any) => {\n        this.setState({\n            thirdLessonFinish: this.normalizeLessonTime(date)\n        })\n    };\n\n    public handleChangeStartTimeFourth = (date: any) => {\n        this.setState({\n            fourthLessonStart: this.normalizeLessonTime(date)\n        })\n    };\n\n    public handleChangeFinishTimeFourth = (date: any) => {\n        this.setState({\n            fourthLessonFinish: this.normalizeLessonTime(date)\n        })\n    };\n\n    public handleChangeStartTimeFifth = (date: any) => {\n        this.setState({\n            fifthLessonStart: this.normalizeLessonTime(date)\n        })\n    };\n\n    public handleChangeFinishTimeFifth = (date: any) => {\n        this.setState({\n            fifthLessonFinish: this.normalizeLessonTime(date)\n        })\n    };\n\n    public handleChangeStartTimeSixth = (date: any) => {\n        this.setState({\n            sixthLessonStart: this.normalizeLessonTime(date)\n        })\n    };\n\n    public handleChangeFinishTimeSixth = (date: any) => {\n        this.setState({\n            sixthLessonFinish: this.normalizeLessonTime(date)\n        })\n    };\n\n\n    public render() {\n        return (\n            <div>\n                <Button color=\"primary\" onClick={this.handleOpenLoginDialog} style={{marginLeft: '1rem'}}>\n                    Изменить время занятий\n                </Button>\n                <MuiPickersUtilsProvider utils={MomentUtils}>\n\n                    <Dialog open={this.state.openDialogWindow} onClose={this.handleClose}\n                            aria-labelledby=\"form-dialog-title\" maxWidth={\"xl\"}>\n                        <DialogTitle id=\"form-dialog-title\">Изменить время занятий</DialogTitle>\n\n                        <DialogContent>\n                            <div style={{display: 'flex'}}>\n                                <Typography color={\"primary\"} variant={\"caption\"} style={{fontSize: '1.3rem'}}>\n                                    1\n                                </Typography>\n                                <TimePicker\n                                    ampm={false}\n                                    label=\"Начало\"\n                                    value={'2018-01-01T' + `${this.state.firstLessonStart.split(':')[0].length === 1 ? '0' + this.state.firstLessonStart : this.state.firstLessonStart}` + ':00'}\n                                    onChange={this.handleChangeStartTimeFirst}\n                                    style={{width: '120px', marginLeft: '1rem'}}\n                                    okLabel={'Сохранить'}\n                                    cancelLabel={'Отмена'}\n                                />\n                                <TimePicker\n                                    ampm={false}\n                                    label=\"Конец\"\n                                    value={'2018-01-01T' + `${this.state.firstLessonFinish.split(':')[0].length === 1 ? '0' + this.state.firstLessonFinish : this.state.firstLessonFinish}` + ':00'}\n                                    onChange={this.handleChangeFinishTimeFirst}\n                                    style={{width: '120px'}}\n                                    okLabel={'Сохранить'}\n                                    cancelLabel={'Отмена'}\n                                />\n                            </div>\n                            <div style={{display: 'flex', marginTop: '0.5rem'}}>\n                                <Typography color={\"primary\"} variant={\"caption\"} style={{fontSize: '1.3rem'}}>\n                                    2\n                                </Typography>\n                                <TimePicker\n                                    ampm={false}\n                                    label=\"Начало\"\n                                    value={'2018-01-01T' + `${this.state.secondLessonStart.split(':')[0].length === 1 ? '0' + this.state.secondLessonStart : this.state.secondLessonStart}` + ':00'}\n                                    onChange={this.handleChangeStartTimeSecond}\n                                    style={{width: '120px', marginLeft: '1rem'}}\n                                    okLabel={'Сохранить'}\n                                    cancelLabel={'Отмена'}\n                                />\n                                <TimePicker\n                                    ampm={false}\n                                    label=\"Конец\"\n                                    value={'2018-01-01T' + `${this.state.secondLessonFinish.split(':')[0].length === 1 ? '0' + this.state.secondLessonFinish : this.state.secondLessonFinish}` + ':00'}\n                                    onChange={this.handleChangeFinishTimeSecond}\n                                    style={{width: '120px'}}\n                                    okLabel={'Сохранить'}\n                                    cancelLabel={'Отмена'}\n                                />\n                            </div>\n                            <div style={{display: 'flex', marginTop: '0.5rem'}}>\n                                <Typography color={\"primary\"} variant={\"caption\"} style={{fontSize: '1.3rem'}}>\n                                    3\n                                </Typography>\n                                <TimePicker\n                                    ampm={false}\n                                    label=\"Начало\"\n                                    value={'2018-01-01T' + `${this.state.thirdLessonStart.split(':')[0].length === 1 ? '0' + this.state.thirdLessonStart : this.state.thirdLessonStart}` + ':00'}\n                                    onChange={this.handleChangeStartTimeThird}\n                                    style={{width: '120px', marginLeft: '1rem'}}\n                                    okLabel={'Сохранить'}\n                                    cancelLabel={'Отмена'}\n                                />\n                                <TimePicker\n                                    ampm={false}\n                                    label=\"Конец\"\n                                    value={'2018-01-01T' + `${this.state.thirdLessonFinish.split(':')[0].length === 1 ? '0' + this.state.thirdLessonFinish : this.state.thirdLessonFinish}` + ':00'}\n                                    onChange={this.handleChangeFinishTimeThird}\n                                    style={{width: '120px'}}\n                                    okLabel={'Сохранить'}\n                                    cancelLabel={'Отмена'}\n                                />\n                            </div>\n                            <div style={{display: 'flex', marginTop: '0.5rem'}}>\n                                <Typography color={\"primary\"} variant={\"caption\"} style={{fontSize: '1.3rem'}}>\n                                    4\n                                </Typography>\n                                <TimePicker\n                                    ampm={false}\n                                    label=\"Начало\"\n                                    value={'2018-01-01T' + `${this.state.fourthLessonStart.split(':')[0].length === 1 ? '0' + this.state.fourthLessonStart : this.state.fourthLessonStart}` + ':00'}\n                                    onChange={this.handleChangeStartTimeFourth}\n                                    style={{width: '120px', marginLeft: '1rem'}}\n                                    okLabel={'Сохранить'}\n                                    cancelLabel={'Отмена'}\n                                />\n                                <TimePicker\n                                    ampm={false}\n                                    label=\"Конец\"\n                                    value={'2018-01-01T' + `${this.state.fourthLessonFinish.split(':')[0].length === 1 ? '0' + this.state.fourthLessonFinish : this.state.fourthLessonFinish}` + ':00'}\n                                    onChange={this.handleChangeFinishTimeFourth}\n                                    style={{width: '120px'}}\n                                    okLabel={'Сохранить'}\n                                    cancelLabel={'Отмена'}\n                                />\n                            </div>\n                            <div style={{display: 'flex', marginTop: '0.5rem'}}>\n                                <Typography color={\"primary\"} variant={\"caption\"} style={{fontSize: '1.3rem'}}>\n                                    5\n                                </Typography>\n                                <TimePicker\n                                    ampm={false}\n                                    label=\"Начало\"\n                                    value={'2018-01-01T' + `${this.state.fifthLessonStart.split(':')[0].length === 1 ? '0' + this.state.fifthLessonStart : this.state.fifthLessonStart}` + ':00'}\n                                    onChange={this.handleChangeStartTimeFifth}\n                                    style={{width: '120px', marginLeft: '1rem'}}\n                                    okLabel={'Сохранить'}\n                                    cancelLabel={'Отмена'}\n                                />\n                                <TimePicker\n                                    ampm={false}\n                                    label=\"Конец\"\n                                    value={'2018-01-01T' + `${this.state.fifthLessonFinish.split(':')[0].length === 1 ? '0' + this.state.fifthLessonFinish : this.state.fifthLessonFinish}` + ':00'}\n                                    onChange={this.handleChangeFinishTimeFifth}\n                                    style={{width: '120px'}}\n                                    okLabel={'Сохранить'}\n                                    cancelLabel={'Отмена'}\n                                />\n                            </div>\n                            <div style={{display: 'flex', marginTop: '0.5rem'}}>\n                                <Typography color={\"primary\"} variant={\"caption\"} style={{fontSize: '1.3rem'}}>\n                                    6\n                                </Typography>\n                                <TimePicker\n                                    ampm={false}\n                                    label=\"Начало\"\n                                    value={'2018-01-01T' + `${this.state.sixthLessonStart.split(':')[0].length === 1 ? '0' + this.state.sixthLessonStart : this.state.sixthLessonStart}` + ':00'}\n                                    onChange={this.handleChangeStartTimeSixth}\n                                    style={{width: '120px', marginLeft: '1rem'}}\n                                    okLabel={'Сохранить'}\n                                    cancelLabel={'Отмена'}\n                                />\n                                <TimePicker\n                                    ampm={false}\n                                    label=\"Конец\"\n                                    value={'2018-01-01T' + `${this.state.sixthLessonFinish.split(':')[0].length === 1 ? '0' + this.state.sixthLessonFinish : this.state.sixthLessonFinish}` + ':00'}\n                                    onChange={this.handleChangeFinishTimeSixth}\n                                    style={{width: '120px'}}\n                                    okLabel={'Сохранить'}\n                                    cancelLabel={'Отмена'}\n                                />\n                            </div>\n                        </DialogContent>\n\n                        <DialogActions>\n\n                            <Button onClick={this.confirmEdit} color=\"primary\">\n                                Сохранить\n                            </Button>\n                            <Button onClick={this.handleClose} color=\"primary\">\n                                Отмена\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                </MuiPickersUtilsProvider>\n\n            </div>\n        )\n    }\n}\n","import * as React from \"react\";\nimport {DataStorage} from \"../serverApi/dataStorage\";\nimport {LocalStorage} from \"../serverApi/localStorage\";\nimport Http from \"../serverApi/http\";\nimport {LoadingComponent} from \"../components/UniversalComponents\";\nimport {\n    AppBar, Avatar, Chip, Divider, ExpansionPanel, ExpansionPanelDetails, ExpansionPanelSummary,\n    Grid, IconButton,\n    List,\n    ListItem,\n    ListItemSecondaryAction,\n    ListItemText,\n    Tab,\n    Tabs,\n    Typography\n} from \"@material-ui/core\";\nimport SwipeableViews from 'react-swipeable-views';\nimport {theme} from \"../Theme\";\nimport {Dashboard, Edit, Fingerprint, Group, ListAlt, Person, Security} from \"@material-ui/icons\";\nimport AdminComponent from \"./AdminComponent\";\nimport AddTimetable from \"../components/AddTimetable\";\nimport {newLesson} from \"../components/Dialogs/DialogAddLesson\";\nimport {newTaskLesson} from \"../components/Dialogs/DialogAddTaskLesson\";\nimport SnackbarComponent, {MySnackbarContentWrapper} from \"../components/Dialogs/SnackBar\";\nimport {DialogAddNewTeacher} from \"../components/Dialogs/DialogAddNewTeacher\";\nimport {DialogDeleteTeacher} from \"../components/Dialogs/DialogDeleteTeacher\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {TimeIcon} from \"@material-ui/pickers/_shared/icons/TimeIcon\";\nimport {DialogEditLessonTime} from \"../components/Dialogs/DialogEditLessonTime\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport {SyntheticEvent} from \"react\";\n\nconst uuidv4 = require('uuid/v4');\n\ninterface AccountPageState {\n    isDataConfirmed: boolean | null,\n    data: User,\n    tabValue: number,\n    openSnackbar: boolean\n}\n\nexport interface TeacherData {\n    name: string\n    id: number\n}\n\nexport interface LessonTimeData {\n    lessonNumber: number\n    lessonStartTime: string\n    lessonFinishTime: string\n    id: string\n}\n\nexport interface User {\n    email: string,\n    registrationDate: string,\n    password: string,\n    admin: boolean,\n    lastLoginDate: string,\n    lessons: {\n        evenWeek: newLesson[],\n        unevenWeek: newLesson[]\n    },\n    lessonTasks: newTaskLesson[],\n    teachers: TeacherData[],\n    lessonTime: LessonTimeData[]\n}\n\n\nexport default class AccountPage extends React.Component<AccountPageState> {\n\n    state = {\n        isDataConfirmed: null,\n        tabValue: 0,\n        data: {\n            email: '',\n            registrationDate: '',\n            password: '',\n            admin: false,\n            lastLoginDate: '',\n            lessons: {evenWeek: [], unevenWeek: []},\n            lessonTasks: [],\n            teachers: [],\n            lessonTime: []\n        },\n        openSnackbar: false\n    };\n\n    public theme: any;\n\n    componentDidMount(): void {\n        document.title = 'Аккаунт';\n        const storage = new DataStorage(new LocalStorage());\n        const http = new Http();\n        if (storage.getUserData !== null) {\n            http.loginWithToken(storage.getUserData, '/user')\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        if (result.email !== undefined) {\n                            this.setState({\n                                data: result\n                            }, () => {\n                                this.setState({\n                                    isDataConfirmed: true\n                                })\n                            })\n                        } else {\n                            this.setState({\n                                isDataConfirmed: false\n                            }, () => {\n                                storage.logOut()\n                            })\n                        }\n                    }, (error) => {\n                        console.log(error)\n                    }\n                );\n        } else {\n            this.setState({\n                isDataConfirmed: false\n            })\n        }\n    }\n\n    public handleChangeTab = (event: React.ChangeEvent<{}>, newValue: number) => {\n        this.setState({\n            tabValue: newValue\n        })\n    };\n\n    public handleChangeIndexTab = (index: number) => {\n        this.setState({\n            tabValue: index\n        })\n    };\n\n    public updateHandler = (data: User) => {\n        const storage = new DataStorage(new LocalStorage());\n        const http = new Http();\n        if (storage.getUserData !== null) {\n            http.updateUserData(data, '/updateData')\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        if (result.email !== undefined) {\n                            this.setState({\n                                data: result\n                            }, () => {\n                                this.setState({\n                                    isDataConfirmed: true\n                                });\n                                this.setState({\n                                    openSnackbar: true\n                                });\n                            })\n                        } else {\n                            this.setState({\n                                isDataConfirmed: false\n                            }, () => {\n                                storage.logOut()\n                            })\n                        }\n                    }, (error) => {\n                        console.log(error)\n                    }\n                );\n        } else {\n            this.setState({\n                isDataConfirmed: false\n            })\n        }\n    };\n\n    public addLessonInData = (lesson: newLesson) => {\n\n        const newData: User = this.state.data;\n        if (lesson.lessonWeek === 'Четная') {\n            newData.lessons.evenWeek.push(lesson)\n        }\n\n        if (lesson.lessonWeek === 'Нечетная') {\n            newData.lessons.unevenWeek.push(lesson)\n        }\n        this.updateHandler(newData)\n\n    };\n\n    public deleteLessonInData = (lesson: newLesson) => {\n        const newData: User = this.state.data;\n        if (lesson.lessonWeek === 'Четная') {\n            newData.lessons.evenWeek.splice(newData.lessons.evenWeek.indexOf(lesson), 1)\n        }\n\n        if (lesson.lessonWeek === 'Нечетная') {\n            newData.lessons.unevenWeek.splice(newData.lessons.unevenWeek.indexOf(lesson), 1)\n        }\n        this.updateHandler(newData)\n    };\n\n    public editLessonInData = (lessons: any) => {\n        const newData: User = this.state.data;\n        if (lessons.newLesson.lessonWeek === 'Четная') {\n            newData.lessons.evenWeek[newData.lessons.evenWeek.indexOf(lessons.oldLesson)] = lessons.newLesson\n        }\n\n        if (lessons.newLesson.lessonWeek === 'Нечетная') {\n            newData.lessons.unevenWeek[newData.lessons.unevenWeek.indexOf(lessons.oldLesson)] = lessons.newLesson\n        }\n        this.updateHandler(newData)\n    };\n\n    public handleEditLessonTimeInData = (lessonSchedule: LessonTimeData[]) => {\n        const newData: User = this.state.data;\n        newData.lessonTime = lessonSchedule;\n        this.updateHandler(newData)\n    };\n\n    public addTeacherInData = (teacher: TeacherData) => {\n        const newData: User = this.state.data;\n        const newTeacher: TeacherData = {\n            name: teacher.name,\n            id: uuidv4()\n        };\n        newData.teachers.push(newTeacher);\n        this.updateHandler(newData)\n    };\n\n    public deleteTeacherInData = (teacher: TeacherData) => {\n        const newData: User = this.state.data;\n        newData.teachers.forEach((teacherForDelete: TeacherData) => {\n            if (teacherForDelete.id === teacher.id) {\n                newData.teachers.splice(newData.teachers.indexOf(teacherForDelete), 1)\n            }\n        });\n        this.updateHandler(newData)\n    };\n\n    public render() {\n\n        const stylesForTab = {\n            textTransform: 'none',\n            minWidth: 72,\n        } as React.CSSProperties;\n\n        const tabsArray = [\n            // {label: 'Учетная запись', icon: <Person/>},\n            {label: 'Мое расписание', icon: <ListAlt/>},\n            // {label: 'Безопасность', icon: <Security/>},\n            {label: 'Сервисы', icon: <Dashboard/>},\n            {label: 'Админ', icon: <Fingerprint/>, admin: true},\n        ];\n\n        const mobileMenu = (\n            <AppBar position=\"static\" color=\"default\" className=\"topBarMin top\">\n                <Tabs\n                    value={this.state.tabValue}\n                    onChange={this.handleChangeTab}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"fullWidth\"\n                >\n                    {tabsArray.map((tabData: any) => {\n                        if (this.state.data.admin === true && tabData.label === 'Админ') {\n                            return (\n                                <Tab icon={tabData.icon} style={stylesForTab}\n                                     key={tabData.label}/>\n                            )\n                        } else {\n                            if (tabData.admin === undefined) {\n                                return (\n                                    <Tab icon={tabData.icon} style={stylesForTab}\n                                         key={tabData.label}/>\n                                )\n                            }\n                        }\n                    })}\n                </Tabs>\n            </AppBar>\n        );\n\n        const fullMenu = (\n            <AppBar position=\"static\" color=\"default\" className=\"topBarMax\">\n                <Tabs\n                    value={this.state.tabValue}\n                    onChange={this.handleChangeTab}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"fullWidth\"\n                >\n                    {tabsArray.map((tabData: any) => {\n                        if (this.state.data.admin === true && tabData.label === 'Админ') {\n                            return (\n                                <Tab label={tabData.label} icon={tabData.icon} style={stylesForTab}\n                                     key={tabData.label}/>\n                            )\n                        } else {\n                            if (tabData.admin === undefined) {\n                                return (\n                                    <Tab label={tabData.label} icon={tabData.icon} style={stylesForTab}\n                                         key={tabData.label}/>\n                                )\n                            }\n                        }\n                    })}\n                </Tabs>\n            </AppBar>\n        );\n\n        const accountDataComponent = (\n            <div style={{marginTop: '1rem', overflow: 'hidden'}}>\n                <Grid container spacing={3}>\n                    <Grid style={{textAlign: 'center'}} item xs={6} sm={6}>\n\n                        <Typography variant=\"body1\">\n                            Email:\n                        </Typography>\n\n                    </Grid>\n                    <Grid style={{textAlign: 'center'}} item xs={6} sm={6}>\n\n                        <Typography variant=\"body1\">\n                            {this.state.data.email}\n                        </Typography>\n\n                    </Grid>\n                </Grid>\n            </div>\n        );\n\n        const ServiceComponent = () => {\n            return (\n                <div >\n                    <ExpansionPanel style={{width: '98%', margin: '1em auto'}}>\n                        <ExpansionPanelSummary\n                            expandIcon={<ExpandMoreIcon />}\n                            aria-controls=\"panel1a-content\"\n                            id=\"panel1a-header\"\n                        >\n                            <Group style={{marginRight: '0.5rem'}}/><Typography>Список преподавателей</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails style={{display: 'block', padding: 0}}>\n                            <DialogAddNewTeacher addNewTeacher={this.addTeacherInData}/>\n                            <List>\n                            {this.state.data.teachers.map((teacher: TeacherData) => {\n                                return (\n                                    <ListItem key={teacher.id} >\n                                        <ListItemText>\n                                            <Typography variant=\"body1\">{teacher.name}</Typography>\n                                        </ListItemText>\n                                        <DialogDeleteTeacher teacher={teacher} deleteTeacherInData={this.deleteTeacherInData}/>\n                                        <Divider/>\n                                    </ListItem>\n                                )\n                            })}\n                            </List>\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                    <ExpansionPanel style={{width: '98%', margin: '1em auto'}} expanded={true}>\n                        <ExpansionPanelSummary\n                            // expandIcon={<ExpandMoreIcon />}\n                            aria-controls=\"panel1a-content\"\n                            id=\"panel1a-header1\"\n                        >\n                            <TimeIcon style={{marginRight: '0.5rem'}}/><Typography>Расписание занятий</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails style={{display: 'block', padding: 0}}>\n                            <DialogEditLessonTime editLessonTimeInData={this.handleEditLessonTimeInData} lessonTime={this.state.data.lessonTime}/>\n                            {this.state.data.lessonTime.map((lessonTime: LessonTimeData) => {\n                                return (\n                                    <ListItem key={lessonTime.id} >\n                                        <Chip variant=\"outlined\" color=\"primary\" avatar={<Avatar>{lessonTime.lessonNumber}</Avatar>}\n                                              label={<Typography>{lessonTime.lessonStartTime} - {lessonTime.lessonFinishTime}</Typography>}\n\n                                        />\n                                        <Divider/>\n                                    </ListItem>\n                                )\n                            })}\n\n\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                </div>\n            )\n        };\n\n        const accountPageBody = (\n            <div>\n                {mobileMenu}\n                {fullMenu}\n                <SwipeableViews axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'} index={this.state.tabValue}\n                                onChangeIndex={this.handleChangeIndexTab}>\n\n                    {/*{this.state.isDataConfirmed ? <div dir={theme.direction}>{accountDataComponent}</div> : <div/>}*/}\n                    {this.state.isDataConfirmed ?\n                        <div dir={theme.direction}>\n                            <AddTimetable lessons={this.state.data.lessons}\n                                          teachers={this.state.data.teachers}\n                                          addLessonInData={this.addLessonInData}\n                                          deleteLessonInData={this.deleteLessonInData}\n                                          editLessonInData={this.editLessonInData}\n                                          lessonTime={this.state.data.lessonTime}\n                            />\n                        </div>\n                        :\n                        <div/>\n                    }\n                    {/*<div dir={theme.direction}>text3</div>*/}\n                    {this.state.isDataConfirmed ?\n                        <div dir={theme.direction}>\n                            <ServiceComponent/>\n                        </div>\n                        :\n                        <div/>\n                    }\n                    <div dir={theme.direction}><AdminComponent/></div>\n                </SwipeableViews>\n            </div>\n        );\n\n        const waitingComponent = (\n            <div>\n                <Typography variant={\"h6\"}>Пожалуйста, подождите. Данные обновляются.</Typography>\n            </div>\n        );\n\n        const handleClose = (event?: SyntheticEvent, reason?: string) => {\n            if (reason === 'clickaway') {\n                return;\n            }\n\n           this.setState({\n               openSnackbar: false\n           })\n        };\n        return (\n            <div>\n                {this.state.isDataConfirmed === null ? LoadingComponent : null}\n                {this.state.data !== undefined ? accountPageBody : waitingComponent}\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                    open={this.state.openSnackbar}\n                    onClose={handleClose}\n                >\n                    <MySnackbarContentWrapper\n                        onClose={handleClose}\n                        variant={\"success\"}\n                        message={'Данные обновлены'}\n                    />\n                </Snackbar>\n            </div>\n        )\n    }\n}\n","import * as React from \"react\";\nimport {AppBar, Tab, Tabs} from \"@material-ui/core\";\nimport {theme} from \"../Theme\";\nimport {LoadingComponent, scheduleListComponent} from \"../components/UniversalComponents\";\nimport {DataStorage} from \"../serverApi/dataStorage\";\nimport {LocalStorage} from \"../serverApi/localStorage\";\nimport Http from \"../serverApi/http\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport {newTaskLesson} from \"../components/Dialogs/DialogAddTaskLesson\";\nimport {User} from \"./AccountPage\";\nimport SnackbarComponent from \"../components/Dialogs/SnackBar\";\n\nexport default class SchedulePage extends React.Component {\n\n    state = {\n        isDataConfirmed: null,\n        tabValue: 0,\n        data: {\n            email: '',\n            registrationDate: '',\n            password: '',\n            admin: false,\n            lastLoginDate: '',\n            lessons: {evenWeek: [], unevenWeek: []},\n            lessonTasks: [],\n            teachers: [],\n            lessonTime: []\n        },\n        openSnackbar: false\n    };\n\n    componentDidMount(): void {\n        document.title = 'Расписание занятий';\n        const year = new Date().getFullYear();\n        const month = new Date().getMonth();\n        const today = new Date(year, month, 0).getTime();\n        const now = new Date().getTime();\n        const week = Math.round((now - today) / (1000 * 60 * 60 * 24 * 7));\n        if (week % 2) {\n            this.setState({\n                tabValue: 0\n            })\n        } else {\n            this.setState({\n                tabValue: 1\n            })\n        }\n        const storage = new DataStorage(new LocalStorage());\n        const http = new Http();\n        if (storage.getUserData !== null) {\n            http.loginWithToken(storage.getUserData, '/user')\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        if (result.email !== undefined) {\n                            this.setState({\n                                data: result\n                            }, () => {\n                                this.setState({\n                                    isDataConfirmed: true\n                                })\n                            })\n                        } else {\n                            this.setState({\n                                isDataConfirmed: false\n                            }, () => {\n                                storage.logOut()\n                            })\n                        }\n                    }, (error) => {\n                        console.log(error)\n                    }\n                );\n        } else {\n            this.setState({\n                isDataConfirmed: false\n            })\n        }\n    }\n\n    public handleChangeTab = (event: React.ChangeEvent<{}>, newValue: number) => {\n        this.setState({\n            tabValue: newValue\n        })\n    };\n\n    public handleChangeIndexTab = (index: number) => {\n        this.setState({\n            tabValue: index\n        })\n    };\n\n    public updateHandler = (data: User) => {\n        const storage = new DataStorage(new LocalStorage());\n        const http = new Http();\n        if (storage.getUserData !== null) {\n            http.updateUserData(data, '/updateData')\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        if (result.email !== undefined) {\n                            this.setState({\n                                data: result\n                            }, () => {\n                                this.setState({\n                                    isDataConfirmed: true\n                                })\n                            })\n                        } else {\n                            this.setState({\n                                isDataConfirmed: false\n                            }, () => {\n                                storage.logOut()\n                            })\n                        }\n                    }, (error) => {\n                        console.log(error)\n                    }\n                );\n        } else {\n            this.setState({\n                isDataConfirmed: false\n            })\n        }\n    };\n\n    public handleAddNewTaskLesson = (taskLesson: newTaskLesson) => {\n        const newData: User = this.state.data;\n        newData.lessonTasks.push(taskLesson);\n        this.updateHandler(newData)\n        this.setState({\n            openSnackbar: true\n        })\n        setTimeout(()=>{\n            this.setState({\n                openSnackbar: false\n            })\n        }, 4000)\n    };\n\n    public render() {\n        const stylesForTab = {\n            textTransform: 'none',\n            minWidth: 72,\n        } as React.CSSProperties;\n\n        const timetableMenu = (\n            <AppBar position=\"static\" color=\"default\" style={{marginTop: '1rem'}}>\n                <Tabs\n                    value={this.state.tabValue}\n                    onChange={this.handleChangeTab}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"fullWidth\"\n                >\n                    return (\n                    <Tab label={'Четная неделя'} style={stylesForTab}/>\n                    <Tab label={'Нечетная неделя'} style={stylesForTab}/>\n                    )\n                </Tabs>\n            </AppBar>\n        );\n\n        const swipeableViews = (\n            <SwipeableViews axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'} index={this.state.tabValue}\n                            onChangeIndex={this.handleChangeIndexTab}>\n                <div dir={theme.direction}>\n                    {scheduleListComponent(\n                        this.state.data.lessonTime,\n                        this.state.data.teachers,\n                        false,\n                        false,\n                        false,\n                        'Четная',\n                        this.state.data.lessons.evenWeek,\n                        this.state.data.lessons.unevenWeek,\n                        this.handleAddNewTaskLesson\n                    )}\n                </div>\n                <div dir={theme.direction}>\n                    {scheduleListComponent(this.state.data.lessonTime, this.state.data.teachers, false, false, false, 'Нечетная', this.state.data.lessons.evenWeek, this.state.data.lessons.unevenWeek, this.handleAddNewTaskLesson)}\n                </div>\n            </SwipeableViews>\n        );\n\n        return (\n            <div>\n                {timetableMenu}\n                {this.state.isDataConfirmed ? swipeableViews : LoadingComponent}\n                {this.state.openSnackbar ? <SnackbarComponent variant=\"success\" message=\"Задание добавлено\"/> : null}\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle, TextField,\n    Typography\n} from \"@material-ui/core\";\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport MomentUtils from \"@date-io/moment\";\nimport \"moment/locale/ru\";\nimport {newTaskLesson} from \"./DialogAddTaskLesson\";\nimport {Edit} from \"@material-ui/icons\";\n\n\ninterface DialogEditTaskLessonProps {\n    lesson: newTaskLesson\n    handleEditTaskLesson: (taskLesson: newTaskLesson) => void // cb для сохранения редактирования задания\n}\n\nexport interface newLesson {\n    lessonWeek: string;\n    lessonDay: string;\n    lessonName: string;\n    lessonType: string;\n    lessonNumber: string;\n    lessonLocation: string;\n    lessonTeacher: string;\n}\n\nexport class DialogEditTaskLesson extends React.Component<DialogEditTaskLessonProps> {\n\n    state = {\n        openDialogWindow: false,\n        textForTaskLesson: this.props.lesson.taskText,\n        dateForTaskLesson: this.props.lesson.taskDate\n    };\n\n    public handleOpenLoginDialog = () => {\n        this.setState({\n            openDialogWindow: true\n        })\n    };\n\n    public handleClose = () => {\n        this.setState({\n            openDialogWindow: false,\n        })\n    };\n\n    public confirmAdd = () => {\n        const newTaskLesson: newTaskLesson = {\n            lesson: {\n                lessonWeek: this.props.lesson.lesson.lessonWeek,\n                lessonDay: this.props.lesson.lesson.lessonDay,\n                lessonName: this.props.lesson.lesson.lessonName,\n                lessonType: this.props.lesson.lesson.lessonType,\n                lessonNumber: this.props.lesson.lesson.lessonNumber,\n                lessonLocation: this.props.lesson.lesson.lessonLocation,\n                lessonTeacher: this.props.lesson.lesson.lessonTeacher\n            },\n            taskDate: new Date(this.state.dateForTaskLesson),\n            taskText: this.state.textForTaskLesson,\n            id: this.props.lesson.id\n        };\n        this.props.handleEditTaskLesson(newTaskLesson);\n        this.handleClose()\n    };\n\n    public handleTaskLessonTextChange = (event: any) => {\n        this.setState({\n            textForTaskLesson: event.target.value\n        })\n    };\n\n    public handleChangeDate = (value: any) => {\n        this.setState({\n            dateForTaskLesson: value\n        })\n    };\n\n    public render() {\n        return (\n            <div>\n                <Button color=\"primary\" size={\"small\"} onClick={this.handleOpenLoginDialog}>\n                    Редактировать\n                </Button>\n                <Dialog open={this.state.openDialogWindow} onClose={this.handleClose}\n                        aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Редактирование задания: {this.props.lesson.lesson.lessonDay}, {this.props.lesson.lesson.lessonWeek} неделя</DialogTitle>\n                    <DialogContent>\n                        <Typography variant=\"body1\">Предмет: {this.props.lesson.lesson.lessonName}</Typography>\n                        <Typography variant=\"body1\">Тип занятия: {this.props.lesson.lesson.lessonType}</Typography>\n                        <Typography variant=\"body1\">Номер пары: {this.props.lesson.lesson.lessonNumber}</Typography>\n                        <Typography variant=\"body1\">Преподаватель: {this.props.lesson.lesson.lessonTeacher}</Typography>\n                        <Typography variant=\"body1\">Место занятия: {this.props.lesson.lesson.lessonLocation}</Typography>\n                        <TextField\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Текст задания: </Typography>}\n                            value={this.state.textForTaskLesson}\n                            fullWidth\n                            onChange={this.handleTaskLessonTextChange}\n                        />\n                        <MuiPickersUtilsProvider utils={MomentUtils} >\n                            <KeyboardDatePicker\n                                style={{width: '100%'}}\n                                id=\"mui-pickers-date\"\n                                invalidDateMessage=\"Неверный формат даты\"\n                                label=\"На какую дату внести задание:\"\n                                value={this.state.dateForTaskLesson}\n                                onChange={this.handleChangeDate}\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                            />\n\n                        </MuiPickersUtilsProvider>\n\n                    </DialogContent>\n\n                    <DialogActions>\n\n                        <Button onClick={this.confirmAdd} color=\"primary\">\n                            Сохранить изменения\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Отмена\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle, Divider, IconButton, TextField,\n    Typography\n} from \"@material-ui/core\";\nimport Http from \"../../serverApi/http\";\n\nimport {MoreHoriz} from \"@material-ui/icons\";\nimport {newTaskLesson} from \"./DialogAddTaskLesson\";\nimport moment from 'moment'\nimport {DialogEditTaskLesson} from \"./DialogEditTaskLesson\";\n\ninterface DialogViewDayProps {\n    tasks: newTaskLesson[],\n    day: string,\n    handleEditTaskLesson: (taskLesson: newTaskLesson) => void // cb для сохранения редактирования задания\n}\n\n\nexport class DialogViewDay extends React.Component<DialogViewDayProps> {\n\n    state = {\n        openDialogWindow: false\n    };\n\n    public handleOpenLoginDialog = () => {\n        this.setState({\n            openDialogWindow: true\n        })\n    };\n\n    public handleClose = () => {\n        this.setState({\n            openDialogWindow: false,\n        })\n    };\n\n\n    public render() {\n        return (\n            <div>\n                <IconButton onClick={this.handleOpenLoginDialog} style={{padding: 0, marginBottom: '1rem'}}>\n                    <MoreHoriz/>\n                </IconButton>\n\n                <Dialog open={this.state.openDialogWindow} onClose={this.handleClose}\n                        aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Просмотр дня: {moment(this.props.day).format(' Do MMM ')}</DialogTitle>\n\n                    <DialogContent style={{width: '300px'}}>\n                        {this.props.tasks.map((task: newTaskLesson) => {\n                            return (\n                                <div key={Math.random()}>\n                                    <Typography variant=\"caption\" style={{fontSize: '1.2rem'}}>Задание №{this.props.tasks.indexOf(task) + 1}</Typography>\n                                    <Typography variant=\"subtitle2\">{task.lesson.lessonWeek} неделя</Typography>\n                                    <Typography variant=\"subtitle2\">Текст задания: {task.taskText}</Typography>\n                                    <Typography variant=\"subtitle2\">{task.lesson.lessonName}</Typography>\n                                    <Typography variant=\"caption\">{task.lesson.lessonTeacher}</Typography>\n                                    <DialogEditTaskLesson handleEditTaskLesson={this.props.handleEditTaskLesson} lesson={task}/>\n                                    <Divider style={{marginTop: '1rem', marginBottom: '1rem'}} />\n                                </div>\n                                )\n                        })}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Сохранить\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Отмена\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n","import * as React from \"react\";\nimport {DataStorage} from \"../serverApi/dataStorage\";\nimport {LocalStorage} from \"../serverApi/localStorage\";\nimport Http from \"../serverApi/http\";\nimport {newTaskLesson} from \"../components/Dialogs/DialogAddTaskLesson\";\nimport {TeacherData, User} from \"./AccountPage\";\nimport SnackbarComponent from \"../components/Dialogs/SnackBar\";\nimport moment from 'moment';\nimport {theme} from \"../Theme\";\nimport {LoadingComponent} from \"../components/UniversalComponents\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport {\n    AppBar,\n    Badge, FormControl, Grid, Input,\n    InputLabel, MenuItem, Select,\n    Tab,\n    Table,\n    TableBody,\n    TableCell,\n    TableRow,\n    Tabs,\n    Typography\n} from \"@material-ui/core\";\nimport {DialogViewDay} from \"../components/Dialogs/DialogViewDay\";\n\nexport default class CalendarPage extends React.Component {\n\n    state = {\n        isDataConfirmed: null,\n        tabValue: new Date().getMonth(),\n        data: {\n            email: '',\n            registrationDate: '',\n            password: '',\n            admin: false,\n            lastLoginDate: '',\n            lessons: {evenWeek: [], unevenWeek: []},\n            lessonTasks: [],\n            teachers: [],\n            lessonTime: []\n        },\n        openSnackbar: false,\n        months: [[]],\n        selectedMonth: ''\n    };\n\n    componentDidMount(): void {\n        document.title = 'Расписание занятий';\n        let months: any = [];\n        let monthsCounter = 0;\n        while (monthsCounter < 12) {\n            const count = moment().month(monthsCounter).daysInMonth();\n            const days = [];\n            for (let i = 1; i < count + 1; i++) {\n                days.push(moment().month(monthsCounter).date(i));\n\n            }\n            months.push(days);\n            monthsCounter++\n        }\n\n        this.setState({\n            months: months,\n            selectedMonth: this.returnRussianMonthName(new Date().toDateString().split(' ')[1])\n        });\n\n        const storage = new DataStorage(new LocalStorage());\n        const http = new Http();\n        if (storage.getUserData !== null) {\n            http.loginWithToken(storage.getUserData, '/user')\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        if (result.email !== undefined) {\n                            this.setState({\n                                data: result\n                            }, () => {\n                                this.setState({\n                                    isDataConfirmed: true\n                                })\n                            })\n                        } else {\n                            this.setState({\n                                isDataConfirmed: false\n                            }, () => {\n                                storage.logOut()\n                            })\n                        }\n                    }, (error) => {\n                        console.log(error)\n                    }\n                );\n        } else {\n            this.setState({\n                isDataConfirmed: false\n            })\n        }\n    }\n\n    public handleChangeTab = (event: React.ChangeEvent<{}>, newValue: number) => {\n        this.setState({\n            tabValue: newValue\n        })\n    };\n\n    public handleChangeIndexTab = (index: number) => {\n        this.setState({\n            tabValue: index\n        })\n    };\n\n    public updateHandler = (data: User) => {\n\n        const storage = new DataStorage(new LocalStorage());\n        const http = new Http();\n        if (storage.getUserData !== null) {\n            http.updateUserData(data, '/updateData')\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        if (result.email !== undefined) {\n                            this.setState({\n                                data: result\n                            }, () => {\n                                this.setState({\n                                    isDataConfirmed: true\n                                })\n                            })\n                        } else {\n                            this.setState({\n                                isDataConfirmed: false\n                            }, () => {\n                                storage.logOut()\n                            })\n                        }\n                    }, (error) => {\n                        console.log(error)\n                    }\n                );\n        } else {\n            this.setState({\n                isDataConfirmed: false\n            })\n        }\n    };\n\n    public handleAddNewTaskLesson = (taskLesson: newTaskLesson) => {\n        const newData: User = this.state.data;\n        newData.lessonTasks.push(taskLesson);\n        this.updateHandler(newData);\n        this.setState({\n            openSnackbar: true\n        });\n        setTimeout(() => {\n            this.setState({\n                openSnackbar: false\n            })\n        }, 4000)\n    };\n\n    public handleEditTaskLesson = (taskLesson: newTaskLesson) => {\n        const newData: User = this.state.data;\n        newData.lessonTasks.forEach((taskLessonForEdit: newTaskLesson) => {\n            if (taskLessonForEdit.id === taskLesson.id){\n                taskLessonForEdit.taskText = taskLesson.taskText;\n                taskLessonForEdit.taskDate = taskLesson.taskDate\n            }\n        });\n        this.updateHandler(newData);\n    };\n\n    public handleCheckboxTaskLesson = (taskLesson: newTaskLesson) => {\n        // TODO: обновление выполнения задания\n    };\n\n    public returnRussianMonthName = (monthName: string) => {\n        const monthNames = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'];\n        if (monthName === 'Jan') {\n            return (monthNames[0])\n        }\n        if (monthName === 'Feb') {\n            return (monthNames[1])\n        }\n        if (monthName === 'Mar') {\n            return (monthNames[2])\n        }\n        if (monthName === 'Apr') {\n            return (monthNames[3])\n        }\n        if (monthName === 'May') {\n            return (monthNames[4])\n        }\n        if (monthName === 'Jun') {\n            return (monthNames[5])\n        }\n        if (monthName === 'Jul') {\n            return (monthNames[6])\n        }\n        if (monthName === 'Aug') {\n            return (monthNames[7])\n        }\n        if (monthName === 'Sep') {\n            return (monthNames[8])\n        }\n        if (monthName === 'Oct') {\n            return (monthNames[9])\n        }\n        if (monthName === 'Nov') {\n            return (monthNames[10])\n        }\n        if (monthName === 'Dec') {\n            return (monthNames[11])\n        }\n    };\n\n    public handleChangeMonthInMobileVersion = (event: any) => {\n        this.setState({\n            selectedMonth: event.target.value\n        })\n    };\n\n    public render() {\n\n        const stylesForTab = {\n            textTransform: 'none',\n            minWidth: 72,\n        } as React.CSSProperties;\n\n        const calendarMenuFullVersion = (\n            <AppBar position=\"static\" color=\"default\" style={{marginTop: '1rem'}}>\n                <Tabs\n                    value={this.state.tabValue}\n                    onChange={this.handleChangeTab}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"fullWidth\"\n                >\n                    {this.state.months.map(month => {\n                        return (\n                            <Tab label={this.returnRussianMonthName(new Date(month[0]).toDateString().split(' ')[1])}\n                                 style={stylesForTab}\n                                 key={Math.random()}/>\n                        )\n                    })}\n                </Tabs>\n            </AppBar>\n        );\n\n        const dayCard = (day: string) => {\n            const tasks: newTaskLesson[] = [];\n            const engMonthName = new Date(day).toDateString().split(' ')[1]\n            const rusMonthName = this.returnRussianMonthName(engMonthName)\n            this.state.data.lessonTasks.map((task: newTaskLesson) => {\n                if (task.taskDate !== undefined && new Date(task.taskDate).toDateString() === day) {\n                    tasks.push(task)\n                }\n            });\n            return (\n                <Badge style={{}} badgeContent={tasks.length > 0 ? <Typography variant={\"h6\"} style={{fontSize: '1rem'}}>{tasks.length}</Typography> : null} color=\"error\">\n                    <div style={{\n                        width: '140px',\n                        height: '110px',\n                        textAlign: 'right',\n                        borderLeft: '1px solid rgba(224, 224, 224, 1)',\n                        marginTop: '7px'\n                    }}>\n\n                        <Typography style={{color: 'grey'}} variant=\"subtitle1\">\n                            {rusMonthName}\n                        </Typography>\n                        <Typography style={{color: 'grey'}} variant=\"h4\">\n                            {Number(day.split(' ')[2])}\n                        </Typography>\n                        {tasks.length >= 1 ?\n                            <div style={{marginRight: '70%'}}><DialogViewDay handleEditTaskLesson={this.handleEditTaskLesson} tasks={tasks} day={day}/></div> : null}\n                    </div>\n                </Badge>\n            )\n        };\n\n        const swipeableViews = (\n            <SwipeableViews axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'} index={this.state.tabValue}\n                            onChangeIndex={this.handleChangeIndexTab}>\n                {this.state.months.map((month) => {\n                    let cells: string[] = [];\n                    const dayName = new Date(month[0]).toDateString().split(' ')[0]\n                    if (dayName === 'Mon') {\n                        cells = month\n                    }\n                    if (dayName === 'Tue') {\n                        cells = ['empty', ...month]\n                    }\n                    if (dayName === 'Wed') {\n                        cells = ['empty', 'empty', ...month]\n                    }\n                    if (dayName === 'Thu') {\n                        cells = ['empty', 'empty', 'empty', ...month]\n                    }\n                    if (dayName === 'Fri') {\n                        cells = ['empty', 'empty', 'empty', 'empty', ...month]\n                    }\n                    if (dayName === 'Sat') {\n                        cells = ['empty', 'empty', 'empty', 'empty', 'empty', ...month]\n                    }\n                    if (dayName === 'Sun') {\n                        cells = ['empty', 'empty', 'empty', 'empty', 'empty', 'empty', ...month]\n                    }\n                    return (\n                        <Table style={{tableLayout: 'fixed'}} key={Math.random()}>\n                            <TableBody>\n                                <TableRow>\n                                    <TableCell style={{width: '14,28%', paddingLeft: '0px'}}>\n                                        <Typography style={{marginLeft: '1rem'}}>Понедельник</Typography>\n                                    </TableCell>\n                                    <TableCell style={{paddingLeft: '0px'}}>\n                                        <Typography style={{marginLeft: '1rem'}}>Вторник</Typography>\n                                    </TableCell>\n                                    <TableCell style={{paddingLeft: '0px'}}>\n                                        <Typography style={{marginLeft: '1rem'}}>Среда</Typography>\n                                    </TableCell>\n                                    <TableCell style={{paddingLeft: '0px'}}>\n                                        <Typography style={{marginLeft: '1rem'}}>Четверг</Typography>\n                                    </TableCell>\n                                    <TableCell style={{paddingLeft: '0px'}}>\n                                        <Typography style={{marginLeft: '1rem'}}>Пятница</Typography>\n                                    </TableCell>\n                                    <TableCell style={{paddingLeft: '0px'}}>\n                                        <Typography style={{marginLeft: '1rem'}}>Суббота</Typography>\n                                    </TableCell>\n                                    <TableCell style={{paddingLeft: '0px'}}>\n                                        <Typography style={{marginLeft: '1rem'}}>Воскресенье</Typography>\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    {cells.slice(0, 7).map((day: any) => {\n                                        return (\n                                            <TableCell style={{paddingLeft: '0px'}} key={Math.random()}>\n                                                {day === 'empty' ? <div/> : dayCard(new Date(day).toDateString())}\n                                            </TableCell>\n                                        )\n                                    })}\n                                </TableRow>\n                                <TableRow>\n                                    {cells.slice(7, 14).map((day: any) => {\n                                        return (\n                                            <TableCell style={{paddingLeft: '0px'}} key={Math.random()}>\n                                                {day === 'empty' ? <div/> : dayCard(new Date(day).toDateString())}\n                                            </TableCell>\n                                        )\n                                    })}\n                                </TableRow>\n                                <TableRow>\n                                    {cells.slice(14, 21).map((day: any) => {\n                                        return (\n                                            <TableCell style={{paddingLeft: '0px'}} key={Math.random()}>\n                                                {day === 'empty' ? <div/> : dayCard(new Date(day).toDateString())}\n                                            </TableCell>\n                                        )\n                                    })}\n                                </TableRow>\n                                <TableRow>\n                                    {cells.slice(21, 28).map((day: any) => {\n                                        return (\n                                            <TableCell style={{paddingLeft: '0px'}} key={Math.random()}>\n                                                {day === 'empty' ? <div/> : dayCard(new Date(day).toDateString())}\n                                            </TableCell>\n                                        )\n                                    })}\n                                </TableRow>\n                                <TableRow>\n                                    {cells.slice(28, 35).map((day: any) => {\n                                        return (\n                                            <TableCell style={{paddingLeft: '0px'}} key={Math.random()}>\n                                                {day === 'empty' ? <div/> : dayCard(new Date(day).toDateString())}\n                                            </TableCell>\n                                        )\n                                    })}\n                                </TableRow>\n                                <TableRow>\n                                    {cells.slice(35, 42).map((day: any) => {\n                                        return (\n                                            <TableCell style={{paddingLeft: '0px'}} key={Math.random()}>\n                                                {day === 'empty' ? <div/> : dayCard(new Date(day).toDateString())}\n                                            </TableCell>\n                                        )\n                                    })}\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                    )\n                })}\n            </SwipeableViews>\n        );\n\n        const CalendarMenuMobileVersion = () => {\n            return (\n                <FormControl style={{width: '100%'}}>\n                    <InputLabel htmlFor=\"selectTeacher\">Выбранный месяц</InputLabel>\n                    <Select\n                        value={this.state.selectedMonth}\n                        onChange={this.handleChangeMonthInMobileVersion}\n                        input={<Input id=\"selectTeacher\"/>}\n                        fullWidth\n                    >\n                        {this.state.months.map((monthArray: any) => {\n                            const month = this.returnRussianMonthName(new Date(monthArray[0]).toDateString().split(' ')[1]);\n                            return (\n                                <MenuItem value={month} key={Math.random()}>{month}</MenuItem>\n                            )\n                        })}\n                    </Select>\n                </FormControl>\n            )\n        };\n\n        const CalendarBodyMobileVersion = () => {\n\n            const dayCardMobile = (day: string) => {\n                const tasks: newTaskLesson[] = [];\n                this.state.data.lessonTasks.map((task: newTaskLesson) => {\n                    if (task.taskDate !== undefined && new Date(task.taskDate).toDateString() === day) {\n                        tasks.push(task)\n                    }\n                });\n                return (\n                    <Badge style={{}} badgeContent={tasks.length} color=\"error\">\n                        <div style={{\n                            width: '30px',\n                            maxWidth: '30px',\n                            height: '50px',\n                            textAlign: 'right',\n                            borderLeft: '1px solid rgba(224, 224, 224, 1)',\n                            marginTop: '7px'\n                        }}>\n                            <Typography style={{color: 'grey', marginLeft: '0.5rem'}} variant=\"h6\">\n                                {Number(day.split(' ')[2])}\n                            </Typography>\n                            {tasks.length >= 1 ?\n                                <div style={{marginBottom: '3rem'}}><DialogViewDay handleEditTaskLesson={this.handleEditTaskLesson}  tasks={tasks} day={day}/></div> : null}\n                        </div>\n                    </Badge>\n                )\n            };\n\n            const CalendarBody = () => {\n                let monthArr: any[] = [];\n                this.state.months.map((month) => {\n                    const monthName = new Date(month[0]).toDateString().split(' ')[1];\n                    if (this.returnRussianMonthName(monthName) === this.state.selectedMonth) {\n                        monthArr = month\n                    }\n                });\n                const dayName = new Date(monthArr[0]).toDateString().split(' ')[0];\n                let cells: string[] = [];\n\n                if (dayName === 'Mon') {\n                    cells = monthArr\n                }\n                if (dayName === 'Tue') {\n                    cells = ['empty', ...monthArr]\n                }\n                if (dayName === 'Wed') {\n                    cells = ['empty', 'empty', ...monthArr]\n                }\n                if (dayName === 'Thu') {\n                    cells = ['empty', 'empty', 'empty', ...monthArr]\n                }\n                if (dayName === 'Fri') {\n                    cells = ['empty', 'empty', 'empty', 'empty', ...monthArr]\n                }\n                if (dayName === 'Sat') {\n                    cells = ['empty', 'empty', 'empty', 'empty', 'empty', ...monthArr]\n                }\n                if (dayName === 'Sun') {\n                    cells = ['empty', 'empty', 'empty', 'empty', 'empty', 'empty', ...monthArr]\n                }\n                return (\n                    <Table style={{tableLayout: 'fixed'}} key={Math.random()}>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell style={{width: '14,28%', paddingLeft: '0px'}}>\n                                    <Typography style={{marginLeft: '1rem'}}>Пн</Typography>\n                                </TableCell>\n                                <TableCell style={{paddingLeft: '0px'}}>\n                                    <Typography style={{marginLeft: '1rem'}}>Вт</Typography>\n                                </TableCell>\n                                <TableCell style={{paddingLeft: '0px'}}>\n                                    <Typography style={{marginLeft: '1rem'}}>Ср</Typography>\n                                </TableCell>\n                                <TableCell style={{paddingLeft: '0px'}}>\n                                    <Typography style={{marginLeft: '1rem'}}>Чт</Typography>\n                                </TableCell>\n                                <TableCell style={{paddingLeft: '0px'}}>\n                                    <Typography style={{marginLeft: '1rem'}}>Пт</Typography>\n                                </TableCell>\n                                <TableCell style={{paddingLeft: '0px'}}>\n                                    <Typography style={{marginLeft: '1rem'}}>Сб</Typography>\n                                </TableCell>\n                                <TableCell style={{paddingLeft: '0px'}}>\n                                    <Typography style={{marginLeft: '1rem'}}>Вс</Typography>\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                {cells.slice(0, 7).map((day: any) => {\n                                    return (\n                                        <TableCell style={{paddingLeft: '0px'}} key={Math.random()}>\n                                            {day === 'empty' ? <div/> : dayCardMobile(new Date(day).toDateString())}\n                                        </TableCell>\n                                    )\n                                })}\n                            </TableRow>\n                            <TableRow>\n                                {cells.slice(7, 14).map((day: any) => {\n                                    return (\n                                        <TableCell style={{paddingLeft: '0px'}} key={Math.random()}>\n                                            {day === 'empty' ? <div/> : dayCardMobile(new Date(day).toDateString())}\n                                        </TableCell>\n                                    )\n                                })}\n                            </TableRow>\n                            <TableRow>\n                                {cells.slice(14, 21).map((day: any) => {\n                                    return (\n                                        <TableCell style={{paddingLeft: '0px'}} key={Math.random()}>\n                                            {day === 'empty' ? <div/> : dayCardMobile(new Date(day).toDateString())}\n                                        </TableCell>\n                                    )\n                                })}\n                            </TableRow>\n                            <TableRow>\n                                {cells.slice(21, 28).map((day: any) => {\n                                    return (\n                                        <TableCell style={{paddingLeft: '0px'}} key={Math.random()}>\n                                            {day === 'empty' ? <div/> : dayCardMobile(new Date(day).toDateString())}\n                                        </TableCell>\n                                    )\n                                })}\n                            </TableRow>\n                            <TableRow>\n                                {cells.slice(28, 35).map((day: any) => {\n                                    return (\n                                        <TableCell style={{paddingLeft: '0px'}} key={Math.random()}>\n                                            {day === 'empty' ? <div/> : dayCardMobile(new Date(day).toDateString())}\n                                        </TableCell>\n                                    )\n                                })}\n                            </TableRow>\n                            <TableRow>\n                                {cells.slice(35, 42).map((day: any) => {\n                                    return (\n                                        <TableCell style={{paddingLeft: '0px'}} key={Math.random()}>\n                                            {day === 'empty' ? <div/> : dayCardMobile(new Date(day).toDateString())}\n                                        </TableCell>\n                                    )\n                                })}\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                );\n            };\n\n\n            return (\n                <CalendarBody/>\n            )\n        };\n\n        return (\n            <div>\n                <div className=\"top\" style={{marginTop: '5rem'}}>\n                    <CalendarMenuMobileVersion/>\n                    <CalendarBodyMobileVersion/>\n                </div>\n\n                <div style={{minWidth: '1216px', overflow: 'auto'}} className=\"topBarMax\">\n                    {calendarMenuFullVersion}\n\n                    {this.state.isDataConfirmed ? swipeableViews : LoadingComponent}\n                </div>\n                {this.state.openSnackbar ? <SnackbarComponent variant=\"success\" message=\"Задание добавлено\"/> : null}\n            </div>\n        )\n    }\n}\n","import HelpPage from \"./pages/HelpPage\";\nimport StartPage from \"./pages/StartPage\";\nimport AccountPage from \"./pages/AccountPage\";\nimport SchedulePage from \"./pages/SchedulePage\";\nimport CalendarPage from \"./pages/CalendarPage\";\n\nexport const pagesForMenus =  {\n    pages:\n        [\n            {path: '/', buttonText: 'Главная', isDataConfirmed: false,  component: StartPage, icon: 'home'},\n            {path: '/help', buttonText: 'Помощь', isDataConfirmed: false, component: HelpPage, icon: 'live_help'},\n            {path: '/account', buttonText: 'Аккаунт', isDataConfirmed: true, component: AccountPage, icon: 'person'},\n            {path: '/schedule', buttonText: 'Расписание', isDataConfirmed: true, component: SchedulePage, icon: 'event'},\n            {path: '/calendar', buttonText: 'Календарь', isDataConfirmed: true, component: CalendarPage, icon: 'view_module'},\n        ]\n};\n","import React from 'react'\nimport {\n    Button, CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    TextField, Typography\n} from \"@material-ui/core\";\nimport Http from \"../../serverApi/http\";\nimport {DataStorage} from \"../../serverApi/dataStorage\";\nimport {LocalStorage} from \"../../serverApi/localStorage\";\nimport {MeetingRoom} from \"@material-ui/icons\";\n\ninterface DialogLoginFormProps {\n    mobile: boolean\n    isLoginSuccess: any;\n}\n\ninterface DialogLoginFormState {\n    openDialogWindow: boolean,\n    email: string,\n    password: string,\n    isLoading: boolean\n    loginState: string\n}\n\nexport class DialogLoginForm extends React.Component<DialogLoginFormProps, DialogLoginFormState> {\n\n    state = {\n        openDialogWindow: false,\n        email: '',\n        password: '',\n        isLoading: false,\n        loginState: ''\n    };\n\n    public handleOpenLoginDialog = () => {\n        this.setState({\n            openDialogWindow: true\n        })\n    };\n\n    public handleClose = () => {\n        this.setState({\n            openDialogWindow: false,\n\n        })\n    };\n\n    public login = () => {\n        this.setState({\n            isLoading: true\n        });\n        const http = new Http();\n        const data = {\n            email: this.state.email,\n            password: this.state.password,\n        };\n        http.loginForToken(data, '/auth')\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    if (result.token === undefined){\n                        this.setState({\n                            loginState: 'Email или пароль введены неверно'\n                        })\n                    } else {\n                        this.setState({\n                            loginState: 'Вы успешно авторизованы. Сейчас Вы будете перенаправлены'\n                        }, ()=>{\n                            const storage = new DataStorage(new LocalStorage());\n                            storage.add(result.token);\n                            http.loginWithToken(result.token, '/user')\n                                .then(res => res.json())\n                                .then (\n                                    (result)=>{\n                                        // КОНЕЧНЫЕ ДАННЫЕ\n                                        this.setState({\n                                            openDialogWindow: false\n                                        });\n                                        this.props.isLoginSuccess(result)\n\n                                    }, (error) => {\n                                        console.log(error)\n                                    }\n                                )\n                        })\n                    }\n                    this.setState({\n                        isLoading: false\n                    })\n                },\n                (error) => {\n                    console.log(error)\n                }\n            );\n    };\n\n    public handleEmailChange = (event: any) => {\n        this.setState({\n            email: event.target.value\n        })\n    };\n\n    public handlePasswordChange = (event: any) => {\n        this.setState({\n            password: event.target.value\n        })\n    };\n\n    public render() {\n        return (\n            <div>\n\n                {this.props.mobile === true ?\n                    <div onClick={this.handleOpenLoginDialog} style={{height: '2rem', width: '7rem'}}>\n                        <Typography variant=\"button\"><MeetingRoom/>&nbsp;&nbsp;Вход</Typography>\n                    </div>\n                    :\n                    <Button color=\"secondary\" onClick={this.handleOpenLoginDialog}  style={{color: 'white'}}>\n                        <MeetingRoom/>&nbsp;&nbsp;Вход\n                    </Button>}\n\n                <Dialog open={this.state.openDialogWindow} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Вход</DialogTitle>\n                    <div style={{marginLeft: 'auto', marginRight: 'auto'}}>\n                        {this.state.isLoading ? <CircularProgress/> : null}\n                    </div>\n                    <DialogContent>\n                        <DialogContentText>\n                            Введите Email и пароль\n                        </DialogContentText>\n\n                        <Typography variant=\"button\">{this.state.loginState}</Typography>\n\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Email <span style={{color: 'red'}}>*</span></Typography>}\n                            type=\"email\"\n                            fullWidth\n                            onChange={this.handleEmailChange}\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            id=\"pass\"\n                            label={<Typography>Пароль <span style={{color: 'red'}}>*</span></Typography>}\n                            type=\"password\"\n                            fullWidth\n                            onChange={this.handlePasswordChange}\n                        />\n                    </DialogContent>\n\n                    <DialogActions>\n\n                        <Button onClick={this.login} color=\"primary\">\n                            Войти\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Отмена\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport {\n    Button, CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    TextField, Typography\n} from \"@material-ui/core\";\nimport Http from \"../../serverApi/http\";\nimport {DataStorage} from \"../../serverApi/dataStorage\";\nimport {LocalStorage} from \"../../serverApi/localStorage\";\nimport {PersonAdd} from \"@material-ui/icons\";\nimport validator from 'validator';\n\ninterface DialogRegisterFormProps {\n    mobile: boolean\n    isLoginSuccess: any;\n}\n\ninterface DialogRegisterFormState {\n    openDialogWindow: boolean,\n    email: string,\n    password: string,\n    confirmPassword: string,\n    isLoading: boolean,\n    registrationState: string\n}\n\nexport class DialogRegisterForm extends React.Component<DialogRegisterFormProps, DialogRegisterFormState> {\n\n    state = {\n        openDialogWindow: false,\n        email: '',\n        password: '',\n        confirmPassword: '',\n        isLoading: false,\n        registrationState: ''\n    };\n\n    public handleOpenLoginDialog = () => {\n        this.setState({\n            openDialogWindow: true\n        })\n    };\n\n\n    public handleClose = () => {\n\n        this.setState({\n            openDialogWindow: false,\n\n        })\n    };\n\n    public login = () => {\n        this.setState({\n            isLoading: true\n        });\n        const http = new Http();\n        const data = {\n            email: this.state.email,\n            password: this.state.password,\n            confirmPassword: this.state.confirmPassword\n        };\n        http.loginForToken(data, '/registration')\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        isLoading: false\n                    });\n                    if (result === 'Passwords Not Confirmed') {\n                        console.log(result);\n                        this.setState({\n                            registrationState: 'Введенные пароли не совпадают'\n                        })\n                    }\n\n                    if (result.token !== undefined) {\n                        this.setState({\n                            registrationState: 'Вы успешно зарегистрированы. Сейчас Вы будете перенаправлены'\n                        }, () => {\n                            const storage = new DataStorage(new LocalStorage());\n                            storage.add(result.token);\n                            http.loginWithToken(result.token, '/user')\n                                .then(res => res.json())\n                                .then(\n                                    (result) => {\n                                        // КОНЕЧНЫЕ ДАННЫЕ\n                                        this.setState({\n                                            openDialogWindow: false\n                                        });\n                                        this.props.isLoginSuccess(result)\n\n                                    }, (error) => {\n                                        console.log(error)\n                                    }\n                                )\n                        })\n                    }\n\n                    if (result === 'This email already registered') {\n                        this.setState({\n                            registrationState: 'Этот Email уже занят'\n                        })\n                    }\n\n                    if (result === '8 symbols') {\n                        this.setState({\n                            registrationState: 'Длина пароля должна быть не менее 8 символов'\n                        })\n                    }\n                },\n                (error) => {\n                    console.log(error)\n                }\n            );\n    };\n\n    public handleEmailChange = (event: any) => {\n        this.setState({\n            email: event.target.value\n        })\n    };\n\n    public handlePasswordChange = (event: any) => {\n        this.setState({\n            password: event.target.value\n        })\n    };\n\n    public handleConfirmPasswordChange = (event: any) => {\n        this.setState({\n            confirmPassword: event.target.value\n        })\n    };\n\n    public render() {\n        return (\n            <div>\n                {this.props.mobile === true ?\n                    <div onClick={this.handleOpenLoginDialog} style={{height: '2rem', width: '7rem'}}>\n                        <PersonAdd/>&nbsp;&nbsp;<Typography variant=\"button\" >Регистрация</Typography>\n                    </div>\n                    :\n                    <Button color=\"secondary\" onClick={this.handleOpenLoginDialog} style={{color: 'white'}}>\n                        <PersonAdd/>&nbsp;&nbsp;Регистрация\n                    </Button>}\n\n                <Dialog open={this.state.openDialogWindow} onClose={this.handleClose}\n                        aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Регистрация</DialogTitle>\n                    <div style={{marginLeft: 'auto', marginRight: 'auto'}}>\n                        {this.state.isLoading ? <CircularProgress/> : null}\n                    </div>\n                    <DialogContent>\n                        <DialogContentText>\n                            Для регистрации необходимо ввести свой email и пароль. Введенные пароли должны совпадать. Минимальная длина пароля - 8 символов\n                        </DialogContentText>\n\n                        <Typography variant=\"button\">{this.state.registrationState}</Typography>\n\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Email <span style={{color: 'red'}}>*</span></Typography>}\n                            type=\"email\"\n                            fullWidth\n                            onChange={this.handleEmailChange}\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            id=\"pass\"\n                            label={<Typography>Пароль, не менее 8 символов <span style={{color: 'red'}}>*</span></Typography>}\n                            type=\"password\"\n                            fullWidth\n                            onChange={this.handlePasswordChange}\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            id=\"confirmPass\"\n                            label={<Typography>Повторите пароль <span style={{color: 'red'}}>*</span></Typography>}\n                            type=\"password\"\n                            fullWidth\n                            onChange={this.handleConfirmPasswordChange}\n                        />\n                    </DialogContent>\n\n                    <DialogActions>\n                        <Button onClick={this.login} color=\"primary\" disabled={!validator.isEmail(this.state.email)}>\n                            Зарегистрироваться\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Отмена\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n","import {Switch, Route, Link, NavLink, Redirect} from 'react-router-dom'\nimport React from 'react'\nimport {AppBar, Button, CircularProgress, Container, Icon, Menu, Toolbar, Typography} from \"@material-ui/core\";\nimport {MuiThemeProvider} from '@material-ui/core/styles';\nimport {theme} from \"../Theme\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {pagesForMenus} from \"../AppPagesList\";\nimport {DialogLoginForm} from \"./Dialogs/DialogLoginForm\";\nimport {DialogRegisterForm} from \"./Dialogs/DialogRegisterForm\";\nimport {DataStorage} from \"../serverApi/dataStorage\";\nimport {LocalStorage} from \"../serverApi/localStorage\";\nimport Http from \"../serverApi/http\";\nimport {Input} from \"@material-ui/icons\";\nimport StartPage from \"../pages/StartPage\";\n\n\ninterface pageData {\n    path: string;\n    buttonText: string;\n    isDataConfirmed: boolean;\n    component: any,\n    icon: any\n}\n\ninterface MainState {\n    menuEl: any,\n    mobileOpenDialogLoginForm: any,\n    isDataConfirmed: any,\n    data: any,\n}\n\nexport default class Main extends React.Component {\n\n    public storage = new DataStorage(new LocalStorage());\n\n    public state: MainState = {\n        menuEl: null,\n        mobileOpenDialogLoginForm: false,\n        isDataConfirmed: null, // флаг становится true только в том случае, если пришли данные по токену. Флаг прокидывается в детей и внутри проходят запросы\n        data: null,\n    };\n\n    // вспомогательное для меню\n    public handleClick = (evt: React.MouseEvent<HTMLButtonElement>) => {\n        this.setState({\n            menuEl: evt.currentTarget\n        })\n    };\n\n    // открытие - закрытие меню на мобильной версии\n    public handleClose = () => {\n        this.setState({\n            menuEl: null\n        })\n    };\n\n    // поднимается через пропсы с форм регистрации и логина\n    public isLoginSuccess = (data: any) => {\n        this.setState({\n            data: data\n        }, () => {\n            this.setState({\n                isDataConfirmed: true\n            })\n        })\n    };\n\n    // обработчик кнопки выхода\n    public handleExitButton = () => {\n        this.storage.logOut();\n        this.setState({\n            isDataConfirmed: false,\n            data: null\n        })\n    };\n\n    // событие изменения страницы - проверка данных\n    public changePage = () => {\n        const storage = new DataStorage(new LocalStorage());\n        const http = new Http();\n        if (storage.getUserData !== null) {\n            http.loginWithToken(storage.getUserData, '/user')\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        if (result.email !== undefined) {\n                            this.setState({\n                                data: result\n                            }, () => {\n                                this.setState({\n                                    isDataConfirmed: true\n                                })\n                            })\n                        } else {\n                            this.setState({\n                                isDataConfirmed: false\n                            }, () => {\n                                storage.logOut()\n                            })\n                        }\n                    }, (error) => {\n                        console.log(error)\n                    }\n                );\n        } else {\n            this.setState({\n                isDataConfirmed: false\n            })\n        }\n    }\n\n    componentDidMount(): void {\n        const storage = new DataStorage(new LocalStorage());\n        const http = new Http();\n        if (storage.getUserData !== null) {\n            http.loginWithToken(storage.getUserData, '/user')\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        if (result.email !== undefined) {\n                            this.setState({\n                                data: result\n                            }, () => {\n                                this.setState({\n                                    isDataConfirmed: true\n                                })\n                            })\n                        } else {\n                            this.setState({\n                                isDataConfirmed: false\n                            }, () => {\n                                storage.logOut()\n                            })\n                        }\n                    }, (error) => {\n                        console.log(error)\n                    }\n                );\n        } else {\n            this.setState({\n                isDataConfirmed: false\n            })\n        }\n    }\n\n    public render() {\n\n        const isDataConfirmedMobileMenu = (\n            <AppBar>\n                <Toolbar className=\"topBarMin\">\n                    <Button style={{color: \"white\"}} aria-controls=\"customized-menu\" aria-haspopup=\"true\"\n                            onClick={this.handleClick}>\n                        <MenuIcon/>\n                    </Button>\n                    <Menu\n                        id=\"customized-menu\" anchorEl={this.state.menuEl} keepMounted\n                        open={Boolean(this.state.menuEl)} onClose={this.handleClose}\n                        style={{marginTop: '2rem'}}>\n                        {/* ОТДЕЛЬНО ВОЗВРАЩАЕТСЯ КНОПКА ВХОДА */}\n                        <div>\n                            {pagesForMenus.pages.map((dataPage: pageData) => {\n                                    return (\n                                        <div key={dataPage.buttonText + 'logged'} onClick={this.changePage}\n                                             style={{width: '180px'}}>\n                                            <NavLink to={dataPage.path} style={{color: \"black\"}}\n                                                     activeStyle={{color: \"black\", fontWeight: \"bold\"}}>\n                                                <MenuItem onClick={this.handleClose}>\n                                                    <Icon>{dataPage.icon}</Icon>&nbsp;&nbsp;\n                                                    <Typography\n                                                        variant=\"button\">{dataPage.buttonText}</Typography>\n                                                </MenuItem>\n                                            </NavLink>\n                                        </div>\n                                    )\n                                }\n                            )}\n                            <MenuItem onClick={this.handleExitButton}>\n                                <Input/>&nbsp;&nbsp;Выйти\n                            </MenuItem>\n                        </div>\n                    </Menu>\n                    {this.state.data === null ? null :\n                        <Typography style={{marginLeft: 'auto'}}\n                                    variant=\"subtitle2\">Привет, {this.state.data.email}</Typography>}\n                </Toolbar>\n            </AppBar>\n        );\n\n        const isDataNotConfirmedMobileMenu = (\n            <AppBar>\n                <Toolbar className=\"topBarMin\">\n                    <Button style={{color: \"white\"}} aria-controls=\"customized-menu\" aria-haspopup=\"true\"\n                            onClick={this.handleClick}>\n                        <MenuIcon/>\n                    </Button>\n                    <Menu\n                        id=\"customized-menu\" anchorEl={this.state.menuEl} keepMounted\n                        open={Boolean(this.state.menuEl)} onClose={this.handleClose}\n                        style={{marginTop: '2rem'}}>\n                        {pagesForMenus.pages.map((dataPage: pageData) => {\n                                if (dataPage.isDataConfirmed === false) {\n                                    return (\n                                        <div key={dataPage.buttonText} onClick={this.changePage} style={{width: '180px'}}>\n                                            <NavLink to={dataPage.path} style={{color: \"black\"}}\n                                                     activeStyle={{color: \"black\", fontWeight: \"bold\"}}>\n                                                <MenuItem onClick={this.handleClose}>\n                                                    <Icon>{dataPage.icon}</Icon>&nbsp;&nbsp;\n\n                                                    <Typography\n                                                        variant=\"button\">{dataPage.buttonText}</Typography>\n                                                </MenuItem>\n                                            </NavLink>\n                                        </div>\n                                    )\n                                }\n                            }\n                        )}\n                        {/* ОТДЕЛЬНО ВОЗВРАЩАЕТСЯ КНОПКА ВХОДА */}\n                        <div>\n                            <MenuItem>\n                                <DialogLoginForm mobile={true} isLoginSuccess={this.isLoginSuccess}/>\n                            </MenuItem>\n                        </div>\n                        <div>\n                            <MenuItem>\n                                <DialogRegisterForm mobile={true} isLoginSuccess={this.isLoginSuccess}/>\n                            </MenuItem>\n                        </div>\n\n                    </Menu>\n                </Toolbar>\n            </AppBar>\n        );\n\n\n        const isLoadingComponent = (\n            <MuiThemeProvider theme={theme}>\n                <AppBar>\n                    <Toolbar style={{textAlign: 'right'}}>\n                        <CircularProgress style={{color: \"white\"}}/>\n                    </Toolbar>\n                </AppBar>\n            </MuiThemeProvider>\n        );\n\n        const isDataConfirmed = (\n            <Switch>\n                <MuiThemeProvider theme={theme}>\n                    {/* МЕНЮ В МОБИЛЬНОЙ ВЕРСИИ */}\n\n                    {isDataConfirmedMobileMenu}\n\n                    {/* МЕНЮ В ПОЛНОЙ ВЕРСИИ */}\n                    <AppBar>\n                        <Toolbar className=\"topBarMax\" style={{textAlign: 'right'}}>\n                            {/* ОТДЕЛЬНО ВОЗВРАЩАЕТСЯ КНОПКА ВХОДА */}\n\n                            {pagesForMenus.pages.map((dataPage: pageData) => {\n                                return (\n                                    <div key={dataPage.buttonText + 'logged'}>\n                                        <Link to={dataPage.path}>\n                                            <Button style={{color: \"white\"}} onClick={this.changePage}>\n                                                <Icon>{dataPage.icon}</Icon>&nbsp;&nbsp;{dataPage.buttonText}\n                                            </Button>\n                                        </Link>\n                                    </div>\n                                )\n                            })}\n                            <Button onClick={this.handleExitButton} style={{color: \"white\"}}>\n                                <Input/>&nbsp;&nbsp;ВЫХОД\n                            </Button>\n                            &nbsp;\n                            {this.state.data === null ? null :\n                                <Typography style={{marginLeft: 'auto'}}\n                                            variant=\"subtitle2\">Привет, {this.state.data.email}</Typography>}\n                        </Toolbar>\n                    </AppBar>\n\n                    {/*{ ТЕЛО ВСЕЙ СТРАНИЦЫ }*/}\n                    <Container>\n                        <div style={{marginTop: '5rem'}}>\n                            {pagesForMenus.pages.map((dataPage: pageData) => {\n                                return (\n                                    <div key={dataPage.buttonText}>\n                                        <Route exact path={dataPage.path} component={dataPage.component}/>\n                                    </div>\n                                )\n                            })}\n                            <Redirect to=\"/account\"/>\n                        </div>\n                    </Container>\n                </MuiThemeProvider>\n                <StartPage/>\n            </Switch>\n        );\n\n        const isDataNotConfirmed = (\n            <Switch>\n                <MuiThemeProvider theme={theme}>\n                    {/* МЕНЮ В МОБИЛЬНОЙ ВЕРСИИ */}\n                    {isDataNotConfirmedMobileMenu}\n\n                    {/* МЕНЮ В ПОЛНОЙ ВЕРСИИ */}\n                    <AppBar>\n                        <Toolbar className=\"topBarMax\" style={{textAlign: 'right'}}>\n                            {/* ОТДЕЛЬНО ВОЗВРАЩАЕТСЯ КНОПКА ВХОДА */}\n\n                            {pagesForMenus.pages.map((dataPage: pageData) => {\n                                if (dataPage.isDataConfirmed === false) {\n                                    return (\n                                        <div key={dataPage.buttonText}>\n                                            <Link to={dataPage.path}>\n                                                <Button style={{color: \"white\"}} onClick={this.changePage}>\n                                                    <Icon>{dataPage.icon}</Icon>&nbsp;&nbsp;{dataPage.buttonText}\n                                                </Button>\n                                            </Link>\n                                        </div>\n                                    )\n                                }\n                            })}\n                            <DialogLoginForm mobile={false} isLoginSuccess={this.isLoginSuccess}/>\n                            <DialogRegisterForm mobile={false} isLoginSuccess={this.isLoginSuccess}/>\n                        </Toolbar>\n                    </AppBar>\n\n                    {/* ТЕЛО ВСЕЙ СТРАНИЦЫ */}\n                    <Container>\n                        <div style={{marginTop: '5rem'}}>\n                            {pagesForMenus.pages.map((dataPage: pageData) => {\n                                if (dataPage.isDataConfirmed === false) {\n                                    return (\n                                        <div key={dataPage.buttonText}>\n                                            <Route exact path={dataPage.path} component={dataPage.component}/>\n                                        </div>\n                                    )\n                                }\n                            })}\n                            <Redirect to=\"/\"/>\n                        </div>\n                    </Container>\n                </MuiThemeProvider>\n            </Switch>\n        );\n\n        // ВОЗВРАЩАЕТСЯ ЕСЛИ ОЖИДАНИЕ ЗАПРОСА\n        if (this.state.isDataConfirmed === null) {\n            return (isLoadingComponent)\n        }\n        // ВОЗВРАЩАЕТСЯ ЕСЛИ ДАННЫЕ НЕ ПРИШЛИ\n        if (!this.state.isDataConfirmed) {\n            return (isDataNotConfirmed)\n        } else {\n            return (isDataConfirmed)\n        }\n\n    }\n};\n","import React from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport Main from \"./components/Main\";\n\nconst App: React.FC = () => {\n    return (\n        <BrowserRouter>\n            <Main/>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}