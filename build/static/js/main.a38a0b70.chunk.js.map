{"version":3,"sources":["Theme.ts","pages/HelpPage.tsx","AppConstants.tsx","serverApi/http.ts","components/Dialogs/DialogDeleteNews.tsx","components/Dialogs/DialogEditNews.tsx","components/Dialogs/DialogAddLesson.tsx","components/Dialogs/DialogDeleteLesson.tsx","components/Dialogs/DialogEditLesson.tsx","components/Dialogs/DialogAddTaskLesson.tsx","components/UniversalComponents.tsx","pages/StartPage.tsx","serverApi/dataStorage.ts","serverApi/localStorage.ts","components/Dialogs/DialogAddNews.tsx","components/SetAdmin.tsx","pages/AdminComponent.tsx","components/AddTimetable.tsx","components/Dialogs/SnackBar.tsx","components/Dialogs/DialogAddNewTeacher.tsx","components/Dialogs/DialogDeleteTeacher.tsx","components/Dialogs/DialogEditLessonTime.tsx","pages/AccountPage.tsx","pages/SchedulePage.tsx","components/Dialogs/DialogEditTaskLesson.tsx","components/Dialogs/DialogViewDay.tsx","pages/CalendarPage.tsx","AppPagesList.ts","components/Dialogs/DialogLoginForm.tsx","components/Dialogs/DialogRegisterForm.tsx","components/Main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["theme","createMuiTheme","palette","common","black","white","background","paper","default","primary","light","main","dark","contrastText","secondary","error","text","disabled","hint","HelpPage","document","title","react","React","serverApi","Http","url","data","path","fetch","this","method","headers","Content-Type","body","JSON","stringify","token","Authorization","concat","email","DialogDeleteNews","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","state","openDialogWindow","handleOpenLoginDialog","setState","handleClose","confirmDelete","removeNews","props","newsData","then","res","json","result","getNews","inherits","createClass","key","value","react_default","a","createElement","Button","onClick","style","gridRowStart","gridRowEnd","Delete","Dialog","open","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","header","author","DialogActions","color","Component","DialogEditNews","img","confirmEdit","http","oldHeader","oldBody","oldData","editNews","err","console","handleHeaderChange","event","target","handleBodyChange","handleAuthorChange","handleImgChange","Edit","TextField","autoFocus","margin","label","Typography","type","fullWidth","onChange","DialogAddLesson","lessonNumber","lessonName","lessonType","lessonLocation","lessonTeacher","confirmAdd","newLesson","lessonWeek","lessonDay","addLesson","handleLessonNumberChange","handleLessonNameChange","handleLessonTypeChange","handleLessonLocationChange","handleLessonTeacherChange","Add","FormControl","width","InputLabel","htmlFor","Select","input","Input","MenuItem","teachers","map","teacher","name","DialogDeleteLesson","deleteLessonInData","lesson","paddingRight","paddingLeft","marginTop","DialogEditLesson","editLessonInData","oldLesson","uuidv4","require","DialogAddTaskLesson","textForTaskLesson","dateForTaskLesson","Date","newTaskLesson","taskDate","taskText","addNewTaskLesson","handleTaskLessonTextChange","handleChangeDate","PlaylistAdd","variant","material_ui_pickers_esm","utils","MomentUtils","invalidDateMessage","KeyboardButtonProps","aria-label","LoadingComponent","MuiThemeProvider","textAlign","CircularProgress","NewsComponent","_id","Card","admin","display","DialogDeleteNews_DialogDeleteNews","getNewsCb","DialogEditNews_DialogEditNews","Grid","container","spacing","item","xs","sm","CardMedia","height","marginLeft","marginRight","className","image","CardContent","daysInWeek","scheduleString","Math","random","justifyContent","DialogDeleteLesson_DialogDeleteLesson","DialogEditLesson_DialogEditLesson","undefined","DialogAddTaskLesson_DialogAddTaskLesson","Divider","scheduleListComponent","handleAddLesson","week","evenWeek","unevenWeek","List","dense","day","overflowY","ListItem","ListItemText","ListItemSecondaryAction","DialogAddLesson_DialogAddLesson","StartPage","news","_this2","getNewsList","toConsumableArray","flexGrow","UniversalComponents_NewsComponent","subtitle","textBody","cardBody","component","alt","DataStorage","storage","add","logOut","get","LocalStorage","parse","localStorage","getItem","save","removeItem","setItem","DialogAddNews","addNews","SetAdmin","adminEmail","addConfirm","isLoading","findUserData","password","lastLoginDate","registrationDate","handleAdminEmailChange","getUserData","getUserDataFromAdmin","addUserAsAdmin","removeUserAdmin","deleteAccount","userData","AdminComponent","expanded","isNoOneNews","handleChangeExpand","panel","isExpanded","log","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","aria-controls","ExpansionPanelDetails","DialogAddNews_DialogAddNews","SetAdmin_SetAdmin","AddTimetable","tabValue","handleChangeTab","newValue","handleChangeIndexTab","index","lessonObject","addLessonInData","stylesForTab","textTransform","minWidth","timetableMenu","AppBar","position","Tabs","indicatorColor","textColor","Tab","lib_default","axis","direction","onChangeIndex","dir","lessons","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","useStyles1","makeStyles","backgroundColor","green","amber","icon","fontSize","iconVariant","opacity","message","alignItems","MySnackbarContentWrapper","classes","other","objectWithoutProperties","Icon","SnackbarContent","assign","clsx","aria-describedby","action","SnackbarComponent","handleOpen","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","DialogAddNewTeacher","teacherName","handleTeacherNameChange","addNewTeacher","DialogDeleteTeacher","deleteTeacherInData","DialogEditLessonTime","firstLessonStart","lessonTime","lessonStartTime","firstLessonFinish","lessonFinishTime","secondLessonStart","secondLessonFinish","thirdLessonStart","thirdLessonFinish","fourthLessonStart","fourthLessonFinish","fifthLessonStart","fifthLessonFinish","Avatar","AccountPage","isDataConfirmed","lessonTasks","openSnackbar","updateHandler","updateUserData","setTimeout","newData","push","splice","indexOf","addTeacherInData","newTeacher","forEach","teacherForDelete","loginWithToken","_this3","tabsArray","ListAlt","Dashboard","Fingerprint","mobileMenu","tabData","fullMenu","accountPageBody","overflow","AddTimetable_AddTimetable","Group","padding","DialogAddNewTeacher_DialogAddNewTeacher","DialogDeleteTeacher_DialogDeleteTeacher","TimeIcon","DialogEditLessonTime_DialogEditLessonTime","Chip","avatar","AdminComponent_AdminComponent","waitingComponent","SnackBar_SnackbarComponent","SchedulePage","handleAddNewTaskLesson","taskLesson","swipeableViews","DialogEditTaskLesson","handleEditTaskLesson","size","DialogViewDay","IconButton","marginBottom","MoreHoriz","moment","format","tasks","task","DialogEditTaskLesson_DialogEditTaskLesson","CalendarPage","getMonth","months","selectedMonth","taskLessonForEdit","handleCheckboxTaskLesson","returnRussianMonthName","monthName","monthNames","handleChangeMonthInMobileVersion","monthsCounter","count","month","daysInMonth","days","i","date","toDateString","split","calendarMenuFullVersion","dayCard","engMonthName","rusMonthName","Badge","badgeContent","borderLeft","Number","DialogViewDay_DialogViewDay","cells","dayName","Table","tableLayout","TableBody","TableRow","TableCell","slice","monthArray","dayCardMobile","maxWidth","monthArr","pagesForMenus","pages","buttonText","DialogLoginForm","loginState","login","loginForToken","isLoginSuccess","handleEmailChange","handlePasswordChange","mobile","MeetingRoom","DialogRegisterForm","confirmPassword","registrationState","handleConfirmPasswordChange","PersonAdd","Main","menuEl","mobileOpenDialogLoginForm","handleClick","evt","currentTarget","handleExitButton","changePage","isDataConfirmedMobileMenu","Toolbar","aria-haspopup","Menu_default","Menu","anchorEl","keepMounted","Boolean","dataPage","react_router_dom","to","activeStyle","fontWeight","Icon_Icon","esm_Input","isDataNotConfirmedMobileMenu","DialogLoginForm_DialogLoginForm","DialogRegisterForm_DialogRegisterForm","isLoadingComponent","react_router","Container","exact","StartPage_StartPage","isDataNotConfirmed","App","Main_Main","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a38a0b70.chunk.js","sourcesContent":["import {createMuiTheme} from \"@material-ui/core\";\n\nexport const theme = createMuiTheme({\n    \"palette\": {\n        \"common\": {\n            \"black\": \"#000\",\n            \"white\": \"#fff\"\n        },\n        \"background\": {\n            \"paper\": \"rgba(255, 255, 255, 1)\",\n            \"default\": \"#fafafa\"\n        },\n        \"primary\": {\n            \"light\": \"#40c4ff\",\n            \"main\": \"#039be5\",\n            \"dark\": \"rgba(74, 144, 226, 1)\",\n            \"contrastText\": \"#fff\"\n        },\n        \"secondary\": {\n            \"light\": \"#4ffcff\",\n            \"main\": \"#fff\",\n            \"dark\": \"#22c5bb\",\n            \"contrastText\": \"#fff\"\n        },\n        \"error\": {\n            \"light\": \"#e52519\",\n            \"main\": \"#f42740\",\n            \"dark\": \"#8d0600\",\n            \"contrastText\": \"#fff\"\n        },\n        \"text\": {\n            \"primary\": \"rgba(0, 0, 0, 0.87)\",\n            \"secondary\": \"rgba(0, 0, 0, 0.54)\",\n            \"disabled\": \"rgba(0, 0, 0, 0.38)\",\n            \"hint\": \"rgba(0, 0, 0, 0.38)\"\n        }\n    }\n});\n","import * as React from \"react\";\n\nexport default class HelpPage extends React.Component {\n\n\n\n    public render() {\n        document.title = 'Помощь';\n\n        return (\n            <div>\n               HelpPage\n\n            </div>\n        )\n    }\n}\n","export const serverApi = 'https://react-timetable-server.herokuapp.com';\n// https://react-timetable-server.herokuapp.com\n// http://192.168.0.122:7777\n","import {serverApi} from \"../AppConstants\";\nimport {User} from \"../pages/AccountPage\";\n\ninterface loginData {\n    email: string;\n    password: string\n}\n\n\nexport default class Http {\n\n    public url = serverApi;\n\n    public loginForToken(data: loginData, path: string) {\n        return fetch(this.url + path, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        });\n    }\n\n    public loginWithToken(token: string, path: string) {\n        return fetch(this.url + path, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n        });\n    }\n\n    public getNewsList(path: string) {\n        return fetch(this.url + path, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        });\n    }\n\n    public removeNews(body: string, path: string) {\n        return fetch(this.url + path, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({body: body})\n        });\n    }\n\n    public editNews(body: any, path: string) {\n        return fetch(this.url + path, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(body)\n        });\n    }\n\n    public addNews(body: any, path: '/addNews') {\n        return fetch(this.url + path, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(body)\n        });\n    }\n\n    public addUserAsAdmin(body: string, path: '/addAdmin') {\n        return fetch(this.url + path, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({email: body})\n        });\n    }\n\n    public getUserDataFromAdmin(body: string, path: '/getUserDataFromAdmin') {\n        return fetch(this.url + path, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({email: body})\n        });\n    }\n\n    public removeUserAdmin(body: string, path: '/removeUserAdmin') {\n        return fetch(this.url + path, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({email: body})\n        });\n    }\n\n    public deleteAccount(body: string, path: '/deleteAccount') {\n        return fetch(this.url + path, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({email: body})\n        });\n    }\n\n    public updateUserData(body: User, path: '/updateData') {\n        return fetch(this.url + path, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(body)\n        });\n    }\n}\n","import React from 'react'\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n} from \"@material-ui/core\";\nimport Http from \"../../serverApi/http\";\n\nimport {Delete} from \"@material-ui/icons\";\nimport {newsData} from \"../../pages/StartPage\";\n\ninterface DialogDeleteNewsProps {\n    newsData: newsData\n    getNews: any // функция обновления новостей\n}\n\n\nexport class DialogDeleteNews extends React.Component<DialogDeleteNewsProps> {\n\n    state = {\n        openDialogWindow: false\n    };\n\n    public handleOpenLoginDialog = () => {\n        this.setState({\n            openDialogWindow: true\n        })\n    };\n\n    public handleClose = () => {\n        this.setState({\n            openDialogWindow: false,\n        })\n    };\n\n    public confirmDelete = () => {\n        const http = new Http();\n        http.removeNews(this.props.newsData.body, '/removeNews')\n            .then (res => res.json())\n            .then(\n                (result) => {\n                    if (result === true){\n                        this.props.getNews();\n                        this.setState({\n                            openDialogWindow: false\n                        })\n                    }\n                }\n            )\n    };\n\n    public render() {\n        return (\n            <div>\n                <Button onClick={this.handleOpenLoginDialog} style={{gridRowStart: '1', gridRowEnd: '2'}}>\n                    <Delete/>\n                </Button>\n\n                <Dialog open={this.state.openDialogWindow} onClose={this.handleClose}\n                        aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Удаление новости</DialogTitle>\n\n                    <DialogContent>\n                        <DialogContentText>\n                            Заголовок: {this.props.newsData.header}\n                        </DialogContentText>\n                        <DialogContentText>\n                            Текст: {this.props.newsData.body}\n                        </DialogContentText>\n                        <DialogContentText>\n                            Автор: {this.props.newsData.author}, дата: {this.props.newsData.data}\n                        </DialogContentText>\n\n\n                    </DialogContent>\n\n                    <DialogActions>\n\n                        <Button onClick={this.confirmDelete} color=\"primary\">\n                            Удалить\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Отмена\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle, TextField,\n    Typography\n} from \"@material-ui/core\";\nimport Http from \"../../serverApi/http\";\n\nimport {Edit} from \"@material-ui/icons\";\nimport {newsData} from \"../../pages/StartPage\";\n\ninterface DialogEditNewsProps {\n    newsData: newsData\n    getNews: any // функция обновления новостей\n}\n\n\nexport class DialogEditNews extends React.Component<DialogEditNewsProps> {\n\n    state = {\n        openDialogWindow: false,\n        header: this.props.newsData.header,\n        body: this.props.newsData.body,\n        author: this.props.newsData.author,\n        img: this.props.newsData.img\n    };\n\n    public handleOpenLoginDialog = () => {\n        this.setState({\n            openDialogWindow: true\n        })\n    };\n\n    public handleClose = () => {\n        this.setState({\n            openDialogWindow: false,\n        })\n    };\n\n    public confirmEdit = () => {\n        const http = new Http();\n        const data = {\n            oldHeader: this.props.newsData.header,\n            oldBody: this.props.newsData.body,\n            oldData: this.props.newsData.data,\n            header: this.state.header,\n            body: this.state.body,\n            author: this.state.author,\n            img: this.state.img\n        };\n        http.editNews(data, '/editNews')\n            .then (res => res.json())\n            .then (\n                (result)=>{\n                    if (result === true){\n                        this.props.getNews();\n                        this.setState({\n                            openDialogWindow: false,\n                        })\n                    }\n                },\n                (err)=>{\n                    console.error(err)\n                }\n            )\n    };\n\n    public handleHeaderChange = (event: any) => {\n        this.setState({\n            header: event.target.value\n        })\n    };\n\n    public handleBodyChange = (event: any) => {\n        this.setState({\n            body: event.target.value\n        })\n    };\n\n    public handleAuthorChange = (event: any) => {\n        this.setState({\n            author: event.target.value\n        })\n    };\n\n    public handleImgChange = (event: any) => {\n        this.setState({\n            img: event.target.value\n        })\n    };\n\n    public render() {\n        return (\n            <div>\n                <Button onClick={this.handleOpenLoginDialog}>\n                    <Edit/>\n                </Button>\n\n                <Dialog open={this.state.openDialogWindow} onClose={this.handleClose}\n                        aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Редактирование новости</DialogTitle>\n\n                    <DialogContent>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"login\"\n                                label={<Typography>Заголовок: </Typography>}\n                                type=\"text\"\n                                value={this.state.header}\n                                fullWidth\n                                onChange={this.handleHeaderChange}\n                            />\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Текст новости: </Typography>}\n                            value={this.state.body}\n                            fullWidth\n                            onChange={this.handleBodyChange}\n                        />\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Автор: </Typography>}\n                            value={this.state.author}\n                            fullWidth\n                            onChange={this.handleAuthorChange}\n                        />\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Картинка: </Typography>}\n                            value={this.state.img}\n                            fullWidth\n                            onChange={this.handleImgChange}\n                        />\n\n\n                    </DialogContent>\n\n                    <DialogActions>\n\n                        <Button onClick={this.confirmEdit} color=\"primary\">\n                            Сохранить\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Отмена\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle, FormControl, Input, InputLabel, MenuItem, Select, TextField,\n    Typography\n} from \"@material-ui/core\";\nimport {Add} from \"@material-ui/icons\";\nimport {TeacherData} from \"../../pages/AccountPage\";\n\ninterface DialogAddLessonProps {\n    lessonDay: string,\n    lessonWeek: string,\n    addLesson: any // cb для добавления\n    teachers: TeacherData[]\n}\n\nexport interface newLesson {\n    lessonWeek: string;\n    lessonDay: string;\n    lessonName: string;\n    lessonType: string;\n    lessonNumber: string;\n    lessonLocation: string;\n    lessonTeacher: string;\n}\n\n\nexport class DialogAddLesson extends React.Component<DialogAddLessonProps> {\n\n    state = {\n        openDialogWindow: false,\n        lessonNumber: '',\n        lessonName: '',\n        lessonType: '',\n        lessonLocation: '',\n        lessonTeacher: ''\n    };\n\n\n    public handleOpenLoginDialog = () => {\n        this.setState({\n            openDialogWindow: true\n        })\n    };\n\n    public handleClose = () => {\n        this.setState({\n            openDialogWindow: false,\n        })\n    };\n\n    public confirmAdd = () => {\n        const newLesson: newLesson = {\n            lessonWeek: this.props.lessonWeek,\n            lessonDay: this.props.lessonDay,\n            lessonName: this.state.lessonName,\n            lessonType: this.state.lessonType,\n            lessonNumber: this.state.lessonNumber,\n            lessonLocation: this.state.lessonLocation,\n            lessonTeacher: this.state.lessonTeacher\n        };\n        this.props.addLesson(newLesson);\n        this.handleClose()\n    };\n\n    public handleLessonNumberChange = (event: any) => {\n        this.setState({\n            lessonNumber: event.target.value\n        })\n    };\n\n    public handleLessonNameChange = (event: any) => {\n        this.setState({\n            lessonName: event.target.value\n        })\n    };\n\n    public handleLessonTypeChange = (event: any) => {\n        this.setState({\n            lessonType: event.target.value\n        })\n    };\n\n    public handleLessonLocationChange = (event: any) => {\n        this.setState({\n            lessonLocation: event.target.value\n        })\n    };\n\n    public handleLessonTeacherChange = (event: any) => {\n        this.setState({\n            lessonTeacher: event.target.value\n        })\n    };\n\n    public render() {\n        return (\n            <div>\n                <Button color=\"primary\" onClick={this.handleOpenLoginDialog}>\n                    <Add/>\n                </Button>\n                <Dialog open={this.state.openDialogWindow} onClose={this.handleClose}\n                        aria-labelledby=\"form-dialog-title\">\n\n                    <DialogTitle id=\"form-dialog-title\">Добавление нового занятия</DialogTitle>\n\n                    <DialogContent>\n                        <FormControl style={{width: '100%'}}>\n                            <InputLabel htmlFor=\"selectLessonNumber\">Номер занятия</InputLabel>\n                            <Select\n                                value={this.state.lessonNumber}\n                                onChange={this.handleLessonNumberChange}\n                                input={<Input id=\"selectLessonNumber\"/>}\n                                fullWidth\n                            >\n                                <MenuItem value={'1: 8:00 - 9:30'}>1: 8:00 - 9:30</MenuItem>\n                                <MenuItem value={'2: 9:40 - 11:10'}>2: 9:40 - 11:10</MenuItem>\n                                <MenuItem value={'3: 11:20 - 12:50'}>3: 11:20 - 12:50</MenuItem>\n                                <MenuItem value={'4: 13:30 - 15:00'}>4: 13:30 - 15:00</MenuItem>\n                                <MenuItem value={'5: 15:10 - 16:40'}>5: 15:10 - 16:40</MenuItem>\n                                <MenuItem value={'6: 16:40 - 18:10'}>6: 16:50 - 18:10</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <TextField\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Название предмета: </Typography>}\n                            value={this.state.lessonName}\n                            fullWidth\n                            onChange={this.handleLessonNameChange}\n                        />\n                        <FormControl style={{width: '100%'}}>\n                            <InputLabel htmlFor=\"selectLesson\">Вид занятия</InputLabel>\n                            <Select\n                                value={this.state.lessonType}\n                                onChange={this.handleLessonTypeChange}\n                                input={<Input id=\"selectLesson\"/>}\n                                fullWidth\n                            >\n                                <MenuItem value={'Лекция'}>Лекция</MenuItem>\n                                <MenuItem value={'Лабораторная работа'}>Лабораторная работа</MenuItem>\n                                <MenuItem value={'Практика'}>Практика</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <TextField\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Здание, аудитория: </Typography>}\n                            value={this.state.lessonLocation}\n                            fullWidth\n                            onChange={this.handleLessonLocationChange}\n                        />\n                        <FormControl style={{width: '100%'}}>\n                            <InputLabel htmlFor=\"selectTeacher\">Преподаватель</InputLabel>\n                            <Select\n                                value={this.state.lessonTeacher}\n                                onChange={this.handleLessonTeacherChange}\n                                input={<Input id=\"selectTeacher\"/>}\n                                fullWidth\n                            >\n                                {this.props.teachers.map((teacher: TeacherData) => {\n                                    return (\n                                        <MenuItem value={teacher.name} key={teacher.id}>{teacher.name}</MenuItem>\n                                    )\n                                })}\n                            </Select>\n                        </FormControl>\n                    </DialogContent>\n\n                    <DialogActions>\n\n                        <Button onClick={this.confirmAdd} color=\"primary\">\n                            Добавить\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Отмена\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n} from \"@material-ui/core\";\n\nimport {Delete} from \"@material-ui/icons\";\nimport {newLesson} from \"./DialogAddLesson\";\n\ninterface DialogDeleteLessonProps {\n    lesson: newLesson\n    deleteLessonInData: any\n}\n\n\nexport class DialogDeleteLesson extends React.Component<DialogDeleteLessonProps> {\n\n    state = {\n        openDialogWindow: false\n    };\n\n    public handleOpenLoginDialog = () => {\n        this.setState({\n            openDialogWindow: true\n        })\n    };\n\n    public handleClose = () => {\n        this.setState({\n            openDialogWindow: false,\n        })\n    };\n\n    public confirmDelete = () => {\n        this.props.deleteLessonInData(this.props.lesson)\n    };\n\n    public render() {\n        return (\n            <div>\n                <Button onClick={this.handleOpenLoginDialog} style={{paddingRight: 0, paddingLeft: 0, marginTop: '5px'}}>\n                    <Delete/>\n                </Button>\n\n                <Dialog open={this.state.openDialogWindow} onClose={this.handleClose}\n                        aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Удаление занятия</DialogTitle>\n\n                    <DialogContent>\n                        <DialogContentText>\n                            Неделя, месяц: {this.props.lesson.lessonWeek}, {this.props.lesson.lessonDay}\n                        </DialogContentText>\n                        <DialogContentText>\n                            Занятие: {this.props.lesson.lessonName}, {this.props.lesson.lessonType}\n                        </DialogContentText>\n\n\n                    </DialogContent>\n\n                    <DialogActions>\n                        <Button onClick={this.confirmDelete} color=\"primary\">\n                            Удалить\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Отмена\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle, FormControl, Input, InputLabel, MenuItem, Select, TextField,\n    Typography\n} from \"@material-ui/core\";\nimport {Edit} from \"@material-ui/icons\";\nimport {newLesson} from \"./DialogAddLesson\";\nimport {TeacherData} from \"../../pages/AccountPage\";\n\ninterface DialogEditLessonProps {\n    lesson: newLesson\n    editLessonInData: any // cb для добавления\n    teachers: TeacherData[]\n}\n\n\nexport class DialogEditLesson extends React.Component<DialogEditLessonProps> {\n\n    state = {\n        openDialogWindow: false,\n        lessonNumber: this.props.lesson.lessonNumber,\n        lessonName: this.props.lesson.lessonName,\n        lessonType: this.props.lesson.lessonType,\n        lessonLocation: this.props.lesson.lessonLocation,\n        lessonTeacher: this.props.lesson.lessonTeacher\n    };\n\n    public handleOpenLoginDialog = () => {\n        this.setState({\n            openDialogWindow: true\n        })\n    };\n\n    public handleClose = () => {\n        this.setState({\n            openDialogWindow: false,\n        })\n    };\n\n    public confirmEdit= () => {\n        const newLesson: newLesson = {\n            lessonWeek: this.props.lesson.lessonWeek,\n            lessonDay: this.props.lesson.lessonDay,\n            lessonName: this.state.lessonName,\n            lessonType: this.state.lessonType,\n            lessonNumber: this.state.lessonNumber,\n            lessonLocation: this.state.lessonLocation,\n            lessonTeacher: this.state.lessonTeacher\n        };\n        this.props.editLessonInData({oldLesson: this.props.lesson, newLesson: newLesson});\n        this.handleClose()\n    };\n\n    public handleLessonNumberChange = (event: any) => {\n        this.setState({\n            lessonNumber: event.target.value\n        })\n    };\n\n    public handleLessonNameChange = (event: any) => {\n        this.setState({\n            lessonName: event.target.value\n        })\n    };\n\n    public handleLessonTypeChange = (event: any) => {\n        this.setState({\n            lessonType: event.target.value\n        })\n    };\n\n    public handleLessonLocationChange = (event: any) => {\n        this.setState({\n            lessonLocation: event.target.value\n        })\n    };\n\n    public handleLessonTeacherChange = (event: any) => {\n        this.setState({\n            lessonTeacher: event.target.value\n        })\n    };\n\n    public render() {\n        return (\n            <div>\n                <Button onClick={this.handleOpenLoginDialog}  style={{paddingRight: 0, paddingLeft: 0, marginTop: '5px'}}>\n                    <Edit/>\n                </Button>\n\n                <Dialog open={this.state.openDialogWindow} onClose={this.handleClose}\n                        aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Редактирование занятия</DialogTitle>\n\n                    <DialogContent>\n                        <FormControl style={{width: '100%'}}>\n                            <InputLabel htmlFor=\"selectLessonNumber\">Номер занятия</InputLabel>\n                            <Select\n                                value={this.state.lessonNumber}\n                                onChange={this.handleLessonNumberChange}\n                                input={<Input id=\"selectLessonNumber\" />}\n                                fullWidth\n                            >\n                                <MenuItem value={'1: 8:00 - 9:30'}>1: 8:00 - 9:30</MenuItem>\n                                <MenuItem value={'2: 9:40 - 11:10'}>2: 9:40 - 11:10</MenuItem>\n                                <MenuItem value={'3: 11:20 - 12:50'}>3: 11:20 - 12:50</MenuItem>\n                                <MenuItem value={'4: 13:30 - 15:00'}>4: 13:30 - 15:00</MenuItem>\n                                <MenuItem value={'5: 15:10 - 16:40'}>5: 15:10 - 16:40</MenuItem>\n                                <MenuItem value={'6: 16:40 - 18:10'}>6: 16:50 - 18:10</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <TextField\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Название предмета: </Typography>}\n                            value={this.state.lessonName}\n                            fullWidth\n                            onChange={this.handleLessonNameChange}\n                        />\n                        <FormControl style={{width: '100%'}}>\n                            <InputLabel htmlFor=\"selectLesson\">Вид занятия</InputLabel>\n                            <Select\n                                value={this.state.lessonType}\n                                onChange={this.handleLessonTypeChange}\n                                input={<Input id=\"selectLesson\" />}\n                                fullWidth\n                            >\n                                <MenuItem value={'Лекция'}>Лекция</MenuItem>\n                                <MenuItem value={'Лабораторная работа'}>Лабораторная работа</MenuItem>\n                                <MenuItem value={'Практика'}>Практика</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <TextField\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Здание, аудитория: </Typography>}\n                            value={this.state.lessonLocation}\n                            fullWidth\n                            onChange={this.handleLessonLocationChange}\n                        />\n                        <FormControl style={{width: '100%'}}>\n                            <InputLabel htmlFor=\"selectTeacher\">Преподаватель</InputLabel>\n                            <Select\n                                value={this.props.lesson.lessonTeacher}\n                                onChange={this.handleLessonTeacherChange}\n                                input={<Input id=\"selectTeacher\"/>}\n                                fullWidth\n                            >\n                                {this.props.teachers.map((teacher: TeacherData) => {\n                                    return (\n                                        <MenuItem value={teacher.name} key={teacher.id}>{teacher.name}</MenuItem>\n                                    )\n                                })}\n                            </Select>\n                        </FormControl>\n\n                    </DialogContent>\n\n                    <DialogActions>\n\n                        <Button onClick={this.confirmEdit} color=\"primary\">\n                            Сохранить\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Отмена\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle, TextField,\n    Typography\n} from \"@material-ui/core\";\nimport {PlaylistAdd} from \"@material-ui/icons\";\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport MomentUtils from \"@date-io/moment\";\nimport \"moment/locale/ru\";\nconst uuidv4 = require('uuid/v4');\n\n\ninterface DialogAddTaskLessonProps {\n    lesson: newLesson\n    addNewTaskLesson: any // cb для добавления\n}\n\nexport interface newLesson {\n    lessonWeek: string;\n    lessonDay: string;\n    lessonName: string;\n    lessonType: string;\n    lessonNumber: string;\n    lessonLocation: string;\n    lessonTeacher: string;\n}\n\nexport interface newTaskLesson {\n    lesson: newLesson,\n    taskDate: any,\n    taskText: string,\n    id: string\n}\n\n\nexport class DialogAddTaskLesson extends React.Component<DialogAddTaskLessonProps> {\n\n    state = {\n        openDialogWindow: false,\n        textForTaskLesson: '',\n        dateForTaskLesson: new Date()\n    };\n\n    public handleOpenLoginDialog = () => {\n        this.setState({\n            openDialogWindow: true\n        })\n    };\n\n    public handleClose = () => {\n        this.setState({\n            openDialogWindow: false,\n        })\n    };\n\n    public confirmAdd = () => {\n        const newTaskLesson: newTaskLesson = {\n            lesson: {\n                lessonWeek: this.props.lesson.lessonWeek,\n                lessonDay: this.props.lesson.lessonDay,\n                lessonName: this.props.lesson.lessonName,\n                lessonType: this.props.lesson.lessonType,\n                lessonNumber: this.props.lesson.lessonNumber,\n                lessonLocation: this.props.lesson.lessonLocation,\n                lessonTeacher: this.props.lesson.lessonTeacher\n\n            },\n            taskDate: new Date(this.state.dateForTaskLesson),\n            taskText: this.state.textForTaskLesson,\n            id: uuidv4()\n        };\n        this.props.addNewTaskLesson(newTaskLesson);\n        this.handleClose()\n    };\n\n    public handleTaskLessonTextChange = (event: any) => {\n        this.setState({\n            textForTaskLesson: event.target.value\n        })\n    };\n\n    public handleChangeDate = (value: any) => {\n        this.setState({\n            dateForTaskLesson: value\n        })\n    };\n\n    public render() {\n        return (\n            <div>\n                <Button color=\"primary\" onClick={this.handleOpenLoginDialog}>\n                    <PlaylistAdd/>\n                </Button>\n                <Dialog open={this.state.openDialogWindow} onClose={this.handleClose}\n                        aria-labelledby=\"form-dialog-title\">\n\n                    <DialogTitle id=\"form-dialog-title\">Добавление задания: {this.props.lesson.lessonDay}, {this.props.lesson.lessonWeek} неделя</DialogTitle>\n\n                    <DialogContent>\n                        <Typography variant=\"body1\">Предмет: {this.props.lesson.lessonName}</Typography>\n                        <Typography variant=\"body1\">Тип занятия: {this.props.lesson.lessonType}</Typography>\n                        <Typography variant=\"body1\">Номер пары: {this.props.lesson.lessonNumber}</Typography>\n                        <Typography variant=\"body1\">Преподаватель: {this.props.lesson.lessonTeacher}</Typography>\n                        <Typography variant=\"body1\">Место занятия: {this.props.lesson.lessonLocation}</Typography>\n                        <TextField\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Текст задания: </Typography>}\n                            value={this.state.textForTaskLesson}\n                            fullWidth\n                            onChange={this.handleTaskLessonTextChange}\n                        />\n                        <MuiPickersUtilsProvider utils={MomentUtils} >\n                                <KeyboardDatePicker\n                                    style={{width: '100%'}}\n                                    id=\"mui-pickers-date\"\n                                    invalidDateMessage=\"Неверный формат даты\"\n                                    label=\"На какую дату внести задание:\"\n                                    value={this.state.dateForTaskLesson}\n                                    onChange={this.handleChangeDate}\n                                    KeyboardButtonProps={{\n                                        'aria-label': 'change date',\n                                    }}\n                                />\n\n                        </MuiPickersUtilsProvider>\n\n                    </DialogContent>\n\n                    <DialogActions>\n\n                        <Button onClick={this.confirmAdd} color=\"primary\">\n                            Добавить\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Отмена\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n","import {theme} from \"../Theme\";\nimport {\n    Card,\n    CardContent,\n    CardMedia,\n    CircularProgress, Divider,\n    Grid,\n    List,\n    ListItem, ListItemSecondaryAction,\n    ListItemText,\n    Typography\n} from \"@material-ui/core\";\nimport {MuiThemeProvider} from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport {DataStorage} from \"../serverApi/dataStorage\";\nimport {LocalStorage} from \"../serverApi/localStorage\";\nimport Http from \"../serverApi/http\";\nimport {DialogDeleteNews} from \"./Dialogs/DialogDeleteNews\";\nimport {DialogEditNews} from \"./Dialogs/DialogEditNews\";\nimport {newsData} from \"../pages/StartPage\";\nimport {DialogAddLesson, newLesson} from \"./Dialogs/DialogAddLesson\";\nimport {DialogDeleteLesson} from \"./Dialogs/DialogDeleteLesson\";\nimport {DialogEditLesson} from \"./Dialogs/DialogEditLesson\";\nimport {DialogAddTaskLesson} from \"./Dialogs/DialogAddTaskLesson\";\nimport {TeacherData} from \"../pages/AccountPage\";\n\nexport const LoadingComponent = (\n    <MuiThemeProvider theme={theme}>\n        <div style={{marginTop: '1rem', textAlign: 'center'}}>\n            <CircularProgress/>\n            <div>\n                <Typography variant={\"h6\"}>Пожалуйста, подождите. Данные обновляются.</Typography>\n            </div>\n        </div>\n    </MuiThemeProvider>\n);\n\ninterface NewsComponentProps {\n    newsData: newsData,\n    admin: boolean,\n    getNewsCb?: any\n}\n\nexport default class NewsComponent extends React.Component<NewsComponentProps> {\n\n    public render() {\n        return (\n            <div key={this.props.newsData._id}>\n\n                <Card style={{marginTop: '1rem'}}>\n                    {this.props.admin ? <div style={{display: 'flex', margin: '10px'}}>\n                        <DialogDeleteNews newsData={this.props.newsData}\n                                          getNews={this.props.getNewsCb}/>\n                        <DialogEditNews newsData={this.props.newsData}\n                                        getNews={this.props.getNewsCb}/>\n                    </div> : null}\n\n                    <div style={{textAlign: 'center'}}>\n                        <Grid container spacing={3}>\n                            <Grid item xs={12} sm={4}>\n                                <CardMedia\n                                    style={{\n                                        width: '220px',\n                                        height: '220px',\n                                        marginLeft: 'auto',\n                                        marginRight: 'auto',\n                                        margin: '1.5rem',\n                                        gridRowStart: 1,\n                                        gridRowEnd: 2\n                                    }}\n                                    className=\"boxShadow\"\n                                    image={this.props.newsData.img}\n                                    title={this.props.newsData.header}\n                                />\n\n                            </Grid>\n                            <Grid item xs={12} sm={8}>\n                                <CardContent>\n                                    <Typography\n                                        variant=\"h6\">{this.props.newsData.header}</Typography>\n                                </CardContent>\n                                <Typography\n                                    variant=\"body1\">{this.props.newsData.body}</Typography>\n                                <Typography variant=\"caption\"\n                                            style={{\n                                                color: 'grey',\n                                                marginLeft: 'auto',\n                                            }}>Дата:&nbsp; {this.props.newsData.data}, &nbsp; Автор: &nbsp;{this.props.newsData.author}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </Card>\n            </div>\n        )\n    }\n}\n\nconst daysInWeek = ['Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'];\n\nconst scheduleString = (teachers: TeacherData[], lesson: newLesson, editLessonInData: any, deleteLessonInData: any, addNewTaskLesson?: any ) => {\n    return (\n        <div key={Math.random()} style={{marginTop: '7px'}}>\n            <Grid container spacing={3} key={Math.random()} style={{marginLeft: '1rem', width: '95%'}}>\n                <Grid item xs={12} sm={3}>\n                    <Typography>{lesson.lessonName}</Typography>\n                    <Typography style={{color: 'grey'}}>{lesson.lessonNumber}</Typography>\n                </Grid>\n                <Grid item xs={12} sm={3}>\n                    <Typography>{lesson.lessonType}</Typography>\n                    <Typography style={{color: 'grey'}}>{lesson.lessonTeacher}</Typography>\n                </Grid>\n                <Grid item xs={6} sm={3}>\n                    <Typography>{lesson.lessonLocation}</Typography>\n                </Grid>\n                <Grid item sm={3} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                    {editLessonInData === false ? null :\n                        <DialogDeleteLesson lesson={lesson} deleteLessonInData={deleteLessonInData}/>}\n                    {editLessonInData === false ? null :\n                        <DialogEditLesson teachers={teachers} lesson={lesson} editLessonInData={editLessonInData}/>}\n                    {addNewTaskLesson === undefined ? null :\n                        <DialogAddTaskLesson lesson={lesson} addNewTaskLesson={addNewTaskLesson}/>}\n                </Grid>\n            </Grid>\n            <Divider/>\n        </div>\n    )\n};\n\n\nexport const scheduleListComponent = (teachers: TeacherData[], handleAddLesson: any, editLessonInData: any, deleteLessonInData: any, week: 'Четная' | 'Нечетная', evenWeek: newLesson[], unevenWeek: newLesson[], addNewTaskLesson?: any) => {\n    return (\n        <div>\n            <List dense={true}>\n                {daysInWeek.map((day: string) => {\n                    return (\n                        <div key={'day' + Math.random()} style={{overflowY: 'hidden'}}>\n                            <ListItem>\n                                <ListItemText\n                                    primary={<Typography variant='h6'>{day}</Typography>}\n                                />\n                                <ListItemSecondaryAction>\n                                    {addNewTaskLesson !== undefined ? null :\n                                        <DialogAddLesson lessonDay={day} lessonWeek={week}\n                                                         addLesson={handleAddLesson} teachers={teachers}/>}\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            {evenWeek.map((lesson: newLesson) => {\n                                if (lesson.lessonDay === day && lesson.lessonWeek === week) {\n                                    return (scheduleString(teachers, lesson, editLessonInData, deleteLessonInData, addNewTaskLesson))\n                                }\n                            })}\n                            {unevenWeek.map((lesson: newLesson) => {\n                                if (lesson.lessonDay === day && lesson.lessonWeek === week) {\n                                    return (scheduleString(teachers, lesson, editLessonInData, deleteLessonInData, addNewTaskLesson))\n                                }\n                            })}\n                        </div>\n                    )\n                })}\n            </List>\n        </div>\n    )\n};\n\n\n","import * as React from \"react\";\nimport {Card, CardContent, CardMedia, Grid, Typography} from \"@material-ui/core\";\nimport Http from \"../serverApi/http\";\nimport NewsComponent, {LoadingComponent} from \"../components/UniversalComponents\";\n\n\nexport interface newsData {\n    _id: string\n    header: string,\n    body: string,\n    img: string,\n    author: string,\n    data: string\n}\n\nexport default class StartPage extends React.Component {\n\n    state = {\n        news: []\n    };\n\n    public componentDidMount(): void {\n        const http = new Http();\n        http.getNewsList('/getNewsList')\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        news: [...result]\n                    })\n                }\n            )\n    }\n\n\n    public render() {\n        document.title = 'Главная';\n\n\n        const cardTextArray = [\n            {\n                id: '0',\n                title: 'Задание на дом',\n                subtitle: '',\n                textBody: 'Добавь домашнее задание на любую дату',\n                img: 'https://1.bp.blogspot.com/-rIHSvpNC0ac/W7AMioDMmZI/AAAAAAAATEY/4Kw38DZpWV0Fry7vz29PaO0YMm5qwy5sQCK4BGAYYCw/w1200-h630-p-k-no-nu/IMedia9_Writing.jpg'\n            },\n            {\n                id: '1',\n                title: 'Новости',\n                subtitle: '',\n                textBody: 'Получай всегда актуальные новости КАИ и не только',\n                img: 'https://c.pxhere.com/photos/dd/d8/blogging_computer_desk_notebook_notes_pen_writing-971343.jpg!d'\n            },\n            {\n                id: '2',\n                title: 'Уведомления',\n                subtitle: 'Псс... хочешь немного уведомлений?',\n                textBody: 'Отклоняй надоедливые уведомления каждый раз, когда они почему-то приходят',\n                img: 'http://www.twseo.com.tw/wp-content/uploads/2018/05/a3749ad203d8f65ac6290fde65778583.jpeg'\n            },\n            {\n                id: '3',\n                title: 'Внеси собственное расписание',\n                subtitle: '',\n                textBody: 'Сервис позволяет тебе внести свое расписание, записывать задания на каждый отдельный предмет и отмечать, если оно было уже выполнено!',\n                img: 'https://miro.medium.com/max/4043/0*gzqObH33C3zVLxKg.jpg'\n            },\n            {\n                id: '4',\n                title: 'Следи за своими задачами',\n                subtitle: '',\n                textBody: 'Внеси свои задачи, чтобы не забыть, что нужно сделать. Редактируй их, отмечай выполненные и просматривай их в отдельном хранилище!',\n                img: 'https://i.imgur.com/plWb1GA.jpg'\n            },\n            {\n                id: '5',\n                title: 'Сохрани все важные ссылки',\n                subtitle: '',\n                textBody: 'Сохрани важные ссылки, чтобы не забыть прочитать их позже! Редактируй, добавляй теги, используй поиск по названиям и тегам!',\n                img: 'https://i.pinimg.com/originals/a2/5f/69/a25f69c7252cc082307310bf76c42d95.jpg'\n            },\n\n        ];\n        return (\n            <div>\n                <div style={{flexGrow: 1}}>\n                    <Grid container spacing={3}>\n                        <Grid style={{textAlign: 'center'}} item xs={12} sm={12}>\n\n                                {this.state.news.length === 0 ?\n                                    <CardContent>\n                                        {LoadingComponent}\n                                    </CardContent> :\n                                    <div>\n                                        {this.state.news.map((newsData: newsData) => {\n                                            return (\n                                                <NewsComponent key={newsData._id} newsData={newsData} admin={false} />\n                                            )\n                                        })}\n                                    </div>\n                                }\n\n                        </Grid>\n                        {cardTextArray.map((cardBody) => {\n                            return (\n                                <Grid style={{textAlign: 'center'}} item xs={12} sm={4} key={cardBody.id}>\n                                    <Card>\n                                        {cardBody.img.length > 0 ? <CardMedia\n                                            component=\"img\"\n                                            alt=\"\"\n                                            height=\"140\"\n                                            image={cardBody.img}\n                                            title=\"\"\n                                        /> : null}\n\n                                        <CardContent style={{height: '130px'}}>\n                                            <Typography variant=\"h5\">\n                                                {cardBody.title}\n                                            </Typography>\n                                            <Typography color=\"textSecondary\">\n                                                {cardBody.subtitle}\n                                            </Typography>\n                                            <Typography variant=\"body1\" component=\"p\">\n                                                {cardBody.textBody}\n                                            </Typography>\n                                        </CardContent>\n                                    </Card>\n                                </Grid>\n                            )\n                        })}\n                    </Grid>\n                </div>\n            </div>\n        )\n    }\n}\n","export class Link {\n    public data:string;\n    constructor(data:string) {\n        this.data = data\n    }\n}\n\nexport class DataStorage {\n    public storage:any;\n\n    constructor(storage:any) {\n        this.storage = storage;\n    }\n\n    get getUserData() {\n        return this.storage.data;\n    }\n\n    add(data:string) {\n        this.storage.add(data);\n    }\n\n    logOut () {\n        this.storage.logOut();\n    }\n\n}\n","export class LocalStorage {\n    public data:string;\n    constructor() {\n        // @ts-ignore\n        this.data = JSON.parse(localStorage.getItem('data'));\n\n    }\n\n    add(data:any) {\n        this.data = data;\n        this.save();\n    }\n\n    logOut() {\n        localStorage.removeItem('data');\n    }\n\n    save() {\n        localStorage.setItem('data', JSON.stringify(this.data)); // stringify - преобразование объекта в строку\n    }\n\n\n}\n\n","import React from 'react'\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle, TextField,\n    Typography\n} from \"@material-ui/core\";\nimport Http from \"../../serverApi/http\";\n\ninterface DialogAddNewsProps {\n    getNews: any // функция обновления новостей\n}\n\n\nexport class DialogAddNews extends React.Component<DialogAddNewsProps> {\n\n    state = {\n        openDialogWindow: false,\n        header: '',\n        body: '',\n        author: '',\n        img: ''\n    };\n\n    public handleOpenLoginDialog = () => {\n        this.setState({\n            openDialogWindow: true\n        })\n    };\n\n    public handleClose = () => {\n        this.setState({\n            openDialogWindow: false,\n        })\n    };\n\n    public confirmEdit = () => {\n        const http = new Http();\n        const data = {\n            header: this.state.header,\n            body: this.state.body,\n            author: this.state.author,\n            img: this.state.img,\n            data: new Date()\n        };\n        http.addNews(data, '/addNews')\n            .then (res => res.json())\n            .then (\n                (result)=>{\n                    if (result === true){\n                        this.props.getNews();\n                        this.setState({\n                            openDialogWindow: false\n                        })\n                    }\n                },\n                (err)=>{\n                    console.error(err)\n                }\n            )\n    };\n\n    public handleHeaderChange = (event: any) => {\n        this.setState({\n            header: event.target.value\n        })\n    };\n\n    public handleBodyChange = (event: any) => {\n        this.setState({\n            body: event.target.value\n        })\n    };\n\n    public handleAuthorChange = (event: any) => {\n        this.setState({\n            author: event.target.value\n        })\n    };\n\n    public handleImgChange = (event: any) => {\n        this.setState({\n            img: event.target.value\n        })\n    };\n\n    public render() {\n        return (\n            <div>\n                <Button color=\"primary\" variant=\"contained\" onClick={this.handleOpenLoginDialog}>\n                    Добавить новость\n                </Button>\n\n                <Dialog open={this.state.openDialogWindow} onClose={this.handleClose}\n                        aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Добавление новости</DialogTitle>\n\n                    <DialogContent>\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Заголовок: </Typography>}\n                            type=\"text\"\n                            value={this.state.header}\n                            fullWidth\n                            onChange={this.handleHeaderChange}\n                        />\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Текст новости: </Typography>}\n                            value={this.state.body}\n                            fullWidth\n                            onChange={this.handleBodyChange}\n                        />\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Автор: </Typography>}\n                            value={this.state.author}\n                            fullWidth\n                            onChange={this.handleAuthorChange}\n                        />\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Картинка: </Typography>}\n                            value={this.state.img}\n                            fullWidth\n                            onChange={this.handleImgChange}\n                        />\n\n                    </DialogContent>\n\n                    <DialogActions>\n\n                        <Button onClick={this.confirmEdit} color=\"primary\">\n                            Сохранить\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Отмена\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n","import * as React from \"react\";\nimport {Button, Card, CardContent, TextField, Typography} from \"@material-ui/core\";\nimport Http from \"../serverApi/http\";\nimport {LoadingComponent} from \"./UniversalComponents\";\n\nexport default class SetAdmin extends React.Component {\n\n    state = {\n        adminEmail: '',\n        addConfirm: '',\n        isLoading: false,\n        findUserData: {email: '1', password: '', lastLoginDate: '', registrationDate: '', admin: false}\n    };\n\n    public handleAdminEmailChange = (event: any) => {\n        this.setState({\n            adminEmail: event.target.value\n        })\n    };\n\n    public getUserData = () => {\n        this.setState({\n            isLoading: true,\n            addConfirm: '',\n            findUserData: {email: '1', password: '', lastLoginDate: '', registrationDate: '', admin: false}\n        });\n        const http = new Http();\n        http.getUserDataFromAdmin(this.state.adminEmail, '/getUserDataFromAdmin')\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    if (result !== 'false') {\n                        this.setState({\n                            isLoading: false,\n                            findUserData: result\n                        })\n                    }\n                    if (result === 'false') {\n                        this.setState({\n                            isLoading: false,\n                            addConfirm: 'Пользователь не найден'\n                        })\n                    }\n                }\n            )\n    }\n\n    public addUserAsAdmin = () => {\n        this.setState({\n            isLoading: true,\n            addConfirm: ''\n        });\n        const http = new Http();\n        http.addUserAsAdmin(this.state.findUserData.email, '/addAdmin')\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    if (result === true) {\n                        this.setState({\n                            addConfirm: 'Пользователь успешно добавлен',\n                            isLoading: false,\n                            findUserData: {email: '1', password: '', lastLoginDate: '', registrationDate: '', admin: false}\n                        })\n                    }\n                    if (result === 'false') {\n                        this.setState({\n                            isLoading: false,\n                            addConfirm: 'Пользователь не найден',\n                        })\n                    }\n                }\n            )\n    };\n\n    public removeUserAdmin = () => {\n        this.setState({\n            isLoading: true,\n            addConfirm: ''\n        });\n        const http = new Http();\n        http.removeUserAdmin(this.state.findUserData.email, '/removeUserAdmin')\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    if (result === true) {\n                        this.setState({\n                            addConfirm: 'Пользователь успешно обновлен',\n                            isLoading: false,\n                            findUserData: {email: '1', password: '', lastLoginDate: '', registrationDate: '', admin: false}\n                        })\n                    }\n                    if (result === 'false') {\n                        this.setState({\n                            isLoading: false,\n                            addConfirm: 'Пользователь не найден',\n                        })\n                    }\n                }\n            )\n    };\n\n    public deleteAccount = () => {\n        this.setState({\n            isLoading: true,\n            addConfirm: ''\n        });\n        const http = new Http();\n        http.deleteAccount(this.state.findUserData.email, '/deleteAccount')\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    if (result === true) {\n                        this.setState({\n                            addConfirm: 'Пользователь удален',\n                            isLoading: false,\n                            findUserData: {email: '1', password: '', lastLoginDate: '', registrationDate: '', admin: false}\n                        })\n                    }\n                    if (result === 'false') {\n                        this.setState({\n                            isLoading: false,\n                            addConfirm: 'Пользователь не найден',\n                        })\n                    }\n                }\n            )\n    }\n\n\n    public render() {\n\n        const userData = (\n            <div style={{marginTop: '1rem'}}>\n                <Card>\n                    <CardContent>\n                        <Typography>Email: {this.state.findUserData.email}</Typography>\n                        <Typography>Дата регистрации: {this.state.findUserData.registrationDate}</Typography>\n                        <Typography>Дата последнего входа: {this.state.findUserData.lastLoginDate}</Typography>\n                        <Typography>Администратор: {this.state.findUserData.admin ? <Typography variant=\"button\">Да</Typography> : <Typography variant=\"button\">Нет</Typography>}</Typography>\n                        {this.state.findUserData.admin ?   <Button color=\"primary\" variant=\"contained\" onClick={this.removeUserAdmin}>\n                            Забрать права администратора\n                        </Button> : <Button color=\"primary\" variant=\"contained\" onClick={this.addUserAsAdmin}>\n                            Сделать пользователя администратором\n                        </Button>}\n\n                        <Button variant=\"contained\" onClick={this.deleteAccount} style={{display: 'flex', marginTop: '10px'}}>\n                            Удалить аккаунт\n                        </Button>\n                    </CardContent>\n                </Card>\n            </div>\n        );\n\n        return (\n            <div style={{width: '100%'}}>\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"login\"\n                    label={<Typography>Найти пользователя</Typography>}\n                    fullWidth\n                    onChange={this.handleAdminEmailChange}\n                />\n                <Button color=\"primary\" variant=\"contained\" onClick={this.getUserData}>\n                    Найти\n                </Button>\n\n                {this.state.isLoading ? LoadingComponent : null}\n                {<Typography variant=\"body1\">{this.state.addConfirm}</Typography>}\n                {this.state.findUserData.email !== '1' ? userData : null}\n\n            </div>\n        )\n    }\n}\n","import * as React from \"react\";\nimport {\n    CardContent,\n    ExpansionPanel,\n    ExpansionPanelDetails,\n    ExpansionPanelSummary, Grid,\n    Typography\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Http from \"../serverApi/http\";\nimport {newsData} from \"./StartPage\";\nimport NewsComponent, {LoadingComponent} from \"../components/UniversalComponents\";\nimport {DialogAddNews} from \"../components/Dialogs/DialogAddNews\";\nimport SetAdmin from \"../components/SetAdmin\";\n\nexport default class AdminComponent extends React.Component {\n\n    state = {\n        expanded: '',\n        news: [],\n        isNoOneNews: false\n    };\n\n    public handleChangeExpand = (panel: any) => (event: React.ChangeEvent<{}>, isExpanded: boolean) => {\n        if (isExpanded) {\n            this.setState({\n                expanded: panel\n            })\n        } else {\n            this.setState({\n                expanded: false\n            })\n        }\n        if (panel === 'getNews') {\n            const http = new Http();\n            http.getNewsList('/getNewsList')\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        if (result.length > 0) {\n                            this.setState({\n                                news: [...result]\n                            });\n                        } else {\n                            this.setState({\n                                isNoOneNews: true\n                            })\n                        }\n                    }\n                )\n        }\n    };\n\n    public getNewsList = () => {\n        const http = new Http();\n        http.getNewsList('/getNewsList')\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    if (result.length > 0) {\n                        this.setState({\n                            news: [...result]\n                        }, () => {\n                            console.log(this.state.news)\n                        });\n                    } else {\n                        this.setState({\n                            isNoOneNews: true\n                        })\n                    }\n\n                }\n            )\n    };\n\n    public render() {\n\n        return (\n            <div style={{marginTop: '1rem'}}>\n                <div>\n                    {/* ПРОСМОТР ВСЕХ НОВОСТЕЙ */}\n\n                    <ExpansionPanel expanded={this.state.expanded === 'getNews'}\n                                    onChange={this.handleChangeExpand('getNews')}\n                                    style={{width: '98%', margin: '1em auto'}}>\n                        <ExpansionPanelSummary\n                            expandIcon={<ExpandMoreIcon/>}\n                            aria-controls=\"panel1bh-content\"\n                            id=\"panel1bh-header\"\n                        >\n                            <Typography>Новости на сайте</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            <Grid container spacing={3}>\n                                <Grid item xs={12} sm={12}>\n                                    <DialogAddNews getNews={this.getNewsList}/>\n\n                                    {this.state.news.length === 0 ?\n                                        <CardContent>\n                                            {this.state.isNoOneNews ?\n                                                <Typography>Новостей нет</Typography> : LoadingComponent}\n                                        </CardContent> :\n                                        <div>\n                                            {this.state.news.map((newsData: newsData) => {\n                                                return (\n                                                    <NewsComponent key={newsData._id} newsData={newsData} admin={true} getNewsCb={this.getNewsList}/>\n                                                )\n                                            })}\n                                        </div>\n\n                                    }\n                                </Grid>\n                            </Grid>\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n\n\n                    <ExpansionPanel expanded={this.state.expanded === 'getUserData'}\n                                    onChange={this.handleChangeExpand('getUserData')}\n                                    style={{width: '98%', margin: '1em auto'}}>\n                        <ExpansionPanelSummary\n                            expandIcon={<ExpandMoreIcon/>}\n                            aria-controls=\"panel3bh-content\"\n                            id=\"panel3bh-header\"\n                        >\n                            <Typography>Найти пользователя</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            <SetAdmin/>\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n\n                </div>\n            </div>\n        )\n    }\n\n\n}\n","import * as React from \"react\";\nimport {\n    AppBar,\n    Tab,\n    Tabs,\n} from \"@material-ui/core\";\nimport {theme} from \"../Theme\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport {newLesson} from \"./Dialogs/DialogAddLesson\";\nimport {scheduleListComponent} from \"./UniversalComponents\";\nimport {TeacherData} from \"../pages/AccountPage\";\n\ninterface AddTimetableProps {\n    lessons: { evenWeek: newLesson[], unevenWeek: newLesson[] }\n    addLessonInData: any\n    deleteLessonInData: any\n    editLessonInData: any\n    teachers: TeacherData[]\n}\n\nexport default class AddTimetable extends React.Component<AddTimetableProps> {\n\n    state = {\n        tabValue: 0,\n    };\n\n    public handleChangeTab = (event: React.ChangeEvent<{}>, newValue: number) => {\n        this.setState({\n            tabValue: newValue\n        })\n    };\n\n    public handleChangeIndexTab = (index: number) => {\n        this.setState({\n            tabValue: index\n        })\n    };\n\n    public handleAddLesson = (lessonObject: newLesson) => {\n        this.props.addLessonInData(lessonObject)\n    };\n\n    public deleteLessonInData = (lessonObject: newLesson) => {\n        this.props.deleteLessonInData(lessonObject)\n    };\n\n    public editLessonInData = (lessonObject: newLesson) => {\n        this.props.editLessonInData(lessonObject)\n    };\n\n\n    public render() {\n        const stylesForTab = {\n            textTransform: 'none',\n            minWidth: 72,\n        } as React.CSSProperties;\n\n        const timetableMenu = (\n            <AppBar position=\"static\" color=\"default\" style={{marginTop: '1rem'}}>\n                <Tabs\n                    value={this.state.tabValue}\n                    onChange={this.handleChangeTab}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"fullWidth\"\n                >\n                    return (\n                    <Tab label={'Четная неделя'} style={stylesForTab}/>\n                    <Tab label={'Нечетная неделя'} style={stylesForTab}/>\n                    )\n                </Tabs>\n            </AppBar>\n        );\n\n        return (\n            <div>\n                {timetableMenu}\n                <SwipeableViews axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'} index={this.state.tabValue}\n                                onChangeIndex={this.handleChangeIndexTab}>\n                    <div dir={theme.direction}>\n                        {scheduleListComponent(this.props.teachers, this.handleAddLesson, this.editLessonInData, this.deleteLessonInData, 'Четная', this.props.lessons.evenWeek, this.props.lessons.unevenWeek)}\n                    </div>\n                    <div dir={theme.direction}>\n                        {scheduleListComponent(this.props.teachers, this.handleAddLesson, this.editLessonInData, this.deleteLessonInData, 'Нечетная', this.props.lessons.evenWeek, this.props.lessons.unevenWeek)}\n                    </div>\n                </SwipeableViews>\n\n            </div>\n        )\n    }\n}\n","import React, {SyntheticEvent} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport {amber, green} from '@material-ui/core/colors';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport {makeStyles, Theme} from '@material-ui/core/styles';\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\n\nconst useStyles1 = makeStyles((theme: Theme) => ({\n    success: {\n        backgroundColor: green[600],\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    warning: {\n        backgroundColor: amber[700],\n    },\n    icon: {\n        fontSize: 20,\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n}));\n\nexport interface Props {\n    className?: string;\n    message?: string;\n    onClose?: () => void;\n    variant: keyof typeof variantIcon;\n}\n\nfunction MySnackbarContentWrapper(props: Props) {\n    const classes = useStyles1();\n    const {className, message, onClose, variant, ...other} = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            className={clsx(classes[variant], className)}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)}/>\n                    {message}\n        </span>\n            }\n            action={[\n\n            ]}\n            {...other}\n        />\n    );\n}\n\nMySnackbarContentWrapper.propTypes = {\n    className: PropTypes.string,\n    message: PropTypes.node,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\ninterface SnackbarProps {\n    variant: \"success\" | \"error\" | \"warning\" | \"info\"\n    message: string,\n}\n\nexport default class SnackbarComponent extends React.Component<SnackbarProps> {\n\n    state = {\n        open: false\n    };\n\n    public handleOpen = () => {\n        this.setState({\n            open: true\n        })\n    };\n\n    public handleClose = (event?: SyntheticEvent, reason?: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({\n            open: false\n        })\n    };\n\n    public render() {\n        return (\n            <div>\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                    open={true}\n                    autoHideDuration={4000}\n                    onClose={this.handleClose}\n                >\n                    <MySnackbarContentWrapper\n                        onClose={this.handleClose}\n                        variant={this.props.variant}\n                        message={this.props.message}\n                    />\n                </Snackbar>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle, TextField,\n    Typography\n} from \"@material-ui/core\";\nimport {Add} from \"@material-ui/icons\";\nimport \"moment/locale/ru\";\n\ninterface DialogAddTaskLessonProps {\n    addNewTeacher: any // cb для добавления\n}\n\n\nexport class DialogAddNewTeacher extends React.Component<DialogAddTaskLessonProps> {\n\n    state = {\n        openDialogWindow: false,\n        teacherName: '',\n    };\n\n    public handleOpenLoginDialog = () => {\n        this.setState({\n            openDialogWindow: true\n        })\n    };\n\n    public handleClose = () => {\n        this.setState({\n            openDialogWindow: false,\n        })\n    };\n\n\n    public handleTeacherNameChange = (event: any) => {\n        this.setState({\n            teacherName: event.target.value\n        })\n    };\n\n    public addNewTeacher = () => {\n        this.props.addNewTeacher({name: this.state.teacherName})\n    };\n\n    public render() {\n        return (\n            <div>\n                <Button color=\"primary\" onClick={this.handleOpenLoginDialog} style={{marginLeft: '1rem'}}>\n                    Добавить преподавателя\n                </Button>\n                <Dialog open={this.state.openDialogWindow} onClose={this.handleClose}\n                        aria-labelledby=\"form-dialog-title\">\n\n                    <DialogTitle id=\"form-dialog-title\">Добавить нового преподавателя</DialogTitle>\n\n                    <DialogContent>\n\n                        <TextField\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Имя преподавателя: </Typography>}\n                            value={this.state.teacherName}\n                            fullWidth\n                            onChange={this.handleTeacherNameChange}\n                        />\n\n                    </DialogContent>\n\n                    <DialogActions>\n                        <Button onClick={this.addNewTeacher} color=\"primary\">\n                            Добавить\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Отмена\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n} from \"@material-ui/core\";\n\nimport {Delete} from \"@material-ui/icons\";\nimport {TeacherData} from \"../../pages/AccountPage\";\n\n\ninterface DialogDeleteTeacherProps {\n    teacher: TeacherData\n    deleteTeacherInData: (teacher: TeacherData) => void\n}\n\n\nexport class DialogDeleteTeacher extends React.Component<DialogDeleteTeacherProps> {\n\n    state = {\n        openDialogWindow: false\n    };\n\n    public handleOpenLoginDialog = () => {\n        this.setState({\n            openDialogWindow: true\n        })\n    };\n\n    public handleClose = () => {\n        this.setState({\n            openDialogWindow: false,\n        })\n    };\n\n    public confirmDelete = () => {\n        this.props.deleteTeacherInData(this.props.teacher)\n    };\n\n    public render() {\n        return (\n            <div>\n                <Button onClick={this.handleOpenLoginDialog} style={{paddingRight: 0, paddingLeft: 0, marginTop: '5px'}}>\n                    <Delete/>\n                </Button>\n\n                <Dialog open={this.state.openDialogWindow} onClose={this.handleClose}\n                        aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Удаление преподавателя</DialogTitle>\n\n                    <DialogContent>\n                        <DialogContentText>\n                            Вы действительно хотите удалить этого преподавателя?\n                        </DialogContentText>\n                        <DialogContentText>\n                            {this.props.teacher.name}\n                        </DialogContentText>\n                    </DialogContent>\n\n                    <DialogActions>\n                        <Button onClick={this.confirmDelete} color=\"primary\">\n                            Удалить\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Отмена\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport {\n    Avatar,\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n} from \"@material-ui/core\";\nimport {Edit} from \"@material-ui/icons\";\nimport {LessonTimeData} from \"../../pages/AccountPage\";\n\ninterface DialogEditLessonTimeProps {\n    editLessonInData: any // cb для добавления\n    lessonTime: LessonTimeData[]\n}\n\n\nexport class DialogEditLessonTime extends React.Component<DialogEditLessonTimeProps> {\n\n    state = {\n        openDialogWindow: false,\n        firstLessonStart: this.props.lessonTime[0].lessonStartTime,\n        firstLessonFinish: this.props.lessonTime[0].lessonFinishTime,\n        secondLessonStart: this.props.lessonTime[1].lessonStartTime,\n        secondLessonFinish: this.props.lessonTime[1].lessonFinishTime,\n        thirdLessonStart: this.props.lessonTime[2].lessonStartTime,\n        thirdLessonFinish: this.props.lessonTime[2].lessonFinishTime,\n        fourthLessonStart: this.props.lessonTime[3].lessonStartTime,\n        fourthLessonFinish: this.props.lessonTime[3].lessonFinishTime,\n        fifthLessonStart: this.props.lessonTime[4].lessonStartTime,\n        fifthLessonFinish: this.props.lessonTime[4].lessonFinishTime,\n    };\n\n    public handleOpenLoginDialog = () => {\n        this.setState({\n            openDialogWindow: true\n        })\n    };\n\n    public handleClose = () => {\n        this.setState({\n            openDialogWindow: false,\n        })\n    };\n\n    public handleLessonNumberChange = (event: any) => {\n        this.setState({\n            lessonNumber: event.target.value\n        })\n    };\n\n    public handleLessonNameChange = (event: any) => {\n        this.setState({\n            lessonName: event.target.value\n        })\n    };\n\n    public handleLessonTypeChange = (event: any) => {\n        this.setState({\n            lessonType: event.target.value\n        })\n    };\n\n    public handleLessonLocationChange = (event: any) => {\n        this.setState({\n            lessonLocation: event.target.value\n        })\n    };\n\n    public handleLessonTeacherChange = (event: any) => {\n        this.setState({\n            lessonTeacher: event.target.value\n        })\n    };\n\n    public confirmEdit = () => {\n\n    }\n\n    public render() {\n        return (\n            <div>\n                <Button color=\"primary\" onClick={this.handleOpenLoginDialog} style={{marginLeft: '1rem'}}>\n                    Редактировать расписание\n                </Button>\n\n                <Dialog open={this.state.openDialogWindow} onClose={this.handleClose}\n                        aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Редактирование занятия</DialogTitle>\n\n                    <DialogContent>\n                        <Avatar style={{backgroundColor: 'rgba(74, 144, 226, 1)'}}>1</Avatar>\n                    </DialogContent>\n\n                    <DialogActions>\n\n                        <Button onClick={this.confirmEdit} color=\"primary\">\n                            Сохранить\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Отмена\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n","import * as React from \"react\";\nimport {DataStorage} from \"../serverApi/dataStorage\";\nimport {LocalStorage} from \"../serverApi/localStorage\";\nimport Http from \"../serverApi/http\";\nimport {LoadingComponent} from \"../components/UniversalComponents\";\nimport {\n    AppBar, Avatar, Chip, Divider, ExpansionPanel, ExpansionPanelDetails, ExpansionPanelSummary,\n    Grid, IconButton,\n    List,\n    ListItem,\n    ListItemSecondaryAction,\n    ListItemText,\n    Tab,\n    Tabs,\n    Typography\n} from \"@material-ui/core\";\nimport SwipeableViews from 'react-swipeable-views';\nimport {theme} from \"../Theme\";\nimport {Dashboard, Edit, Fingerprint, Group, ListAlt, Person, Security} from \"@material-ui/icons\";\nimport AdminComponent from \"./AdminComponent\";\nimport AddTimetable from \"../components/AddTimetable\";\nimport {newLesson} from \"../components/Dialogs/DialogAddLesson\";\nimport {newTaskLesson} from \"../components/Dialogs/DialogAddTaskLesson\";\nimport SnackbarComponent from \"../components/Dialogs/SnackBar\";\nimport {DialogAddNewTeacher} from \"../components/Dialogs/DialogAddNewTeacher\";\nimport {DialogDeleteTeacher} from \"../components/Dialogs/DialogDeleteTeacher\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {TimeIcon} from \"@material-ui/pickers/_shared/icons/TimeIcon\";\nimport {DialogEditLessonTime} from \"../components/Dialogs/DialogEditLessonTime\";\n\nconst uuidv4 = require('uuid/v4');\n\ninterface AccountPageState {\n    isDataConfirmed: boolean | null,\n    data: User,\n    tabValue: number,\n    openSnackbar: boolean\n}\n\nexport interface TeacherData {\n    name: string\n    id: number\n}\n\nexport interface LessonTimeData {\n    lessonNumber: number\n    lessonStartTime: string\n    lessonFinishTime: string\n    id: string\n}\n\nexport interface User {\n    email: string,\n    registrationDate: string,\n    password: string,\n    admin: boolean,\n    lastLoginDate: string,\n    lessons: {\n        evenWeek: newLesson[],\n        unevenWeek: newLesson[]\n    },\n    lessonTasks: newTaskLesson[],\n    teachers: TeacherData[],\n    lessonTime: LessonTimeData[]\n}\n\n\nexport default class AccountPage extends React.Component<AccountPageState> {\n\n    state = {\n        isDataConfirmed: null,\n        tabValue: 0,\n        data: {\n            email: '',\n            registrationDate: '',\n            password: '',\n            admin: false,\n            lastLoginDate: '',\n            lessons: {evenWeek: [], unevenWeek: []},\n            lessonTasks: [],\n            teachers: [],\n            lessonTime: []\n        },\n        openSnackbar: false\n    };\n\n    public theme: any;\n\n    componentDidMount(): void {\n        document.title = 'Аккаунт';\n        const storage = new DataStorage(new LocalStorage());\n        const http = new Http();\n        if (storage.getUserData !== null) {\n            http.loginWithToken(storage.getUserData, '/user')\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        if (result.email !== undefined) {\n                            this.setState({\n                                data: result\n                            }, () => {\n                                this.setState({\n                                    isDataConfirmed: true\n                                })\n                            })\n                        } else {\n                            this.setState({\n                                isDataConfirmed: false\n                            }, () => {\n                                storage.logOut()\n                            })\n                        }\n                    }, (error) => {\n                        console.log(error)\n                    }\n                );\n        } else {\n            this.setState({\n                isDataConfirmed: false\n            })\n        }\n    }\n\n    public handleChangeTab = (event: React.ChangeEvent<{}>, newValue: number) => {\n        this.setState({\n            tabValue: newValue\n        })\n    };\n\n    public handleChangeIndexTab = (index: number) => {\n        this.setState({\n            tabValue: index\n        })\n    };\n\n    public updateHandler = (data: User) => {\n        const storage = new DataStorage(new LocalStorage());\n        const http = new Http();\n        if (storage.getUserData !== null) {\n            http.updateUserData(data, '/updateData')\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        if (result.email !== undefined) {\n                            this.setState({\n                                data: result\n                            }, () => {\n                                this.setState({\n                                    isDataConfirmed: true\n                                });\n                                this.setState({\n                                    openSnackbar: true\n                                });\n                                setTimeout(() => {\n                                    this.setState({\n                                        openSnackbar: false\n                                    })\n                                }, 4000)\n                            })\n                        } else {\n                            this.setState({\n                                isDataConfirmed: false\n                            }, () => {\n                                storage.logOut()\n                            })\n                        }\n                    }, (error) => {\n                        console.log(error)\n                    }\n                );\n        } else {\n            this.setState({\n                isDataConfirmed: false\n            })\n        }\n    };\n\n    public addLessonInData = (lesson: newLesson) => {\n\n        const newData: User = this.state.data;\n        if (lesson.lessonWeek === 'Четная') {\n            newData.lessons.evenWeek.push(lesson)\n        }\n\n        if (lesson.lessonWeek === 'Нечетная') {\n            newData.lessons.unevenWeek.push(lesson)\n        }\n        this.updateHandler(newData)\n\n    };\n\n    public deleteLessonInData = (lesson: newLesson) => {\n        const newData: User = this.state.data;\n        if (lesson.lessonWeek === 'Четная') {\n            newData.lessons.evenWeek.splice(newData.lessons.evenWeek.indexOf(lesson), 1)\n        }\n\n        if (lesson.lessonWeek === 'Нечетная') {\n            newData.lessons.unevenWeek.splice(newData.lessons.unevenWeek.indexOf(lesson), 1)\n        }\n        this.updateHandler(newData)\n    };\n\n    public editLessonInData = (lessons: any) => {\n        const newData: User = this.state.data;\n        if (lessons.newLesson.lessonWeek === 'Четная') {\n            newData.lessons.evenWeek[newData.lessons.evenWeek.indexOf(lessons.oldLesson)] = lessons.newLesson\n        }\n\n        if (lessons.newLesson.lessonWeek === 'Нечетная') {\n            newData.lessons.unevenWeek[newData.lessons.unevenWeek.indexOf(lessons.oldLesson)] = lessons.newLesson\n        }\n        this.updateHandler(newData)\n    };\n\n    public addTeacherInData = (teacher: TeacherData) => {\n        const newData: User = this.state.data;\n        const newTeacher: TeacherData = {\n            name: teacher.name,\n            id: uuidv4()\n        };\n        newData.teachers.push(newTeacher);\n        this.updateHandler(newData)\n    };\n\n    public deleteTeacherInData = (teacher: TeacherData) => {\n        const newData: User = this.state.data;\n        newData.teachers.forEach((teacherForDelete: TeacherData) => {\n            if (teacherForDelete.id === teacher.id) {\n                newData.teachers.splice(newData.teachers.indexOf(teacherForDelete), 1)\n            }\n        });\n        this.updateHandler(newData)\n    };\n\n    public render() {\n\n        const stylesForTab = {\n            textTransform: 'none',\n            minWidth: 72,\n        } as React.CSSProperties;\n\n        const tabsArray = [\n            // {label: 'Учетная запись', icon: <Person/>},\n            {label: 'Мое расписание', icon: <ListAlt/>},\n            // {label: 'Безопасность', icon: <Security/>},\n            {label: 'Сервисы', icon: <Dashboard/>},\n            {label: 'Админ', icon: <Fingerprint/>, admin: true},\n        ];\n\n        const mobileMenu = (\n            <AppBar position=\"static\" color=\"default\" className=\"topBarMin top\">\n                <Tabs\n                    value={this.state.tabValue}\n                    onChange={this.handleChangeTab}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"fullWidth\"\n                >\n                    {tabsArray.map((tabData: any) => {\n                        if (this.state.data.admin === true && tabData.label === 'Админ') {\n                            return (\n                                <Tab icon={tabData.icon} style={stylesForTab}\n                                     key={tabData.label}/>\n                            )\n                        } else {\n                            if (tabData.admin === undefined) {\n                                return (\n                                    <Tab icon={tabData.icon} style={stylesForTab}\n                                         key={tabData.label}/>\n                                )\n                            }\n                        }\n                    })}\n                </Tabs>\n            </AppBar>\n        );\n\n        const fullMenu = (\n            <AppBar position=\"static\" color=\"default\" className=\"topBarMax\">\n                <Tabs\n                    value={this.state.tabValue}\n                    onChange={this.handleChangeTab}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"fullWidth\"\n                >\n                    {tabsArray.map((tabData: any) => {\n                        if (this.state.data.admin === true && tabData.label === 'Админ') {\n                            return (\n                                <Tab label={tabData.label} icon={tabData.icon} style={stylesForTab}\n                                     key={tabData.label}/>\n                            )\n                        } else {\n                            if (tabData.admin === undefined) {\n                                return (\n                                    <Tab label={tabData.label} icon={tabData.icon} style={stylesForTab}\n                                         key={tabData.label}/>\n                                )\n                            }\n                        }\n                    })}\n                </Tabs>\n            </AppBar>\n        );\n\n        const accountDataComponent = (\n            <div style={{marginTop: '1rem', overflow: 'hidden'}}>\n                <Grid container spacing={3}>\n                    <Grid style={{textAlign: 'center'}} item xs={6} sm={6}>\n\n                        <Typography variant=\"body1\">\n                            Email:\n                        </Typography>\n\n                    </Grid>\n                    <Grid style={{textAlign: 'center'}} item xs={6} sm={6}>\n\n                        <Typography variant=\"body1\">\n                            {this.state.data.email}\n                        </Typography>\n\n                    </Grid>\n                </Grid>\n            </div>\n        );\n\n        const ServiceComponent = () => {\n            return (\n                <div >\n                    <ExpansionPanel style={{width: '98%', margin: '1em auto'}}>\n                        <ExpansionPanelSummary\n                            expandIcon={<ExpandMoreIcon />}\n                            aria-controls=\"panel1a-content\"\n                            id=\"panel1a-header\"\n                        >\n                            <Group style={{marginRight: '0.5rem'}}/><Typography>Список преподавателей</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails style={{display: 'block', padding: 0}}>\n                            <DialogAddNewTeacher addNewTeacher={this.addTeacherInData}/>\n                            <List>\n                            {this.state.data.teachers.map((teacher: TeacherData) => {\n                                return (\n                                    <ListItem key={teacher.id} >\n                                        <ListItemText>\n                                            <Typography variant=\"body1\">{teacher.name}</Typography>\n                                        </ListItemText>\n                                        <DialogDeleteTeacher teacher={teacher} deleteTeacherInData={this.deleteTeacherInData}/>\n                                        <Divider/>\n                                    </ListItem>\n                                )\n                            })}\n                            </List>\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                    <ExpansionPanel style={{width: '98%', margin: '1em auto'}}>\n                        <ExpansionPanelSummary\n                            expandIcon={<ExpandMoreIcon />}\n                            aria-controls=\"panel1a-content\"\n                            id=\"panel1a-header1\"\n                        >\n                            <TimeIcon style={{marginRight: '0.5rem'}}/><Typography>Расписание занятий</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails style={{display: 'block', padding: 0}}>\n                            <DialogEditLessonTime editLessonInData={()=>{}} lessonTime={this.state.data.lessonTime}/>\n                            {this.state.data.lessonTime.map((lessonTime: LessonTimeData) => {\n                                return (\n                                    <ListItem key={lessonTime.id} >\n                                        <Chip variant=\"outlined\" color=\"primary\" avatar={<Avatar>{lessonTime.lessonNumber}</Avatar>}\n                                              label={<Typography>{lessonTime.lessonStartTime} - {lessonTime.lessonFinishTime}</Typography>}\n\n                                        />\n                                        <Divider/>\n                                    </ListItem>\n                                )\n                            })}\n\n\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                </div>\n            )\n        };\n\n        const accountPageBody = (\n            <div>\n                {mobileMenu}\n                {fullMenu}\n                <SwipeableViews axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'} index={this.state.tabValue}\n                                onChangeIndex={this.handleChangeIndexTab}>\n\n                    {/*{this.state.isDataConfirmed ? <div dir={theme.direction}>{accountDataComponent}</div> : <div/>}*/}\n                    {this.state.isDataConfirmed ?\n                        <div dir={theme.direction}>\n                            <AddTimetable lessons={this.state.data.lessons}\n                                          teachers={this.state.data.teachers}\n                                          addLessonInData={this.addLessonInData}\n                                          deleteLessonInData={this.deleteLessonInData}\n                                          editLessonInData={this.editLessonInData}\n                            />\n                        </div>\n                        :\n                        <div/>\n                    }\n                    {/*<div dir={theme.direction}>text3</div>*/}\n                    {this.state.isDataConfirmed ?\n                        <div dir={theme.direction}>\n                            <ServiceComponent/>\n                        </div>\n                        :\n                        <div/>\n                    }\n                    <div dir={theme.direction}><AdminComponent/></div>\n                </SwipeableViews>\n            </div>\n        );\n\n        const waitingComponent = (\n            <div>\n                <Typography variant={\"h6\"}>Пожалуйста, подождите. Данные обновляются.</Typography>\n            </div>\n        );\n\n        return (\n            <div>\n                {this.state.isDataConfirmed === null ? LoadingComponent : null}\n                {this.state.data !== undefined ? accountPageBody : waitingComponent}\n                {this.state.openSnackbar ? <SnackbarComponent variant=\"success\" message=\"Данные обновлены\"/> : null}\n            </div>\n        )\n    }\n}\n","import * as React from \"react\";\nimport {AppBar, Tab, Tabs} from \"@material-ui/core\";\nimport {theme} from \"../Theme\";\nimport {LoadingComponent, scheduleListComponent} from \"../components/UniversalComponents\";\nimport {DataStorage} from \"../serverApi/dataStorage\";\nimport {LocalStorage} from \"../serverApi/localStorage\";\nimport Http from \"../serverApi/http\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport {newTaskLesson} from \"../components/Dialogs/DialogAddTaskLesson\";\nimport {User} from \"./AccountPage\";\nimport SnackbarComponent from \"../components/Dialogs/SnackBar\";\n\nexport default class SchedulePage extends React.Component {\n\n    state = {\n        isDataConfirmed: null,\n        tabValue: 0,\n        data: {\n            email: '',\n            registrationDate: '',\n            password: '',\n            admin: false,\n            lastLoginDate: '',\n            lessons: {evenWeek: [], unevenWeek: []},\n            lessonTasks: [],\n            teachers: [],\n            lessonTime: []\n        },\n        openSnackbar: false\n    };\n\n    componentDidMount(): void {\n        document.title = 'Расписание занятий';\n        const storage = new DataStorage(new LocalStorage());\n        const http = new Http();\n        if (storage.getUserData !== null) {\n            http.loginWithToken(storage.getUserData, '/user')\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        if (result.email !== undefined) {\n                            this.setState({\n                                data: result\n                            }, () => {\n                                this.setState({\n                                    isDataConfirmed: true\n                                })\n                            })\n                        } else {\n                            this.setState({\n                                isDataConfirmed: false\n                            }, () => {\n                                storage.logOut()\n                            })\n                        }\n                    }, (error) => {\n                        console.log(error)\n                    }\n                );\n        } else {\n            this.setState({\n                isDataConfirmed: false\n            })\n        }\n    }\n\n    public handleChangeTab = (event: React.ChangeEvent<{}>, newValue: number) => {\n        this.setState({\n            tabValue: newValue\n        })\n    };\n\n    public handleChangeIndexTab = (index: number) => {\n        this.setState({\n            tabValue: index\n        })\n    };\n\n    public updateHandler = (data: User) => {\n        const storage = new DataStorage(new LocalStorage());\n        const http = new Http();\n        if (storage.getUserData !== null) {\n            http.updateUserData(data, '/updateData')\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        if (result.email !== undefined) {\n                            this.setState({\n                                data: result\n                            }, () => {\n                                this.setState({\n                                    isDataConfirmed: true\n                                })\n                            })\n                        } else {\n                            this.setState({\n                                isDataConfirmed: false\n                            }, () => {\n                                storage.logOut()\n                            })\n                        }\n                    }, (error) => {\n                        console.log(error)\n                    }\n                );\n        } else {\n            this.setState({\n                isDataConfirmed: false\n            })\n        }\n    };\n\n    public handleAddNewTaskLesson = (taskLesson: newTaskLesson) => {\n        const newData: User = this.state.data;\n        newData.lessonTasks.push(taskLesson);\n        this.updateHandler(newData)\n        this.setState({\n            openSnackbar: true\n        })\n        setTimeout(()=>{\n            this.setState({\n                openSnackbar: false\n            })\n        }, 4000)\n    };\n\n    public render() {\n        const stylesForTab = {\n            textTransform: 'none',\n            minWidth: 72,\n        } as React.CSSProperties;\n\n        const timetableMenu = (\n            <AppBar position=\"static\" color=\"default\" style={{marginTop: '1rem'}}>\n                <Tabs\n                    value={this.state.tabValue}\n                    onChange={this.handleChangeTab}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"fullWidth\"\n                >\n                    return (\n                    <Tab label={'Четная неделя'} style={stylesForTab}/>\n                    <Tab label={'Нечетная неделя'} style={stylesForTab}/>\n                    )\n                </Tabs>\n            </AppBar>\n        );\n\n        const swipeableViews = (\n            <SwipeableViews axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'} index={this.state.tabValue}\n                            onChangeIndex={this.handleChangeIndexTab}>\n                <div dir={theme.direction}>\n                    {scheduleListComponent(\n                        this.state.data.teachers,\n                        false,\n                        false,\n                        false,\n                        'Четная',\n                        this.state.data.lessons.evenWeek,\n                        this.state.data.lessons.unevenWeek,\n                        this.handleAddNewTaskLesson\n                    )}\n                </div>\n                <div dir={theme.direction}>\n                    {scheduleListComponent(this.state.data.teachers, false, false, false, 'Нечетная', this.state.data.lessons.evenWeek, this.state.data.lessons.unevenWeek, this.handleAddNewTaskLesson)}\n                </div>\n            </SwipeableViews>\n        );\n\n        return (\n            <div>\n                {timetableMenu}\n                {this.state.isDataConfirmed ? swipeableViews : LoadingComponent}\n                {this.state.openSnackbar ? <SnackbarComponent variant=\"success\" message=\"Задание добавлено\"/> : null}\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle, TextField,\n    Typography\n} from \"@material-ui/core\";\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport MomentUtils from \"@date-io/moment\";\nimport \"moment/locale/ru\";\nimport {newTaskLesson} from \"./DialogAddTaskLesson\";\nimport {Edit} from \"@material-ui/icons\";\n\n\ninterface DialogEditTaskLessonProps {\n    lesson: newTaskLesson\n    handleEditTaskLesson: (taskLesson: newTaskLesson) => void // cb для сохранения редактирования задания\n}\n\nexport interface newLesson {\n    lessonWeek: string;\n    lessonDay: string;\n    lessonName: string;\n    lessonType: string;\n    lessonNumber: string;\n    lessonLocation: string;\n    lessonTeacher: string;\n}\n\nexport class DialogEditTaskLesson extends React.Component<DialogEditTaskLessonProps> {\n\n    state = {\n        openDialogWindow: false,\n        textForTaskLesson: this.props.lesson.taskText,\n        dateForTaskLesson: this.props.lesson.taskDate\n    };\n\n    public handleOpenLoginDialog = () => {\n        this.setState({\n            openDialogWindow: true\n        })\n    };\n\n    public handleClose = () => {\n        this.setState({\n            openDialogWindow: false,\n        })\n    };\n\n    public confirmAdd = () => {\n        const newTaskLesson: newTaskLesson = {\n            lesson: {\n                lessonWeek: this.props.lesson.lesson.lessonWeek,\n                lessonDay: this.props.lesson.lesson.lessonDay,\n                lessonName: this.props.lesson.lesson.lessonName,\n                lessonType: this.props.lesson.lesson.lessonType,\n                lessonNumber: this.props.lesson.lesson.lessonNumber,\n                lessonLocation: this.props.lesson.lesson.lessonLocation,\n                lessonTeacher: this.props.lesson.lesson.lessonTeacher\n            },\n            taskDate: new Date(this.state.dateForTaskLesson),\n            taskText: this.state.textForTaskLesson,\n            id: this.props.lesson.id\n        };\n        this.props.handleEditTaskLesson(newTaskLesson);\n        this.handleClose()\n    };\n\n    public handleTaskLessonTextChange = (event: any) => {\n        this.setState({\n            textForTaskLesson: event.target.value\n        })\n    };\n\n    public handleChangeDate = (value: any) => {\n        this.setState({\n            dateForTaskLesson: value\n        })\n    };\n\n    public render() {\n        return (\n            <div>\n                <Button color=\"primary\" size={\"small\"} onClick={this.handleOpenLoginDialog}>\n                    Редактировать\n                </Button>\n                <Dialog open={this.state.openDialogWindow} onClose={this.handleClose}\n                        aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Редактирование задания: {this.props.lesson.lesson.lessonDay}, {this.props.lesson.lesson.lessonWeek} неделя</DialogTitle>\n                    <DialogContent>\n                        <Typography variant=\"body1\">Предмет: {this.props.lesson.lesson.lessonName}</Typography>\n                        <Typography variant=\"body1\">Тип занятия: {this.props.lesson.lesson.lessonType}</Typography>\n                        <Typography variant=\"body1\">Номер пары: {this.props.lesson.lesson.lessonNumber}</Typography>\n                        <Typography variant=\"body1\">Преподаватель: {this.props.lesson.lesson.lessonTeacher}</Typography>\n                        <Typography variant=\"body1\">Место занятия: {this.props.lesson.lesson.lessonLocation}</Typography>\n                        <TextField\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Текст задания: </Typography>}\n                            value={this.state.textForTaskLesson}\n                            fullWidth\n                            onChange={this.handleTaskLessonTextChange}\n                        />\n                        <MuiPickersUtilsProvider utils={MomentUtils} >\n                            <KeyboardDatePicker\n                                style={{width: '100%'}}\n                                id=\"mui-pickers-date\"\n                                invalidDateMessage=\"Неверный формат даты\"\n                                label=\"На какую дату внести задание:\"\n                                value={this.state.dateForTaskLesson}\n                                onChange={this.handleChangeDate}\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                            />\n\n                        </MuiPickersUtilsProvider>\n\n                    </DialogContent>\n\n                    <DialogActions>\n\n                        <Button onClick={this.confirmAdd} color=\"primary\">\n                            Сохранить изменения\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Отмена\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle, Divider, IconButton, TextField,\n    Typography\n} from \"@material-ui/core\";\nimport Http from \"../../serverApi/http\";\n\nimport {MoreHoriz} from \"@material-ui/icons\";\nimport {newTaskLesson} from \"./DialogAddTaskLesson\";\nimport moment from 'moment'\nimport {DialogEditTaskLesson} from \"./DialogEditTaskLesson\";\n\ninterface DialogViewDayProps {\n    tasks: newTaskLesson[],\n    day: string,\n    handleEditTaskLesson: (taskLesson: newTaskLesson) => void // cb для сохранения редактирования задания\n}\n\n\nexport class DialogViewDay extends React.Component<DialogViewDayProps> {\n\n    state = {\n        openDialogWindow: false\n    };\n\n    public handleOpenLoginDialog = () => {\n        this.setState({\n            openDialogWindow: true\n        })\n    };\n\n    public handleClose = () => {\n        this.setState({\n            openDialogWindow: false,\n        })\n    };\n\n\n    public render() {\n        return (\n            <div>\n                <IconButton onClick={this.handleOpenLoginDialog} style={{padding: 0, marginBottom: '1rem'}}>\n                    <MoreHoriz/>\n                </IconButton>\n\n                <Dialog open={this.state.openDialogWindow} onClose={this.handleClose}\n                        aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Просмотр дня: {moment(this.props.day).format(' Do MMM ')}</DialogTitle>\n\n                    <DialogContent style={{width: '300px'}}>\n                        {this.props.tasks.map((task: newTaskLesson) => {\n                            return (\n                                <div key={Math.random()}>\n                                    <Typography variant=\"caption\" style={{fontSize: '1.2rem'}}>Задание №{this.props.tasks.indexOf(task) + 1}</Typography>\n                                    <Typography variant=\"subtitle2\">{task.lesson.lessonWeek} неделя</Typography>\n                                    <Typography variant=\"subtitle2\">Текст задания: {task.taskText}</Typography>\n                                    <Typography variant=\"subtitle2\">{task.lesson.lessonName}</Typography>\n                                    <Typography variant=\"caption\">{task.lesson.lessonTeacher}</Typography>\n                                    <DialogEditTaskLesson handleEditTaskLesson={this.props.handleEditTaskLesson} lesson={task}/>\n                                    <Divider style={{marginTop: '1rem', marginBottom: '1rem'}} />\n                                </div>\n                                )\n                        })}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Сохранить\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Отмена\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n","import * as React from \"react\";\nimport {DataStorage} from \"../serverApi/dataStorage\";\nimport {LocalStorage} from \"../serverApi/localStorage\";\nimport Http from \"../serverApi/http\";\nimport {newTaskLesson} from \"../components/Dialogs/DialogAddTaskLesson\";\nimport {TeacherData, User} from \"./AccountPage\";\nimport SnackbarComponent from \"../components/Dialogs/SnackBar\";\nimport moment from 'moment';\nimport {theme} from \"../Theme\";\nimport {LoadingComponent} from \"../components/UniversalComponents\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport {\n    AppBar,\n    Badge, FormControl, Grid, Input,\n    InputLabel, MenuItem, Select,\n    Tab,\n    Table,\n    TableBody,\n    TableCell,\n    TableRow,\n    Tabs,\n    Typography\n} from \"@material-ui/core\";\nimport {DialogViewDay} from \"../components/Dialogs/DialogViewDay\";\n\nexport default class CalendarPage extends React.Component {\n\n    state = {\n        isDataConfirmed: null,\n        tabValue: new Date().getMonth(),\n        data: {\n            email: '',\n            registrationDate: '',\n            password: '',\n            admin: false,\n            lastLoginDate: '',\n            lessons: {evenWeek: [], unevenWeek: []},\n            lessonTasks: [],\n            teachers: [],\n            lessonTime: []\n        },\n        openSnackbar: false,\n        months: [[]],\n        selectedMonth: ''\n    };\n\n    componentDidMount(): void {\n        document.title = 'Расписание занятий';\n        let months: any = [];\n        let monthsCounter = 0;\n        while (monthsCounter < 12) {\n            const count = moment().month(monthsCounter).daysInMonth();\n            const days = [];\n            for (let i = 1; i < count + 1; i++) {\n                days.push(moment().month(monthsCounter).date(i));\n\n            }\n            months.push(days);\n            monthsCounter++\n        }\n\n        this.setState({\n            months: months,\n            selectedMonth: this.returnRussianMonthName(new Date().toDateString().split(' ')[1])\n        });\n\n        const storage = new DataStorage(new LocalStorage());\n        const http = new Http();\n        if (storage.getUserData !== null) {\n            http.loginWithToken(storage.getUserData, '/user')\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        if (result.email !== undefined) {\n                            this.setState({\n                                data: result\n                            }, () => {\n                                this.setState({\n                                    isDataConfirmed: true\n                                })\n                            })\n                        } else {\n                            this.setState({\n                                isDataConfirmed: false\n                            }, () => {\n                                storage.logOut()\n                            })\n                        }\n                    }, (error) => {\n                        console.log(error)\n                    }\n                );\n        } else {\n            this.setState({\n                isDataConfirmed: false\n            })\n        }\n    }\n\n    public handleChangeTab = (event: React.ChangeEvent<{}>, newValue: number) => {\n        this.setState({\n            tabValue: newValue\n        })\n    };\n\n    public handleChangeIndexTab = (index: number) => {\n        this.setState({\n            tabValue: index\n        })\n    };\n\n    public updateHandler = (data: User) => {\n\n        const storage = new DataStorage(new LocalStorage());\n        const http = new Http();\n        if (storage.getUserData !== null) {\n            http.updateUserData(data, '/updateData')\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        if (result.email !== undefined) {\n                            this.setState({\n                                data: result\n                            }, () => {\n                                this.setState({\n                                    isDataConfirmed: true\n                                })\n                            })\n                        } else {\n                            this.setState({\n                                isDataConfirmed: false\n                            }, () => {\n                                storage.logOut()\n                            })\n                        }\n                    }, (error) => {\n                        console.log(error)\n                    }\n                );\n        } else {\n            this.setState({\n                isDataConfirmed: false\n            })\n        }\n    };\n\n    public handleAddNewTaskLesson = (taskLesson: newTaskLesson) => {\n        const newData: User = this.state.data;\n        newData.lessonTasks.push(taskLesson);\n        this.updateHandler(newData);\n        this.setState({\n            openSnackbar: true\n        });\n        setTimeout(() => {\n            this.setState({\n                openSnackbar: false\n            })\n        }, 4000)\n    };\n\n    public handleEditTaskLesson = (taskLesson: newTaskLesson) => {\n        const newData: User = this.state.data;\n        newData.lessonTasks.forEach((taskLessonForEdit: newTaskLesson) => {\n            if (taskLessonForEdit.id === taskLesson.id){\n                taskLessonForEdit.taskText = taskLesson.taskText;\n                taskLessonForEdit.taskDate = taskLesson.taskDate\n            }\n        });\n        this.updateHandler(newData);\n    };\n\n    public handleCheckboxTaskLesson = (taskLesson: newTaskLesson) => {\n        // TODO: обновление выполнения задания\n    };\n\n    public returnRussianMonthName = (monthName: string) => {\n        const monthNames = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'];\n        if (monthName === 'Jan') {\n            return (monthNames[0])\n        }\n        if (monthName === 'Feb') {\n            return (monthNames[1])\n        }\n        if (monthName === 'Mar') {\n            return (monthNames[2])\n        }\n        if (monthName === 'Apr') {\n            return (monthNames[3])\n        }\n        if (monthName === 'May') {\n            return (monthNames[4])\n        }\n        if (monthName === 'Jun') {\n            return (monthNames[5])\n        }\n        if (monthName === 'Jul') {\n            return (monthNames[6])\n        }\n        if (monthName === 'Aug') {\n            return (monthNames[7])\n        }\n        if (monthName === 'Sep') {\n            return (monthNames[8])\n        }\n        if (monthName === 'Oct') {\n            return (monthNames[9])\n        }\n        if (monthName === 'Nov') {\n            return (monthNames[10])\n        }\n        if (monthName === 'Dec') {\n            return (monthNames[11])\n        }\n    }\n\n    public handleChangeMonthInMobileVersion = (event: any) => {\n        this.setState({\n            selectedMonth: event.target.value\n        })\n    };\n\n    public render() {\n\n        const stylesForTab = {\n            textTransform: 'none',\n            minWidth: 72,\n        } as React.CSSProperties;\n\n        const calendarMenuFullVersion = (\n            <AppBar position=\"static\" color=\"default\" style={{marginTop: '1rem'}}>\n                <Tabs\n                    value={this.state.tabValue}\n                    onChange={this.handleChangeTab}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"fullWidth\"\n                >\n                    {this.state.months.map(month => {\n                        return (\n                            <Tab label={this.returnRussianMonthName(new Date(month[0]).toDateString().split(' ')[1])}\n                                 style={stylesForTab}\n                                 key={Math.random()}/>\n                        )\n                    })}\n                </Tabs>\n            </AppBar>\n        );\n\n        const dayCard = (day: string) => {\n            const tasks: newTaskLesson[] = [];\n            const engMonthName = new Date(day).toDateString().split(' ')[1]\n            const rusMonthName = this.returnRussianMonthName(engMonthName)\n            this.state.data.lessonTasks.map((task: newTaskLesson) => {\n                if (task.taskDate !== undefined && new Date(task.taskDate).toDateString() === day) {\n                    tasks.push(task)\n                }\n            });\n            return (\n                <Badge style={{}} badgeContent={tasks.length} color=\"error\">\n                    <div style={{\n                        width: '140px',\n                        height: '110px',\n                        textAlign: 'right',\n                        borderLeft: '1px solid rgba(224, 224, 224, 1)',\n                        marginTop: '7px'\n                    }}>\n\n                        <Typography style={{color: 'grey'}} variant=\"subtitle1\">\n                            {rusMonthName}\n                        </Typography>\n                        <Typography style={{color: 'grey'}} variant=\"h4\">\n                            {Number(day.split(' ')[2])}\n                        </Typography>\n                        {tasks.length >= 1 ?\n                            <div style={{marginRight: '100%'}}><DialogViewDay handleEditTaskLesson={this.handleEditTaskLesson} tasks={tasks} day={day}/></div> : null}\n                    </div>\n                </Badge>\n            )\n        };\n\n        const swipeableViews = (\n            <SwipeableViews axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'} index={this.state.tabValue}\n                            onChangeIndex={this.handleChangeIndexTab}>\n                {this.state.months.map((month) => {\n                    let cells: string[] = [];\n                    const dayName = new Date(month[0]).toDateString().split(' ')[0]\n                    if (dayName === 'Mon') {\n                        cells = month\n                    }\n                    if (dayName === 'Tue') {\n                        cells = ['empty', ...month]\n                    }\n                    if (dayName === 'Wed') {\n                        cells = ['empty', 'empty', ...month]\n                    }\n                    if (dayName === 'Thu') {\n                        cells = ['empty', 'empty', 'empty', ...month]\n                    }\n                    if (dayName === 'Fri') {\n                        cells = ['empty', 'empty', 'empty', 'empty', ...month]\n                    }\n                    if (dayName === 'Sat') {\n                        cells = ['empty', 'empty', 'empty', 'empty', 'empty', ...month]\n                    }\n                    if (dayName === 'Sun') {\n                        cells = ['empty', 'empty', 'empty', 'empty', 'empty', 'empty', ...month]\n                    }\n                    return (\n                        <Table style={{tableLayout: 'fixed'}} key={Math.random()}>\n                            <TableBody>\n                                <TableRow>\n                                    <TableCell style={{width: '14,28%', paddingLeft: '0px'}}>\n                                        <Typography style={{marginLeft: '1rem'}}>Понедельник</Typography>\n                                    </TableCell>\n                                    <TableCell style={{paddingLeft: '0px'}}>\n                                        <Typography style={{marginLeft: '1rem'}}>Вторник</Typography>\n                                    </TableCell>\n                                    <TableCell style={{paddingLeft: '0px'}}>\n                                        <Typography style={{marginLeft: '1rem'}}>Среда</Typography>\n                                    </TableCell>\n                                    <TableCell style={{paddingLeft: '0px'}}>\n                                        <Typography style={{marginLeft: '1rem'}}>Четверг</Typography>\n                                    </TableCell>\n                                    <TableCell style={{paddingLeft: '0px'}}>\n                                        <Typography style={{marginLeft: '1rem'}}>Пятница</Typography>\n                                    </TableCell>\n                                    <TableCell style={{paddingLeft: '0px'}}>\n                                        <Typography style={{marginLeft: '1rem'}}>Суббота</Typography>\n                                    </TableCell>\n                                    <TableCell style={{paddingLeft: '0px'}}>\n                                        <Typography style={{marginLeft: '1rem'}}>Воскресенье</Typography>\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    {cells.slice(0, 7).map((day: any) => {\n                                        return (\n                                            <TableCell style={{paddingLeft: '0px'}} key={Math.random()}>\n                                                {day === 'empty' ? <div/> : dayCard(new Date(day).toDateString())}\n                                            </TableCell>\n                                        )\n                                    })}\n                                </TableRow>\n                                <TableRow>\n                                    {cells.slice(7, 14).map((day: any) => {\n                                        return (\n                                            <TableCell style={{paddingLeft: '0px'}} key={Math.random()}>\n                                                {day === 'empty' ? <div/> : dayCard(new Date(day).toDateString())}\n                                            </TableCell>\n                                        )\n                                    })}\n                                </TableRow>\n                                <TableRow>\n                                    {cells.slice(14, 21).map((day: any) => {\n                                        return (\n                                            <TableCell style={{paddingLeft: '0px'}} key={Math.random()}>\n                                                {day === 'empty' ? <div/> : dayCard(new Date(day).toDateString())}\n                                            </TableCell>\n                                        )\n                                    })}\n                                </TableRow>\n                                <TableRow>\n                                    {cells.slice(21, 28).map((day: any) => {\n                                        return (\n                                            <TableCell style={{paddingLeft: '0px'}} key={Math.random()}>\n                                                {day === 'empty' ? <div/> : dayCard(new Date(day).toDateString())}\n                                            </TableCell>\n                                        )\n                                    })}\n                                </TableRow>\n                                <TableRow>\n                                    {cells.slice(28, 35).map((day: any) => {\n                                        return (\n                                            <TableCell style={{paddingLeft: '0px'}} key={Math.random()}>\n                                                {day === 'empty' ? <div/> : dayCard(new Date(day).toDateString())}\n                                            </TableCell>\n                                        )\n                                    })}\n                                </TableRow>\n                                <TableRow>\n                                    {cells.slice(35, 42).map((day: any) => {\n                                        return (\n                                            <TableCell style={{paddingLeft: '0px'}} key={Math.random()}>\n                                                {day === 'empty' ? <div/> : dayCard(new Date(day).toDateString())}\n                                            </TableCell>\n                                        )\n                                    })}\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                    )\n                })}\n            </SwipeableViews>\n        );\n\n        const CalendarMenuMobileVersion = () => {\n            return (\n                <FormControl style={{width: '100%'}}>\n                    <InputLabel htmlFor=\"selectTeacher\">Выбранный месяц</InputLabel>\n                    <Select\n                        value={this.state.selectedMonth}\n                        onChange={this.handleChangeMonthInMobileVersion}\n                        input={<Input id=\"selectTeacher\"/>}\n                        fullWidth\n                    >\n                        {this.state.months.map((monthArray: any) => {\n                            const month = this.returnRussianMonthName(new Date(monthArray[0]).toDateString().split(' ')[1]);\n                            return (\n                                <MenuItem value={month} key={Math.random()}>{month}</MenuItem>\n                            )\n                        })}\n                    </Select>\n                </FormControl>\n            )\n        };\n\n        const CalendarBodyMobileVersion = () => {\n\n            const dayCardMobile = (day: string) => {\n                const tasks: newTaskLesson[] = [];\n                this.state.data.lessonTasks.map((task: newTaskLesson) => {\n                    if (task.taskDate !== undefined && new Date(task.taskDate).toDateString() === day) {\n                        tasks.push(task)\n                    }\n                });\n                return (\n                    <Badge style={{}} badgeContent={tasks.length} color=\"error\">\n                        <div style={{\n                            width: '30px',\n                            maxWidth: '30px',\n                            height: '50px',\n                            textAlign: 'right',\n                            borderLeft: '1px solid rgba(224, 224, 224, 1)',\n                            marginTop: '7px'\n                        }}>\n                            <Typography style={{color: 'grey', marginLeft: '0.5rem'}} variant=\"h6\">\n                                {Number(day.split(' ')[2])}\n                            </Typography>\n                            {tasks.length >= 1 ?\n                                <div style={{marginBottom: '3rem'}}><DialogViewDay handleEditTaskLesson={this.handleEditTaskLesson}  tasks={tasks} day={day}/></div> : null}\n                        </div>\n                    </Badge>\n                )\n            };\n\n            const CalendarBody = () => {\n                let monthArr: any[] = [];\n                this.state.months.map((month) => {\n                    const monthName = new Date(month[0]).toDateString().split(' ')[1];\n                    if (this.returnRussianMonthName(monthName) === this.state.selectedMonth) {\n                        monthArr = month\n                    }\n                });\n                const dayName = new Date(monthArr[0]).toDateString().split(' ')[0];\n                let cells: string[] = [];\n\n                if (dayName === 'Mon') {\n                    cells = monthArr\n                }\n                if (dayName === 'Tue') {\n                    cells = ['empty', ...monthArr]\n                }\n                if (dayName === 'Wed') {\n                    cells = ['empty', 'empty', ...monthArr]\n                }\n                if (dayName === 'Thu') {\n                    cells = ['empty', 'empty', 'empty', ...monthArr]\n                }\n                if (dayName === 'Fri') {\n                    cells = ['empty', 'empty', 'empty', 'empty', ...monthArr]\n                }\n                if (dayName === 'Sat') {\n                    cells = ['empty', 'empty', 'empty', 'empty', 'empty', ...monthArr]\n                }\n                if (dayName === 'Sun') {\n                    cells = ['empty', 'empty', 'empty', 'empty', 'empty', 'empty', ...monthArr]\n                }\n                return (\n                    <Table style={{tableLayout: 'fixed'}} key={Math.random()}>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell style={{width: '14,28%', paddingLeft: '0px'}}>\n                                    <Typography style={{marginLeft: '1rem'}}>Пн</Typography>\n                                </TableCell>\n                                <TableCell style={{paddingLeft: '0px'}}>\n                                    <Typography style={{marginLeft: '1rem'}}>Вт</Typography>\n                                </TableCell>\n                                <TableCell style={{paddingLeft: '0px'}}>\n                                    <Typography style={{marginLeft: '1rem'}}>Ср</Typography>\n                                </TableCell>\n                                <TableCell style={{paddingLeft: '0px'}}>\n                                    <Typography style={{marginLeft: '1rem'}}>Чт</Typography>\n                                </TableCell>\n                                <TableCell style={{paddingLeft: '0px'}}>\n                                    <Typography style={{marginLeft: '1rem'}}>Пт</Typography>\n                                </TableCell>\n                                <TableCell style={{paddingLeft: '0px'}}>\n                                    <Typography style={{marginLeft: '1rem'}}>Сб</Typography>\n                                </TableCell>\n                                <TableCell style={{paddingLeft: '0px'}}>\n                                    <Typography style={{marginLeft: '1rem'}}>Вс</Typography>\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                {cells.slice(0, 7).map((day: any) => {\n                                    return (\n                                        <TableCell style={{paddingLeft: '0px'}} key={Math.random()}>\n                                            {day === 'empty' ? <div/> : dayCardMobile(new Date(day).toDateString())}\n                                        </TableCell>\n                                    )\n                                })}\n                            </TableRow>\n                            <TableRow>\n                                {cells.slice(7, 14).map((day: any) => {\n                                    return (\n                                        <TableCell style={{paddingLeft: '0px'}} key={Math.random()}>\n                                            {day === 'empty' ? <div/> : dayCardMobile(new Date(day).toDateString())}\n                                        </TableCell>\n                                    )\n                                })}\n                            </TableRow>\n                            <TableRow>\n                                {cells.slice(14, 21).map((day: any) => {\n                                    return (\n                                        <TableCell style={{paddingLeft: '0px'}} key={Math.random()}>\n                                            {day === 'empty' ? <div/> : dayCardMobile(new Date(day).toDateString())}\n                                        </TableCell>\n                                    )\n                                })}\n                            </TableRow>\n                            <TableRow>\n                                {cells.slice(21, 28).map((day: any) => {\n                                    return (\n                                        <TableCell style={{paddingLeft: '0px'}} key={Math.random()}>\n                                            {day === 'empty' ? <div/> : dayCardMobile(new Date(day).toDateString())}\n                                        </TableCell>\n                                    )\n                                })}\n                            </TableRow>\n                            <TableRow>\n                                {cells.slice(28, 35).map((day: any) => {\n                                    return (\n                                        <TableCell style={{paddingLeft: '0px'}} key={Math.random()}>\n                                            {day === 'empty' ? <div/> : dayCardMobile(new Date(day).toDateString())}\n                                        </TableCell>\n                                    )\n                                })}\n                            </TableRow>\n                            <TableRow>\n                                {cells.slice(35, 42).map((day: any) => {\n                                    return (\n                                        <TableCell style={{paddingLeft: '0px'}} key={Math.random()}>\n                                            {day === 'empty' ? <div/> : dayCardMobile(new Date(day).toDateString())}\n                                        </TableCell>\n                                    )\n                                })}\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                );\n            };\n\n\n            return (\n                <CalendarBody/>\n            )\n        };\n\n        return (\n            <div>\n                <div className=\"top\" style={{marginTop: '5rem'}}>\n                    <CalendarMenuMobileVersion/>\n                    <CalendarBodyMobileVersion/>\n                </div>\n\n                <div style={{minWidth: '1216px', overflow: 'auto'}} className=\"topBarMax\">\n                    {calendarMenuFullVersion}\n\n                    {this.state.isDataConfirmed ? swipeableViews : LoadingComponent}\n                </div>\n                {this.state.openSnackbar ? <SnackbarComponent variant=\"success\" message=\"Задание добавлено\"/> : null}\n            </div>\n        )\n    }\n}\n","import HelpPage from \"./pages/HelpPage\";\nimport StartPage from \"./pages/StartPage\";\nimport AccountPage from \"./pages/AccountPage\";\nimport SchedulePage from \"./pages/SchedulePage\";\nimport CalendarPage from \"./pages/CalendarPage\";\n\nexport const pagesForMenus =  {\n    pages:\n        [\n            {path: '/', buttonText: 'Главная', isDataConfirmed: false,  component: StartPage, icon: 'home'},\n            {path: '/help', buttonText: 'Помощь', isDataConfirmed: false, component: HelpPage, icon: 'live_help'},\n            {path: '/account', buttonText: 'Аккаунт', isDataConfirmed: true, component: AccountPage, icon: 'person'},\n            {path: '/schedule', buttonText: 'Расписание', isDataConfirmed: true, component: SchedulePage, icon: 'event'},\n            {path: '/calendar', buttonText: 'Календарь', isDataConfirmed: true, component: CalendarPage, icon: 'view_module'},\n        ]\n};\n","import React from 'react'\nimport {\n    Button, CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    TextField, Typography\n} from \"@material-ui/core\";\nimport Http from \"../../serverApi/http\";\nimport {DataStorage} from \"../../serverApi/dataStorage\";\nimport {LocalStorage} from \"../../serverApi/localStorage\";\nimport {MeetingRoom} from \"@material-ui/icons\";\n\n\ninterface DialogLoginFormProps {\n    mobile: boolean\n    isLoginSuccess: any;\n}\n\ninterface DialogLoginFormState {\n    openDialogWindow: boolean,\n    email: string,\n    password: string,\n    isLoading: boolean\n    loginState: string\n}\n\nexport class DialogLoginForm extends React.Component<DialogLoginFormProps, DialogLoginFormState> {\n\n    state = {\n        openDialogWindow: false,\n        email: '',\n        password: '',\n        isLoading: false,\n        loginState: ''\n    };\n\n    public handleOpenLoginDialog = () => {\n        this.setState({\n            openDialogWindow: true\n        })\n    };\n\n    public handleClose = () => {\n        this.setState({\n            openDialogWindow: false,\n\n        })\n    };\n\n    public login = () => {\n        this.setState({\n            isLoading: true\n        });\n        const http = new Http();\n        const data = {\n            email: this.state.email,\n            password: this.state.password,\n        };\n        http.loginForToken(data, '/auth')\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    if (result.token === undefined){\n                        this.setState({\n                            loginState: 'Email или пароль введены неверно'\n                        })\n                    } else {\n                        this.setState({\n                            loginState: 'Вы успешно авторизованы. Сейчас Вы будете перенаправлены'\n                        }, ()=>{\n                            const storage = new DataStorage(new LocalStorage());\n                            storage.add(result.token);\n                            http.loginWithToken(result.token, '/user')\n                                .then(res => res.json())\n                                .then (\n                                    (result)=>{\n                                        // КОНЕЧНЫЕ ДАННЫЕ\n                                        this.setState({\n                                            openDialogWindow: false\n                                        });\n                                        this.props.isLoginSuccess(result)\n\n                                    }, (error) => {\n                                        console.log(error)\n                                    }\n                                )\n                        })\n                    }\n                    this.setState({\n                        isLoading: false\n                    })\n                },\n                (error) => {\n                    console.log(error)\n                }\n            );\n    };\n\n    public handleEmailChange = (event: any) => {\n        this.setState({\n            email: event.target.value\n        })\n    };\n\n    public handlePasswordChange = (event: any) => {\n        this.setState({\n            password: event.target.value\n        })\n    };\n\n    public render() {\n        return (\n            <div>\n\n                {this.props.mobile === true ?\n                    <div onClick={this.handleOpenLoginDialog} style={{height: '2rem', width: '7rem'}}>\n                        <Typography variant=\"button\"><MeetingRoom/>&nbsp;&nbsp;Вход</Typography>\n                    </div>\n                    :\n                    <Button color=\"secondary\" onClick={this.handleOpenLoginDialog}>\n                        <MeetingRoom/>&nbsp;&nbsp;Вход\n                    </Button>}\n\n                <Dialog open={this.state.openDialogWindow} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Вход</DialogTitle>\n                    <div style={{marginLeft: 'auto', marginRight: 'auto'}}>\n                        {this.state.isLoading ? <CircularProgress/> : null}\n                    </div>\n                    <DialogContent>\n                        <DialogContentText>\n                            Введите Email и пароль\n                        </DialogContentText>\n\n                        <Typography variant=\"button\">{this.state.loginState}</Typography>\n\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Email <span style={{color: 'red'}}>*</span></Typography>}\n                            type=\"email\"\n                            fullWidth\n                            onChange={this.handleEmailChange}\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            id=\"pass\"\n                            label={<Typography>Пароль <span style={{color: 'red'}}>*</span></Typography>}\n                            type=\"password\"\n                            fullWidth\n                            onChange={this.handlePasswordChange}\n                        />\n                    </DialogContent>\n\n                    <DialogActions>\n\n                        <Button onClick={this.login} color=\"primary\">\n                            Войти\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Отмена\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport {\n    Button, CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    TextField, Typography\n} from \"@material-ui/core\";\nimport Http from \"../../serverApi/http\";\nimport {DataStorage} from \"../../serverApi/dataStorage\";\nimport {LocalStorage} from \"../../serverApi/localStorage\";\nimport {PersonAdd} from \"@material-ui/icons\";\n\ninterface DialogRegisterFormProps {\n    mobile: boolean\n    isLoginSuccess: any;\n}\n\ninterface DialogRegisterFormState {\n    openDialogWindow: boolean,\n    email: string,\n    password: string,\n    confirmPassword: string,\n    isLoading: boolean,\n    registrationState: string\n}\n\nexport class DialogRegisterForm extends React.Component<DialogRegisterFormProps, DialogRegisterFormState> {\n\n    state = {\n        openDialogWindow: false,\n        email: '',\n        password: '',\n        confirmPassword: '',\n        isLoading: false,\n        registrationState: ''\n    };\n\n    public handleOpenLoginDialog = () => {\n        this.setState({\n            openDialogWindow: true\n        })\n    };\n\n\n    public handleClose = () => {\n\n        this.setState({\n            openDialogWindow: false,\n\n        })\n    };\n\n    public login = () => {\n        this.setState({\n            isLoading: true\n        });\n        const http = new Http();\n        const data = {\n            email: this.state.email,\n            password: this.state.password,\n            confirmPassword: this.state.confirmPassword\n        };\n        http.loginForToken(data, '/registration')\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        isLoading: false\n                    });\n                    if (result === 'Passwords Not Confirmed') {\n                        console.log(result);\n                        this.setState({\n                            registrationState: 'Введенные пароли не совпадают'\n                        })\n                    }\n\n                    if (result.token !== undefined) {\n                        this.setState({\n                            registrationState: 'Вы успешно зарегистрированы. Сейчас Вы будете перенаправлены'\n                        }, () => {\n                            const storage = new DataStorage(new LocalStorage());\n                            storage.add(result.token);\n                            http.loginWithToken(result.token, '/user')\n                                .then(res => res.json())\n                                .then(\n                                    (result) => {\n                                        // КОНЕЧНЫЕ ДАННЫЕ\n                                        this.setState({\n                                            openDialogWindow: false\n                                        });\n                                        this.props.isLoginSuccess(result)\n\n                                    }, (error) => {\n                                        console.log(error)\n                                    }\n                                )\n                        })\n                    }\n\n                    if (result === 'This email already registered') {\n                        this.setState({\n                            registrationState: 'Этот Email уже занят'\n                        })\n                    }\n\n                    if (result === '8 symbols') {\n                        this.setState({\n                            registrationState: 'Длина пароля должна быть не менее 8 символов'\n                        })\n                    }\n                },\n                (error) => {\n                    console.log(error)\n                }\n            );\n    };\n\n    public handleEmailChange = (event: any) => {\n        this.setState({\n            email: event.target.value\n        })\n    };\n\n    public handlePasswordChange = (event: any) => {\n        this.setState({\n            password: event.target.value\n        })\n    };\n\n    public handleConfirmPasswordChange = (event: any) => {\n        this.setState({\n            confirmPassword: event.target.value\n        })\n    };\n\n    public render() {\n        return (\n            <div>\n\n                {this.props.mobile === true ?\n                    <div onClick={this.handleOpenLoginDialog} style={{height: '2rem', width: '7rem'}}>\n                        <PersonAdd/>&nbsp;&nbsp;<Typography variant=\"button\">Регистрация</Typography>\n                    </div>\n                    :\n                    <Button color=\"secondary\" onClick={this.handleOpenLoginDialog}>\n                        <PersonAdd/>&nbsp;&nbsp;Регистрация\n                    </Button>}\n\n                <Dialog open={this.state.openDialogWindow} onClose={this.handleClose}\n                        aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Регистрация</DialogTitle>\n                    <div style={{marginLeft: 'auto', marginRight: 'auto'}}>\n                        {this.state.isLoading ? <CircularProgress/> : null}\n                    </div>\n                    <DialogContent>\n                        <DialogContentText>\n                            Для регистрации необходимо ввести свой email и пароль. Введенные пароли должны совпадать\n                        </DialogContentText>\n\n                        <Typography variant=\"button\">{this.state.registrationState}</Typography>\n\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Email <span style={{color: 'red'}}>*</span></Typography>}\n                            type=\"email\"\n                            fullWidth\n                            onChange={this.handleEmailChange}\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            id=\"pass\"\n                            label={<Typography>Пароль <span style={{color: 'red'}}>*</span></Typography>}\n                            type=\"password\"\n                            fullWidth\n                            onChange={this.handlePasswordChange}\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            id=\"confirmPass\"\n                            label={<Typography>Повторите пароль <span style={{color: 'red'}}>*</span></Typography>}\n                            type=\"password\"\n                            fullWidth\n                            onChange={this.handleConfirmPasswordChange}\n                        />\n                    </DialogContent>\n\n                    <DialogActions>\n                        <Button onClick={this.login} color=\"primary\">\n                            Зарегистрироваться\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Отмена\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n","import {Switch, Route, Link, NavLink, Redirect} from 'react-router-dom'\nimport React from 'react'\nimport {AppBar, Button, CircularProgress, Container, Icon, Menu, Toolbar, Typography} from \"@material-ui/core\";\nimport {MuiThemeProvider} from '@material-ui/core/styles';\nimport {theme} from \"../Theme\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {pagesForMenus} from \"../AppPagesList\";\nimport {DialogLoginForm} from \"./Dialogs/DialogLoginForm\";\nimport {DialogRegisterForm} from \"./Dialogs/DialogRegisterForm\";\nimport {DataStorage} from \"../serverApi/dataStorage\";\nimport {LocalStorage} from \"../serverApi/localStorage\";\nimport Http from \"../serverApi/http\";\nimport {Input} from \"@material-ui/icons\";\nimport StartPage from \"../pages/StartPage\";\n\n\ninterface pageData {\n    path: string;\n    buttonText: string;\n    isDataConfirmed: boolean;\n    component: any,\n    icon: any\n}\n\ninterface MainState {\n    menuEl: any,\n    mobileOpenDialogLoginForm: any,\n    isDataConfirmed: any,\n    data: any,\n}\n\nexport default class Main extends React.Component {\n\n    public storage = new DataStorage(new LocalStorage());\n\n    public state: MainState = {\n        menuEl: null,\n        mobileOpenDialogLoginForm: false,\n        isDataConfirmed: null, // флаг становится true только в том случае, если пришли данные по токену. Флаг прокидывается в детей и внутри проходят запросы\n        data: null,\n    };\n\n    // вспомогательное для меню\n    public handleClick = (evt: React.MouseEvent<HTMLButtonElement>) => {\n        this.setState({\n            menuEl: evt.currentTarget\n        })\n    };\n\n    // открытие - закрытие меню на мобильной версии\n    public handleClose = () => {\n        this.setState({\n            menuEl: null\n        })\n    };\n\n    // поднимается через пропсы с форм регистрации и логина\n    public isLoginSuccess = (data: any) => {\n        this.setState({\n            data: data\n        }, () => {\n            this.setState({\n                isDataConfirmed: true\n            })\n        })\n    };\n\n    // обработчик кнопки выхода\n    public handleExitButton = () => {\n        this.storage.logOut();\n        this.setState({\n            isDataConfirmed: false,\n            data: null\n        })\n    };\n\n    // событие изменения страницы - проверка данных\n    public changePage = () => {\n        const storage = new DataStorage(new LocalStorage());\n        const http = new Http();\n        if (storage.getUserData !== null) {\n            http.loginWithToken(storage.getUserData, '/user')\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        if (result.email !== undefined) {\n                            this.setState({\n                                data: result\n                            }, () => {\n                                this.setState({\n                                    isDataConfirmed: true\n                                })\n                            })\n                        } else {\n                            this.setState({\n                                isDataConfirmed: false\n                            }, () => {\n                                storage.logOut()\n                            })\n                        }\n                    }, (error) => {\n                        console.log(error)\n                    }\n                );\n        } else {\n            this.setState({\n                isDataConfirmed: false\n            })\n        }\n    }\n\n    componentDidMount(): void {\n        const storage = new DataStorage(new LocalStorage());\n        const http = new Http();\n        if (storage.getUserData !== null) {\n            http.loginWithToken(storage.getUserData, '/user')\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        if (result.email !== undefined) {\n                            this.setState({\n                                data: result\n                            }, () => {\n                                this.setState({\n                                    isDataConfirmed: true\n                                })\n                            })\n                        } else {\n                            this.setState({\n                                isDataConfirmed: false\n                            }, () => {\n                                storage.logOut()\n                            })\n                        }\n                    }, (error) => {\n                        console.log(error)\n                    }\n                );\n        } else {\n            this.setState({\n                isDataConfirmed: false\n            })\n        }\n    }\n\n    public render() {\n\n        const isDataConfirmedMobileMenu = (\n            <AppBar>\n                <Toolbar className=\"topBarMin\">\n                    <Button color=\"secondary\" aria-controls=\"customized-menu\" aria-haspopup=\"true\"\n                            onClick={this.handleClick}>\n                        <MenuIcon/>\n                    </Button>\n                    <Menu\n                        id=\"customized-menu\" anchorEl={this.state.menuEl} keepMounted\n                        open={Boolean(this.state.menuEl)} onClose={this.handleClose}\n                        style={{marginTop: '2rem'}}>\n                        {/* ОТДЕЛЬНО ВОЗВРАЩАЕТСЯ КНОПКА ВХОДА */}\n                        <div>\n                            {pagesForMenus.pages.map((dataPage: pageData) => {\n                                    return (\n                                        <div key={dataPage.buttonText + 'logged'} onClick={this.changePage}\n                                             style={{width: '180px'}}>\n                                            <NavLink to={dataPage.path} style={{color: \"black\"}}\n                                                     activeStyle={{color: \"black\", fontWeight: \"bold\"}}>\n                                                <MenuItem onClick={this.handleClose}>\n                                                    <Icon>{dataPage.icon}</Icon>&nbsp;&nbsp;\n                                                    <Typography\n                                                        variant=\"button\">{dataPage.buttonText}</Typography>\n                                                </MenuItem>\n                                            </NavLink>\n                                        </div>\n                                    )\n                                }\n                            )}\n                            <MenuItem onClick={this.handleExitButton}>\n                                <Input/>&nbsp;&nbsp;Выйти\n                            </MenuItem>\n                        </div>\n                    </Menu>\n                    {this.state.data === null ? null :\n                        <Typography style={{marginLeft: 'auto'}}\n                                    variant=\"subtitle2\">Привет, {this.state.data.email}</Typography>}\n                </Toolbar>\n            </AppBar>\n        );\n\n        const isDataNotConfirmedMobileMenu = (\n            <AppBar>\n                <Toolbar className=\"topBarMin\">\n                    <Button color=\"secondary\" aria-controls=\"customized-menu\" aria-haspopup=\"true\"\n                            onClick={this.handleClick}>\n                        <MenuIcon/>\n                    </Button>\n                    <Menu\n                        id=\"customized-menu\" anchorEl={this.state.menuEl} keepMounted\n                        open={Boolean(this.state.menuEl)} onClose={this.handleClose}\n                        style={{marginTop: '2rem'}}>\n                        {pagesForMenus.pages.map((dataPage: pageData) => {\n                                if (dataPage.isDataConfirmed === false) {\n                                    return (\n                                        <div key={dataPage.buttonText} onClick={this.changePage} style={{width: '180px'}}>\n                                            <NavLink to={dataPage.path} style={{color: \"black\"}}\n                                                     activeStyle={{color: \"black\", fontWeight: \"bold\"}}>\n                                                <MenuItem onClick={this.handleClose}>\n                                                    <Icon>{dataPage.icon}</Icon>&nbsp;&nbsp;\n\n                                                    <Typography\n                                                        variant=\"button\">{dataPage.buttonText}</Typography>\n                                                </MenuItem>\n                                            </NavLink>\n                                        </div>\n                                    )\n                                }\n                            }\n                        )}\n                        {/* ОТДЕЛЬНО ВОЗВРАЩАЕТСЯ КНОПКА ВХОДА */}\n                        <div>\n                            <MenuItem>\n                                <DialogLoginForm mobile={true} isLoginSuccess={this.isLoginSuccess}/>\n                            </MenuItem>\n                        </div>\n                        <div>\n                            <MenuItem>\n                                <DialogRegisterForm mobile={true} isLoginSuccess={this.isLoginSuccess}/>\n                            </MenuItem>\n                        </div>\n\n                    </Menu>\n                </Toolbar>\n            </AppBar>\n        );\n\n\n        const isLoadingComponent = (\n            <MuiThemeProvider theme={theme}>\n                <AppBar>\n                    <Toolbar style={{textAlign: 'right'}}>\n                        <CircularProgress color=\"inherit\"/>\n                    </Toolbar>\n                </AppBar>\n            </MuiThemeProvider>\n        );\n\n        const isDataConfirmed = (\n            <Switch>\n                <MuiThemeProvider theme={theme}>\n                    {/* МЕНЮ В МОБИЛЬНОЙ ВЕРСИИ */}\n\n                    {isDataConfirmedMobileMenu}\n\n                    {/* МЕНЮ В ПОЛНОЙ ВЕРСИИ */}\n                    <AppBar>\n                        <Toolbar className=\"topBarMax\" style={{textAlign: 'right'}}>\n                            {/* ОТДЕЛЬНО ВОЗВРАЩАЕТСЯ КНОПКА ВХОДА */}\n\n                            {pagesForMenus.pages.map((dataPage: pageData) => {\n                                return (\n                                    <div key={dataPage.buttonText + 'logged'}>\n                                        <Link to={dataPage.path}>\n                                            <Button color=\"secondary\" onClick={this.changePage}>\n                                                <Icon>{dataPage.icon}</Icon>&nbsp;&nbsp;{dataPage.buttonText}\n                                            </Button>\n                                        </Link>\n                                    </div>\n                                )\n                            })}\n                            <Button onClick={this.handleExitButton} color=\"secondary\">\n                                <Input/>&nbsp;&nbsp;ВЫХОД\n                            </Button>\n                            &nbsp;\n                            {this.state.data === null ? null :\n                                <Typography style={{marginLeft: 'auto'}}\n                                            variant=\"subtitle2\">Привет, {this.state.data.email}</Typography>}\n                        </Toolbar>\n                    </AppBar>\n\n                    {/*{ ТЕЛО ВСЕЙ СТРАНИЦЫ }*/}\n                    <Container>\n                        <div style={{marginTop: '5rem'}}>\n                            {pagesForMenus.pages.map((dataPage: pageData) => {\n                                return (\n                                    <div key={dataPage.buttonText}>\n                                        <Route exact path={dataPage.path} component={dataPage.component}/>\n                                    </div>\n                                )\n                            })}\n                            <Redirect to=\"/account\"/>\n                        </div>\n                    </Container>\n                </MuiThemeProvider>\n                <StartPage/>\n            </Switch>\n        );\n\n        const isDataNotConfirmed = (\n            <Switch>\n                <MuiThemeProvider theme={theme}>\n                    {/* МЕНЮ В МОБИЛЬНОЙ ВЕРСИИ */}\n                    {isDataNotConfirmedMobileMenu}\n\n                    {/* МЕНЮ В ПОЛНОЙ ВЕРСИИ */}\n                    <AppBar>\n                        <Toolbar className=\"topBarMax\" style={{textAlign: 'right'}}>\n                            {/* ОТДЕЛЬНО ВОЗВРАЩАЕТСЯ КНОПКА ВХОДА */}\n\n                            {pagesForMenus.pages.map((dataPage: pageData) => {\n                                if (dataPage.isDataConfirmed === false) {\n                                    return (\n                                        <div key={dataPage.buttonText}>\n                                            <Link to={dataPage.path}>\n                                                <Button color=\"secondary\" onClick={this.changePage}>\n                                                    <Icon>{dataPage.icon}</Icon>&nbsp;&nbsp;{dataPage.buttonText}\n                                                </Button>\n                                            </Link>\n                                        </div>\n                                    )\n                                }\n                            })}\n                            <DialogLoginForm mobile={false} isLoginSuccess={this.isLoginSuccess}/>\n                            <DialogRegisterForm mobile={false} isLoginSuccess={this.isLoginSuccess}/>\n                        </Toolbar>\n                    </AppBar>\n\n                    {/* ТЕЛО ВСЕЙ СТРАНИЦЫ */}\n                    <Container>\n                        <div style={{marginTop: '5rem'}}>\n                            {pagesForMenus.pages.map((dataPage: pageData) => {\n                                if (dataPage.isDataConfirmed === false) {\n                                    return (\n                                        <div key={dataPage.buttonText}>\n                                            <Route exact path={dataPage.path} component={dataPage.component}/>\n                                        </div>\n                                    )\n                                }\n                            })}\n                            <Redirect to=\"/\"/>\n                        </div>\n                    </Container>\n                </MuiThemeProvider>\n            </Switch>\n        );\n\n        // ВОЗВРАЩАЕТСЯ ЕСЛИ ОЖИДАНИЕ ЗАПРОСА\n        if (this.state.isDataConfirmed === null) {\n            return (isLoadingComponent)\n        }\n        // ВОЗВРАЩАЕТСЯ ЕСЛИ ДАННЫЕ НЕ ПРИШЛИ\n        if (!this.state.isDataConfirmed) {\n            return (isDataNotConfirmed)\n        } else {\n            return (isDataConfirmed)\n        }\n\n    }\n};\n","import React from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport Main from \"./components/Main\";\n\nconst App: React.FC = () => {\n    return (\n        <BrowserRouter>\n            <Main/>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}