{"version":3,"sources":["pages/StartPage.tsx","pages/RegisterPage.tsx","Theme.ts","components/Main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["StartPage","react","style","border","React","RegisterPage","theme","createMuiTheme","palette","common","black","white","background","paper","default","primary","light","main","dark","contrastText","secondary","error","text","disabled","hint","Main","state","menuEl","pagesForMenus","pages","path","buttonText","isLogged","component","handleClick","evt","_this","setState","currentTarget","handleClose","_this2","this","react_default","a","createElement","react_router","MuiThemeProvider","color","AppBar","Toolbar","className","Button","aria-controls","aria-haspopup","onClick","Menu_default","Menu","id","anchorEl","keepMounted","open","Boolean","onClose","marginTop","map","dataPage","key","react_router_dom","to","activeStyle","fontWeight","MenuItem","textAlign","exact","Component","App","Main_Main","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.511033c8.chunk.js","sourcesContent":["import * as React from \"react\";\nimport Menu from \"../App\";\n\ninterface StartPageProps {\n    match: any\n}\n\nexport default class StartPage extends React.Component<StartPageProps> {\n\n    public render () {\n        return (\n            <div style={{border: '1px solid black'}}>\n            </div>\n        )\n    }\n\n}\n","import * as React from \"react\";\n\nexport default class RegisterPage extends React.Component {\n\n    public render() {\n        return (\n            <div>\n                registerPage\n\n            </div>\n        )\n    }\n}\n","import {createMuiTheme} from \"@material-ui/core\";\n\nexport const theme = createMuiTheme({\n    \"palette\": {\n        \"common\": {\n            \"black\": \"#000\",\n            \"white\": \"#fff\"\n        },\n        \"background\": {\n            \"paper\": \"rgba(255, 255, 255, 1)\",\n            \"default\": \"#fafafa\"\n        },\n        \"primary\": {\n            \"light\": \"#40c4ff\",\n            \"main\": \"#64b5f6\",\n            \"dark\": \"rgba(74, 144, 226, 1)\",\n            \"contrastText\": \"#fff\"\n        },\n        \"secondary\": {\n            \"light\": \"#4ffcff\",\n            \"main\": \"#fff\",\n            \"dark\": \"#22c5bb\",\n            \"contrastText\": \"#fff\"\n        },\n        \"error\": {\n            \"light\": \"#2327e5\",\n            \"main\": \"#001df4\",\n            \"dark\": \"#0b18d3\",\n            \"contrastText\": \"#fff\"\n        },\n        \"text\": {\n            \"primary\": \"rgba(0, 0, 0, 0.87)\",\n            \"secondary\": \"rgba(0, 0, 0, 0.54)\",\n            \"disabled\": \"rgba(0, 0, 0, 0.38)\",\n            \"hint\": \"rgba(0, 0, 0, 0.38)\"\n        }\n    }\n});\n","import {Switch, Route, Link, NavLink} from 'react-router-dom'\nimport StartPage from \"../pages/StartPage\";\nimport RegisterPage from \"../pages/RegisterPage\";\nimport React from 'react'\nimport {AppBar, Button, Menu, Paper, Toolbar, Typography} from \"@material-ui/core\";\nimport {MuiThemeProvider} from '@material-ui/core/styles';\nimport {theme} from \"../Theme\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\ninterface pageData {\n    path: string;\n    buttonText: string;\n    isLogged: boolean\n    component: any\n}\n\ninterface pageDataArray {\n    pages: pageData[]\n}\n\nexport default class Main extends React.Component {\n\n    public state = {\n        menuEl: null\n    };\n\n    public pagesForMenus: pageDataArray =\n        {\n            pages:\n                [\n                    {path: '/start', buttonText: 'Вход', isLogged: false, component: StartPage},\n                    {path: '/registration', buttonText: 'Регистрация', isLogged: false, component: RegisterPage},\n                    {path: '/help', buttonText: 'Помощь', isLogged: false, component: null}\n                ]\n        };\n\n    public handleClick = (evt: React.MouseEvent<HTMLButtonElement>) => {\n        this.setState({\n            menuEl: evt.currentTarget\n        })\n    };\n\n    public handleClose = () => {\n        this.setState({\n            menuEl: null\n        })\n    };\n\n    public render() {\n        return (\n            <Switch>\n                <MuiThemeProvider theme={theme}>\n                    <div color={\"primary\"}>\n\n                        {/* МЕНЮ В МОБИЛЬНОЙ ВЕРСИИ */}\n                        <AppBar>\n                            <Toolbar className=\"topBarMin\">\n\n                                <Button color=\"secondary\" aria-controls=\"customized-menu\" aria-haspopup=\"true\"\n                                        onClick={this.handleClick}>\n                                    <MenuIcon/>\n                                </Button>\n                                <Menu\n                                    id=\"customized-menu\" anchorEl={this.state.menuEl} keepMounted\n                                    open={Boolean(this.state.menuEl)} onClose={this.handleClose}\n                                    style={{marginTop: '2rem'}}>\n                                    {this.pagesForMenus.pages.map((dataPage: pageData) => {\n                                        return (\n                                            <div key={dataPage.buttonText}>\n                                                <NavLink to={dataPage.path} style={{color:\"black\"}} activeStyle={{color:\"black\", fontWeight:\"bold\"}}>\n                                                    <MenuItem onClick={this.handleClose}>\n                                                        {dataPage.buttonText}\n                                                    </MenuItem>\n                                                </NavLink>\n                                            </div>\n                                        )\n                                    })}\n                                </Menu>\n                            </Toolbar>\n                        </AppBar>\n\n                        {/* МЕНЮ В ПОЛНОЙ ВЕРСИИ */}\n                        <AppBar>\n                            <Toolbar className=\"topBarMax\" style={{textAlign: 'right'}}>\n                                {this.pagesForMenus.pages.map((dataPage: pageData) => {\n                                    return (\n                                        <div key={dataPage.buttonText}>\n                                            <Link to={dataPage.path}>\n                                                <Button color=\"secondary\">\n                                                    {dataPage.buttonText}\n                                                </Button>\n                                            </Link>\n                                        </div>\n                                    )\n                                })}\n                            </Toolbar>\n                        </AppBar>\n\n                        {/*{ ТЕЛО ВСЕЙ СТРАНИЦЫ }*/}\n                        <div style={{marginTop: '5rem'}}>\n                            {this.pagesForMenus.pages.map((dataPage: pageData) => {\n                                return (\n                                    <div key={dataPage.buttonText}>\n                                        <Route exact path={dataPage.path} component={dataPage.component}/>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                </MuiThemeProvider>\n            </Switch>\n        )\n    }\n};\n","import React from 'react';\nimport './App.css';\nimport {Route, Router, Switch} from \"react-router\";\nimport StartPage from \"./pages/StartPage\";\nimport {BrowserRouter, Link} from \"react-router-dom\";\nimport RegisterPage from \"./pages/RegisterPage\";\nimport DefPage from \"./pages/DefPage\";\nimport {Button, Menu} from \"@material-ui/core\";\nimport Main from \"./components/Main\";\n\nconst App: React.FC = () => {\n    return (\n        <BrowserRouter>\n            <Main/>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}