{"version":3,"sources":["Theme.ts","pages/HelpPage.tsx","AppConstants.tsx","serverApi/http.ts","serverApi/dataStorage.ts","serverApi/localStorage.ts","components/UniversalComponents.tsx","pages/StartPage.tsx","components/Dialogs/DialogDeleteNews.tsx","components/Dialogs/DialogEditNews.tsx","components/Dialogs/DialogAddNews.tsx","components/SetAdmin.tsx","pages/AdminComponent.tsx","pages/AccountPage.tsx","pages/AppPagesList.ts","components/Dialogs/DialogLoginForm.tsx","components/Dialogs/DialogRegisterForm.tsx","components/Main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["theme","createMuiTheme","palette","common","black","white","background","paper","default","primary","light","main","dark","contrastText","secondary","error","text","disabled","hint","HelpPage","document","title","react","React","serverApi","Http","url","data","path","fetch","this","method","headers","Content-Type","body","JSON","stringify","token","Authorization","concat","email","DataStorage","storage","Object","classCallCheck","createClass","key","value","add","logOut","get","LocalStorage","parse","localStorage","getItem","save","removeItem","setItem","LoadingComponent","react_default","a","createElement","MuiThemeProvider","CircularProgress","Typography","variant","StartPage","state","news","_this2","getNewsList","then","res","json","result","setState","toConsumableArray","style","flexGrow","Grid","container","spacing","textAlign","item","xs","sm","length","CardContent","map","newsData","Card","_id","marginTop","header","color","author","id","subtitle","textBody","img","cardBody","CardMedia","component","alt","height","image","DialogDeleteNews","_React$Component","_getPrototypeOf2","_this","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","openDialogWindow","handleOpenLoginDialog","handleClose","confirmDelete","removeNews","props","getNews","inherits","Button","onClick","gridRowStart","gridRowEnd","Delete","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","Component","DialogEditNews","confirmEdit","http","oldHeader","oldBody","oldData","editNews","err","console","handleHeaderChange","event","target","handleBodyChange","handleAuthorChange","handleImgChange","Edit","TextField","autoFocus","margin","label","type","fullWidth","onChange","DialogAddNews","Date","addNews","SetAdmin","adminEmail","addConfirmed","isLoading","handleAdminEmailChange","addUserAsAdmin","width","AdminComponent","expanded","isNoOneNews","handleChangeExpand","panel","isExpanded","log","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","aria-controls","ExpansionPanelDetails","DialogAddNews_DialogAddNews","display","DialogDeleteNews_DialogDeleteNews","DialogEditNews_DialogEditNews","SetAdmin_SetAdmin","AccountPage","isDataConfirmed","tabValue","registrationDate","password","admin","lastLoginDate","handleChangeTab","newValue","handleChangeIndexTab","index","getUserData","loginWithToken","undefined","_this3","stylesForTab","textTransform","minWidth","tabsArray","icon","Person","ListAlt","Security","Dashboard","Fingerprint","mobileMenu","AppBar","position","className","Tabs","indicatorColor","textColor","tabData","Tab","fullMenu","accountDataComponent","overflow","accountPageBody","lib_default","axis","direction","onChangeIndex","dir","AdminComponent_AdminComponent","waitingComponent","pagesForMenus","pages","buttonText","DialogLoginForm","loginState","login","loginForToken","isLoginSuccess","handleEmailChange","handlePasswordChange","mobile","MeetingRoom","marginLeft","marginRight","DialogRegisterForm","confirmPassword","registrationState","handleConfirmPasswordChange","PersonAdd","Main","menuEl","mobileOpenDialogLoginForm","handleClick","evt","currentTarget","handleExitButton","changePage","isDataConfirmedMobileMenu","Toolbar","aria-haspopup","Menu_default","Menu","anchorEl","keepMounted","Boolean","dataPage","react_router_dom","to","activeStyle","fontWeight","MenuItem","Icon","Input","isDataNotConfirmedMobileMenu","DialogLoginForm_DialogLoginForm","DialogRegisterForm_DialogRegisterForm","isLoadingComponent","react_router","Container","exact","StartPage_StartPage","isDataNotConfrimed","App","Main_Main","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3fa0879c.chunk.js","sourcesContent":["import {createMuiTheme} from \"@material-ui/core\";\n\nexport const theme = createMuiTheme({\n    \"palette\": {\n        \"common\": {\n            \"black\": \"#000\",\n            \"white\": \"#fff\"\n        },\n        \"background\": {\n            \"paper\": \"rgba(255, 255, 255, 1)\",\n            \"default\": \"#fafafa\"\n        },\n        \"primary\": {\n            \"light\": \"#40c4ff\",\n            \"main\": \"#039be5\",\n            \"dark\": \"rgba(74, 144, 226, 1)\",\n            \"contrastText\": \"#fff\"\n        },\n        \"secondary\": {\n            \"light\": \"#4ffcff\",\n            \"main\": \"#fff\",\n            \"dark\": \"#22c5bb\",\n            \"contrastText\": \"#fff\"\n        },\n        \"error\": {\n            \"light\": \"#2327e5\",\n            \"main\": \"#001df4\",\n            \"dark\": \"#0b18d3\",\n            \"contrastText\": \"#fff\"\n        },\n        \"text\": {\n            \"primary\": \"rgba(0, 0, 0, 0.87)\",\n            \"secondary\": \"rgba(0, 0, 0, 0.54)\",\n            \"disabled\": \"rgba(0, 0, 0, 0.38)\",\n            \"hint\": \"rgba(0, 0, 0, 0.38)\"\n        }\n    }\n});\n","import * as React from \"react\";\nimport {DataStorage} from \"../serverApi/dataStorage\";\nimport {LocalStorage} from \"../serverApi/localStorage\";\nimport Http from \"../serverApi/http\";\n\nexport default class HelpPage extends React.Component {\n\n\n\n    public render() {\n        document.title = 'Помощь';\n\n        return (\n            <div>\n               HelpPage\n\n            </div>\n        )\n    }\n}\n","export const serverApi = 'https://react-timetable-server.herokuapp.com';\n// https://react-timetable-server.herokuapp.com\n","import {serverApi} from \"../AppConstants\";\nimport {newsData} from \"../pages/StartPage\";\n\ninterface loginData {\n    email: string;\n    password: string\n}\n\n\nexport default class Http {\n\n    public url = serverApi;\n\n    public loginForToken (data: loginData, path: string) {\n        return fetch(this.url + path, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        });\n    }\n\n    public loginWithToken (token: string, path: string) {\n        return fetch(this.url + path, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n\n        });\n    }\n\n    public getNewsList (path: string){\n        return fetch(this.url + path, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        });\n    }\n\n    public removeNews (body: string, path: string) {\n        return fetch(this.url + path, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({body: body})\n        });\n    }\n\n    public editNews (body: any, path: string) {\n        return fetch(this.url + path, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(body)\n        });\n    }\n\n    public addNews (body: any, path: '/addNews') {\n        return fetch(this.url + path, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(body)\n        });\n    }\n\n    public addUserAsAdmin (body: string, path: '/addAdmin') {\n        return fetch(this.url + path, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({email: body})\n        });\n    }\n}\n","export class Link {\n    public data:string;\n    constructor(data:string) {\n        this.data = data\n    }\n}\n\nexport class DataStorage {\n    public storage:any;\n\n    constructor(storage:any) {\n        this.storage = storage;\n    }\n\n    get getUserData() {\n        return this.storage.data;\n    }\n\n    add(data:string) {\n        this.storage.add(data);\n    }\n\n    logOut () {\n        this.storage.logOut();\n    }\n\n}\n","export class LocalStorage {\n    public data:string;\n    constructor() {\n        // @ts-ignore\n        this.data = JSON.parse(localStorage.getItem('data'));\n\n    }\n\n    add(data:any) {\n        this.data = data;\n        this.save();\n    }\n\n    logOut() {\n        localStorage.removeItem('data');\n    }\n\n    save() {\n        localStorage.setItem('data', JSON.stringify(this.data)); // stringify - преобразование объекта в строку\n    }\n\n\n}\n\n","import {theme} from \"../Theme\";\nimport {CircularProgress, Typography} from \"@material-ui/core\";\nimport {MuiThemeProvider} from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport {DataStorage} from \"../serverApi/dataStorage\";\nimport {LocalStorage} from \"../serverApi/localStorage\";\nimport Http from \"../serverApi/http\";\n\nexport const LoadingComponent = (\n    <MuiThemeProvider theme={theme}>\n        <CircularProgress/>\n        <div>\n            <Typography variant={\"h6\"}>Пожалуйста, подождите. Данные обновляются.</Typography>\n        </div>\n    </MuiThemeProvider>\n)\n\nexport function checkUserData () {\n    let flag: boolean;\n    const storage = new DataStorage(new LocalStorage());\n    const http = new Http();\n    if (storage.getUserData !== null) {\n        http.loginWithToken(storage.getUserData, '/user')\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    console.log(result)\n                    if (result.email !== undefined) {\n                        console.log('true')\n                        flag = true\n                        return (flag)\n\n                    } else {\n                        console.log(false)\n                        storage.logOut()\n                        flag = false\n                        return (flag)\n\n                    }\n                }, (error) => {\n                    console.log(error)\n                }\n            );\n    } else {\n        flag = false\n        return (flag)\n    }\n}\n","import * as React from \"react\";\nimport {Card, CardContent, CardMedia, Grid, Typography} from \"@material-ui/core\";\nimport Http from \"../serverApi/http\";\nimport {LoadingComponent} from \"../components/UniversalComponents\";\n\nexport interface newsData {\n    _id: string\n    header: string,\n    body: string,\n    img: string,\n    author: string,\n    data: string\n}\n\nexport default class StartPage extends React.Component {\n\n    state = {\n        news: []\n    };\n\n    public componentDidMount(): void {\n        const http = new Http();\n        http.getNewsList('/getNewsList')\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        news: [...result]\n                    })\n                }\n            )\n    }\n\n\n    public render() {\n        document.title = 'Стартовая страница';\n\n\n        const cardTextArray = [\n            {\n                id: '0',\n                title: 'Задание на дом',\n                subtitle: '',\n                textBody: 'Добавь домашнее задание на любую дату',\n                img: 'https://1.bp.blogspot.com/-rIHSvpNC0ac/W7AMioDMmZI/AAAAAAAATEY/4Kw38DZpWV0Fry7vz29PaO0YMm5qwy5sQCK4BGAYYCw/w1200-h630-p-k-no-nu/IMedia9_Writing.jpg'\n            },\n            {\n                id: '1',\n                title: 'Новости',\n                subtitle: '',\n                textBody: 'Получай всегда актуальные новости КАИ и не только',\n                img: 'https://i.imgur.com/plWb1GA.jpg'\n            },\n            {\n                id: '2',\n                title: 'Уведомления',\n                subtitle: 'Псс... хочешь немного уведомлений?',\n                textBody: 'Отклоняй надоедливые уведомления каждый раз, когда они почему-то приходят',\n                img: 'http://www.twseo.com.tw/wp-content/uploads/2018/05/a3749ad203d8f65ac6290fde65778583.jpeg'\n            },\n            {\n                id: '3',\n                title: 'Внеси собственное расписание',\n                subtitle: '',\n                textBody: 'Сервис позволяет тебе внести свое расписание, записывать задания на каждый отдельный предмет и отмечать, если оно было уже выполнено!',\n                img: 'https://miro.medium.com/max/4043/0*gzqObH33C3zVLxKg.jpg'\n            },\n            {\n                id: '4',\n                title: 'Следи за своими задачами',\n                subtitle: '',\n                textBody: 'Внеси свои задачи, чтобы не забыть, что нужно сделать. Редактируй их, отмечай выполненные и просматривай их в отдельном хранилище!',\n                img: 'https://i.imgur.com/plWb1GA.jpg'\n            },\n            {\n                id: '5',\n                title: 'Сохрани все важные ссылки',\n                subtitle: '',\n                textBody: 'Сохрани важные ссылки, чтобы не забыть прочитать их позже! Редактируй, добавляй теги, используй поиск по названиям и тегам!',\n                img: 'https://i.imgur.com/plWb1GA.jpg'\n            },\n\n        ];\n        return (\n            <div>\n                <div style={{flexGrow: 1}}>\n                    <Grid container spacing={3}>\n                        <Grid style={{textAlign: 'center'}} item xs={12} sm={12}>\n\n                                {this.state.news.length === 0 ?\n                                    <CardContent>\n                                        {LoadingComponent}\n                                    </CardContent> :\n                                    <div>\n                                        {this.state.news.map((newsData: newsData) => {\n                                            return (\n\n                                                <Card key={newsData._id} style={{ marginTop: '1rem'}}>\n                                                    <CardContent>\n                                                        <Typography\n                                                            variant=\"h6\">{newsData.header}</Typography>\n                                                    </CardContent>\n                                                    <Typography variant=\"body1\">{newsData.body}</Typography>\n                                                    <Typography variant=\"subtitle1\"\n                                                                style={{color: 'grey'}}>Дата:&nbsp; {newsData.data}, &nbsp; Автор: &nbsp;{newsData.author}\n                                                    </Typography>\n                                                </Card>\n                                            )\n                                        })}\n                                    </div>\n                                }\n\n                        </Grid>\n                        {cardTextArray.map((cardBody) => {\n                            return (\n                                <Grid style={{textAlign: 'center'}} item xs={12} sm={4} key={cardBody.id}>\n                                    <Card>\n                                        {cardBody.img.length > 0 ? <CardMedia\n                                            component=\"img\"\n                                            alt=\"Contemplative Reptile\"\n                                            height=\"140\"\n                                            image={cardBody.img}\n                                            title=\"Contemplative Reptile\"\n                                        /> : null}\n\n                                        <CardContent style={{height: '130px'}}>\n                                            <Typography variant=\"h5\">\n                                                {cardBody.title}\n                                            </Typography>\n                                            <Typography color=\"textSecondary\">\n                                                {cardBody.subtitle}\n                                            </Typography>\n                                            <Typography variant=\"body1\" component=\"p\">\n                                                {cardBody.textBody}\n                                            </Typography>\n                                        </CardContent>\n                                    </Card>\n                                </Grid>\n                            )\n                        })}\n                    </Grid>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Typography\n} from \"@material-ui/core\";\nimport Http from \"../../serverApi/http\";\n\nimport {Delete} from \"@material-ui/icons\";\nimport {newsData} from \"../../pages/StartPage\";\n\ninterface DialogDeleteNewsProps {\n    newsData: newsData\n    getNews: any // функция обновления новостей\n}\n\n\nexport class DialogDeleteNews extends React.Component<DialogDeleteNewsProps> {\n\n    state = {\n        openDialogWindow: false\n    };\n\n    public handleOpenLoginDialog = () => {\n        this.setState({\n            openDialogWindow: true\n        })\n    };\n\n    public handleClose = () => {\n        this.setState({\n            openDialogWindow: false,\n        })\n    };\n\n    public confirmDelete = () => {\n        const http = new Http();\n        http.removeNews(this.props.newsData.body, '/removeNews')\n            .then (res => res.json())\n            .then(\n                (result) => {\n                    if (result === true){\n                        this.props.getNews();\n                        this.setState({\n                            openDialogWindow: false\n                        })\n                    }\n                }\n            )\n    };\n\n    public render() {\n        return (\n            <div>\n                <Button onClick={this.handleOpenLoginDialog} style={{gridRowStart: '1', gridRowEnd: '2'}}>\n                    <Delete/>\n                </Button>\n\n                <Dialog open={this.state.openDialogWindow} onClose={this.handleClose}\n                        aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Удаление новости</DialogTitle>\n\n                    <DialogContent>\n                        <DialogContentText>\n                            Заголовок: {this.props.newsData.header}\n                        </DialogContentText>\n                        <DialogContentText>\n                            Текст: {this.props.newsData.body}\n                        </DialogContentText>\n                        <DialogContentText>\n                            Автор: {this.props.newsData.author}, дата: {this.props.newsData.data}\n                        </DialogContentText>\n\n\n                    </DialogContent>\n\n                    <DialogActions>\n\n                        <Button onClick={this.confirmDelete} color=\"primary\">\n                            Удалить\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Отмена\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle, TextField,\n    Typography\n} from \"@material-ui/core\";\nimport Http from \"../../serverApi/http\";\n\nimport {Delete, Edit} from \"@material-ui/icons\";\nimport {newsData} from \"../../pages/StartPage\";\n\ninterface DialogEditNewsProps {\n    newsData: newsData\n    getNews: any // функция обновления новостей\n}\n\n\nexport class DialogEditNews extends React.Component<DialogEditNewsProps> {\n\n    state = {\n        openDialogWindow: false,\n        header: this.props.newsData.header,\n        body: this.props.newsData.body,\n        author: this.props.newsData.author,\n        img: this.props.newsData.img\n    };\n\n    public handleOpenLoginDialog = () => {\n        this.setState({\n            openDialogWindow: true\n        })\n    };\n\n    public handleClose = () => {\n        this.setState({\n            openDialogWindow: false,\n        })\n    };\n\n    public confirmEdit = () => {\n        const http = new Http();\n        const data = {\n            oldHeader: this.props.newsData.header,\n            oldBody: this.props.newsData.body,\n            oldData: this.props.newsData.data,\n            header: this.state.header,\n            body: this.state.body,\n            author: this.state.author,\n            img: this.state.img\n        };\n        http.editNews(data, '/editNews')\n            .then (res => res.json())\n            .then (\n                (result)=>{\n                    if (result === true){\n                        this.props.getNews();\n                        this.setState({\n                            openDialogWindow: false,\n                        })\n                    }\n                },\n                (err)=>{\n                    console.error(err)\n                }\n            )\n    };\n\n    public handleHeaderChange = (event: any) => {\n        this.setState({\n            header: event.target.value\n        })\n    };\n\n    public handleBodyChange = (event: any) => {\n        this.setState({\n            body: event.target.value\n        })\n    };\n\n    public handleAuthorChange = (event: any) => {\n        this.setState({\n            author: event.target.value\n        })\n    };\n\n    public handleImgChange = (event: any) => {\n        this.setState({\n            img: event.target.value\n        })\n    };\n\n    public render() {\n        return (\n            <div>\n                <Button onClick={this.handleOpenLoginDialog}>\n                    <Edit/>\n                </Button>\n\n                <Dialog open={this.state.openDialogWindow} onClose={this.handleClose}\n                        aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Редактирование новости</DialogTitle>\n\n                    <DialogContent>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"login\"\n                                label={<Typography>Заголовок: </Typography>}\n                                type=\"text\"\n                                value={this.state.header}\n                                fullWidth\n                                onChange={this.handleHeaderChange}\n                            />\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Текст новости: </Typography>}\n                            value={this.state.body}\n                            fullWidth\n                            onChange={this.handleBodyChange}\n                        />\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Автор: </Typography>}\n                            value={this.state.author}\n                            fullWidth\n                            onChange={this.handleAuthorChange}\n                        />\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Картинка: </Typography>}\n                            value={this.state.img}\n                            fullWidth\n                            onChange={this.handleImgChange}\n                        />\n\n\n                    </DialogContent>\n\n                    <DialogActions>\n\n                        <Button onClick={this.confirmEdit} color=\"primary\">\n                            Сохранить\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Отмена\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle, TextField,\n    Typography\n} from \"@material-ui/core\";\nimport Http from \"../../serverApi/http\";\n\ninterface DialogAddNewsProps {\n    getNews: any // функция обновления новостей\n}\n\n\nexport class DialogAddNews extends React.Component<DialogAddNewsProps> {\n\n    state = {\n        openDialogWindow: false,\n        header: '',\n        body: '',\n        author: '',\n        img: ''\n    };\n\n    public handleOpenLoginDialog = () => {\n        this.setState({\n            openDialogWindow: true\n        })\n    };\n\n    public handleClose = () => {\n        this.setState({\n            openDialogWindow: false,\n        })\n    };\n\n    public confirmEdit = () => {\n        const http = new Http();\n        const data = {\n            header: this.state.header,\n            body: this.state.body,\n            author: this.state.author,\n            img: this.state.img,\n            data: new Date()\n        };\n        http.addNews(data, '/addNews')\n            .then (res => res.json())\n            .then (\n                (result)=>{\n                    if (result === true){\n                        this.props.getNews();\n                        this.setState({\n                            openDialogWindow: false\n                        })\n                    }\n                },\n                (err)=>{\n                    console.error(err)\n                }\n            )\n    };\n\n    public handleHeaderChange = (event: any) => {\n        this.setState({\n            header: event.target.value\n        })\n    };\n\n    public handleBodyChange = (event: any) => {\n        this.setState({\n            body: event.target.value\n        })\n    };\n\n    public handleAuthorChange = (event: any) => {\n        this.setState({\n            author: event.target.value\n        })\n    };\n\n    public handleImgChange = (event: any) => {\n        this.setState({\n            img: event.target.value\n        })\n    };\n\n    public render() {\n        return (\n            <div>\n                <Button color=\"primary\" variant=\"contained\" onClick={this.handleOpenLoginDialog}>\n                    Добавить новость\n                </Button>\n\n                <Dialog open={this.state.openDialogWindow} onClose={this.handleClose}\n                        aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Добавление новости</DialogTitle>\n\n                    <DialogContent>\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Заголовок: </Typography>}\n                            type=\"text\"\n                            value={this.state.header}\n                            fullWidth\n                            onChange={this.handleHeaderChange}\n                        />\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Текст новости: </Typography>}\n                            value={this.state.body}\n                            fullWidth\n                            onChange={this.handleBodyChange}\n                        />\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Автор: </Typography>}\n                            value={this.state.author}\n                            fullWidth\n                            onChange={this.handleAuthorChange}\n                        />\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Картинка: </Typography>}\n                            value={this.state.img}\n                            fullWidth\n                            onChange={this.handleImgChange}\n                        />\n\n\n                    </DialogContent>\n\n                    <DialogActions>\n\n                        <Button onClick={this.confirmEdit} color=\"primary\">\n                            Сохранить\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Отмена\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n","import * as React from \"react\";\nimport {Button, DialogContent, TextField, Typography} from \"@material-ui/core\";\nimport Http from \"../serverApi/http\";\nimport {LoadingComponent} from \"./UniversalComponents\";\n\nexport default class SetAdmin extends React.Component {\n\n    state = {\n        adminEmail: '',\n        addConfirmed: false,\n        isLoading: false\n    };\n\n    public handleAdminEmailChange = (event: any) => {\n        this.setState({\n            adminEmail: event.target.value\n        })\n    };\n\n    public addUserAsAdmin = () => {\n        this.setState({\n            isLoading: true\n        })\n        const http = new Http();\n        http.addUserAsAdmin(this.state.adminEmail, '/addAdmin')\n            .then (res => res.json())\n            .then (\n                (result)=>{\n                    if (result === true){\n                      this.setState({\n                          addConfirmed: true,\n                          adminEmail: '',\n                          isLoading: false\n                      })\n                    }\n                }\n            )\n    };\n\n    public render() {\n        return (\n            <div style={{width: '100%'}}>\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"login\"\n                    label={<Typography>Имя будущего администратора</Typography>}\n                    fullWidth\n                    onChange={this.handleAdminEmailChange}\n                />\n                <Button color=\"primary\" variant=\"contained\" onClick={this.addUserAsAdmin}>\n                    Сделать пользователя администратором\n                </Button>\n                {this.state.isLoading ? LoadingComponent : null}\n                {this.state.addConfirmed ? <Typography variant=\"body1\">Пользователь успешно добавлен</Typography> : null}\n            </div>\n        )\n    }\n}\n","import * as React from \"react\";\nimport {\n    Button,\n    Card,\n    CardContent,\n    ExpansionPanel,\n    ExpansionPanelDetails,\n    ExpansionPanelSummary, Grid,\n    Typography\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Http from \"../serverApi/http\";\nimport {newsData} from \"./StartPage\";\nimport {LoadingComponent} from \"../components/UniversalComponents\";\nimport {Delete} from \"@material-ui/icons\";\nimport {DialogDeleteNews} from \"../components/Dialogs/DialogDeleteNews\";\nimport {DialogEditNews} from \"../components/Dialogs/DialogEditNews\";\nimport {DialogAddNews} from \"../components/Dialogs/DialogAddNews\";\nimport SetAdmin from \"../components/SetAdmin\";\n\n\ninterface AdminComponentState {\n    expanded: string\n    news: []\n    isNoOneNews: boolean\n}\n\nexport default class AdminComponent extends React.Component {\n\n    state = {\n        expanded: '',\n        news: [],\n        isNoOneNews: false\n    };\n\n    public handleChangeExpand = (panel: any) => (event: React.ChangeEvent<{}>, isExpanded: boolean) => {\n        if (isExpanded) {\n            this.setState({\n                expanded: panel\n            })\n        } else {\n            this.setState({\n                expanded: false\n            })\n        }\n        if (panel === 'getNews') {\n            const http = new Http();\n            http.getNewsList('/getNewsList')\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        if (result.length > 0) {\n                            this.setState({\n                                news: [...result]\n                            });\n                        } else {\n                            this.setState({\n                                isNoOneNews: true\n                            })\n                        }\n                    }\n                )\n        }\n    };\n\n    public getNewsList = () => {\n        const http = new Http();\n        http.getNewsList('/getNewsList')\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    if (result.length > 0) {\n                        this.setState({\n                            news: [...result]\n                        }, () => {\n                            console.log(this.state.news)\n                        });\n                    } else {\n                        this.setState({\n                            isNoOneNews: true\n                        })\n                    }\n\n                }\n            )\n    };\n\n    public render() {\n\n        return (\n            <div style={{marginTop: '1rem'}}>\n                <div>\n                    {/* ПРОСМОТР ВСЕХ НОВОСТЕЙ */}\n                    <ExpansionPanel expanded={this.state.expanded === 'getNews'}\n                                    onChange={this.handleChangeExpand('getNews')}>\n                        <ExpansionPanelSummary\n                            expandIcon={<ExpandMoreIcon/>}\n                            aria-controls=\"panel1bh-content\"\n                            id=\"panel1bh-header\"\n                        >\n                            <Typography>Новости на сайте</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            <Grid container spacing={3}>\n                                <Grid item xs={12} sm={12}>\n\n                                    {this.state.news.length === 0 ?\n                                        <CardContent>\n                                            {this.state.isNoOneNews ?\n                                                <Typography>Новостей нет</Typography> : LoadingComponent}\n                                        </CardContent> :\n                                        <div>\n                                            <DialogAddNews getNews={this.getNewsList}/>\n                                            {this.state.news.map((newsData: newsData) => {\n                                                return (\n                                                    <div key={newsData._id}>\n                                                        <Card style={{marginTop: '1rem'}}>\n                                                            <div style={{display: 'flex', margin: '10px'}}>\n                                                                <DialogDeleteNews newsData={newsData}\n                                                                                  getNews={this.getNewsList}/>\n                                                                <DialogEditNews newsData={newsData}\n                                                                                getNews={this.getNewsList}/>\n                                                            </div>\n                                                            <div style={{textAlign: 'center'}}>\n                                                                <CardContent>\n                                                                    <Typography\n                                                                        variant=\"h6\">{newsData.header}</Typography>\n                                                                </CardContent>\n                                                                <Typography variant=\"body1\">{newsData.body}</Typography>\n                                                                <Typography variant=\"subtitle1\"\n                                                                            style={{color: 'grey'}}>Дата:&nbsp; {newsData.data}, &nbsp; Автор: &nbsp;{newsData.author}\n                                                                </Typography>\n                                                            </div>\n                                                        </Card>\n                                                    </div>\n                                                )\n                                            })}\n                                        </div>\n                                    }\n                                </Grid>\n                            </Grid>\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n\n                    <ExpansionPanel expanded={this.state.expanded === 'panel3'}\n                                    onChange={this.handleChangeExpand('panel3')}>\n                        <ExpansionPanelSummary\n                            expandIcon={<ExpandMoreIcon/>}\n                            aria-controls=\"panel3bh-content\"\n                            id=\"panel3bh-header\"\n                        >\n                            <Typography>Дать права админа</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                               <SetAdmin/>\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n\n                </div>\n            </div>\n        )\n    }\n\n\n}\n","import * as React from \"react\";\nimport {DataStorage} from \"../serverApi/dataStorage\";\nimport {LocalStorage} from \"../serverApi/localStorage\";\nimport Http from \"../serverApi/http\";\nimport {LoadingComponent} from \"../components/UniversalComponents\";\nimport {AppBar, Grid, Tab, Tabs, Typography} from \"@material-ui/core\";\nimport SwipeableViews from 'react-swipeable-views';\nimport {theme} from \"../Theme\";\nimport {Dashboard, Fingerprint, ListAlt, Person, Security} from \"@material-ui/icons\";\nimport AdminComponent from \"./AdminComponent\";\n\ninterface AccountPageState {\n    isDataConfirmed: boolean | null,\n    data: AccountData,\n    tabValue: number\n}\n\ninterface AccountData {\n    email: string,\n    registrationDate: string,\n    password: string,\n    admin: boolean,\n    lastLoginDate: string\n}\n\nexport default class AccountPage extends React.Component<AccountPageState> {\n\n    state = {\n        isDataConfirmed: null,\n        tabValue: 0,\n        data: {email: '', registrationDate: '', password: '', admin: false, lastLoginDate: ''}\n    };\n\n    public theme: any;\n\n    componentDidMount(): void {\n        document.title = 'Аккаунт';\n        const storage = new DataStorage(new LocalStorage());\n        const http = new Http();\n        if (storage.getUserData !== null) {\n            http.loginWithToken(storage.getUserData, '/user')\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        if (result.email !== undefined) {\n                            this.setState({\n                                data: result\n                            }, () => {\n                                this.setState({\n                                    isDataConfirmed: true\n                                })\n                            })\n                        } else {\n                            this.setState({\n                                isDataConfirmed: false\n                            }, () => {\n                                storage.logOut()\n                            })\n                        }\n                    }, (error) => {\n                        console.log(error)\n                    }\n                );\n        } else {\n            this.setState({\n                isDataConfirmed: false\n            })\n        }\n    }\n\n    public handleChangeTab = (event: React.ChangeEvent<{}>, newValue: number) => {\n        this.setState({\n            tabValue: newValue\n        })\n    };\n\n    public handleChangeIndexTab = (index: number) => {\n        this.setState({\n            tabValue: index\n        })\n    }\n\n    componentWillUnmount(): void {\n    }\n\n    public render() {\n\n        const stylesForTab = {\n            textTransform: 'none',\n            minWidth: 72,\n        } as React.CSSProperties;\n\n        const tabsArray = [\n            {label: 'Учетная запись', icon: <Person/>},\n            {label: 'Мое расписание', icon: <ListAlt/>},\n            {label: 'Безопасность', icon: <Security/>},\n            {label: 'Сервисы', icon: <Dashboard/>},\n            {label: 'Админ', icon: <Fingerprint/>, admin: true},\n        ];\n\n        const mobileMenu = (\n            <AppBar position=\"static\" color=\"default\" className=\"topBarMin top\">\n                <Tabs\n                    value={this.state.tabValue}\n                    onChange={this.handleChangeTab}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"fullWidth\"\n                >\n                    {tabsArray.map((tabData: any) => {\n                        if (this.state.data.admin === true && tabData.label === 'Админ') {\n                            return (\n                                <Tab icon={tabData.icon} style={stylesForTab}\n                                     key={tabData.label}/>\n                            )\n                        } else {\n                            if (tabData.admin === undefined) {\n                                return (\n                                    <Tab icon={tabData.icon} style={stylesForTab}\n                                         key={tabData.label}/>\n                                )\n                            }\n                        }\n                    })}\n                </Tabs>\n            </AppBar>\n        );\n\n        const fullMenu = (\n            <AppBar position=\"static\" color=\"default\" className=\"topBarMax\">\n                <Tabs\n                    value={this.state.tabValue}\n                    onChange={this.handleChangeTab}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"fullWidth\"\n                >\n                    {tabsArray.map((tabData: any) => {\n                        if (this.state.data.admin === true && tabData.label === 'Админ') {\n                            return (\n                                <Tab label={tabData.label} icon={tabData.icon} style={stylesForTab}\n                                     key={tabData.label}/>\n                            )\n                        } else {\n                            if (tabData.admin === undefined) {\n                                return (\n                                    <Tab label={tabData.label} icon={tabData.icon} style={stylesForTab}\n                                         key={tabData.label}/>\n                                )\n                            }\n                        }\n                    })}\n                </Tabs>\n            </AppBar>\n        );\n\n        const accountDataComponent = (\n            <div style={{marginTop: '1rem', overflow: 'hidden'}}>\n                <Grid container spacing={3}>\n                    <Grid style={{textAlign: 'center'}} item xs={6} sm={6}>\n\n                        <Typography variant=\"body1\">\n                            Email:\n                        </Typography>\n\n                    </Grid>\n                    <Grid style={{textAlign: 'center'}} item xs={6} sm={6}>\n\n                        <Typography variant=\"body1\">\n                            {this.state.data.email}\n                        </Typography>\n\n                    </Grid>\n                </Grid>\n            </div>\n        )\n\n        const accountPageBody = (\n            <div>\n                {mobileMenu}\n                {fullMenu}\n                <SwipeableViews axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'} index={this.state.tabValue}\n                                onChangeIndex={this.handleChangeIndexTab}>\n                    {this.state.isDataConfirmed ? <div dir={theme.direction}>{accountDataComponent}</div> : <div></div>}\n                    <div dir={theme.direction}>text2</div>\n                    <div dir={theme.direction}>text3</div>\n                    <div dir={theme.direction}>text4</div>\n                    <div dir={theme.direction}><AdminComponent/></div>\n                </SwipeableViews>\n            </div>\n        );\n\n        const waitingComponent = (\n            <div>\n                <Typography variant={\"h6\"}>Пожалуйста, подождите. Данные обновляются.</Typography>\n            </div>\n        );\n\n\n        return (\n            <div>\n                {this.state.isDataConfirmed === null ? LoadingComponent : null}\n                {this.state.data !== undefined ? accountPageBody : waitingComponent}\n            </div>\n        )\n    }\n}\n","import HelpPage from \"./HelpPage\";\nimport StartPage from \"./StartPage\";\nimport AccountPage from \"./AccountPage\";\n\nexport const pagesForMenus =  {\n    pages:\n        [\n            {path: '/React-timetable/', buttonText: 'Главная', isDataConfirmed: false,  component: StartPage, icon: 'home'},\n            {path: '/React-timetable/help', buttonText: 'Помощь', isDataConfirmed: false, component: HelpPage, icon: 'live_help'},\n            {path: '/React-timetable/account', buttonText: 'Аккаунт', isDataConfirmed: true, component: AccountPage, icon: 'person'},\n        ]\n};\n","import React from 'react'\nimport {\n    Button, CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle, Fade,\n    TextField, Typography\n} from \"@material-ui/core\";\nimport Http from \"../../serverApi/http\";\nimport {DataStorage} from \"../../serverApi/dataStorage\";\nimport {LocalStorage} from \"../../serverApi/localStorage\";\nimport {Input, MeetingRoom} from \"@material-ui/icons\";\nimport MenuItem from \"../Main\";\n\ninterface DialogLoginFormProps {\n    mobile: boolean\n    isLoginSuccess: any;\n}\n\ninterface DialogLoginFormState {\n    openDialogWindow: boolean,\n    email: string,\n    password: string,\n    isLoading: boolean\n    loginState: string\n}\n\nexport class DialogLoginForm extends React.Component<DialogLoginFormProps, DialogLoginFormState> {\n\n    state = {\n        openDialogWindow: false,\n        email: '',\n        password: '',\n        isLoading: false,\n        loginState: ''\n    };\n\n    public handleOpenLoginDialog = () => {\n        this.setState({\n            openDialogWindow: true\n        })\n    };\n\n    public handleClose = () => {\n        this.setState({\n            openDialogWindow: false,\n\n        })\n    };\n\n    public login = () => {\n        this.setState({\n            isLoading: true\n        });\n        const http = new Http();\n        const data = {\n            email: this.state.email,\n            password: this.state.password,\n        };\n        http.loginForToken(data, '/auth')\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    if (result.token === undefined){\n                        this.setState({\n                            loginState: 'Email или пароль введены неверно'\n                        })\n                    } else {\n                        this.setState({\n                            loginState: 'Вы успешно авторизованы. Сейчас Вы будете перенаправлены'\n                        }, ()=>{\n                            const storage = new DataStorage(new LocalStorage());\n                            storage.add(result.token);\n                            http.loginWithToken(result.token, '/user')\n                                .then(res => res.json())\n                                .then (\n                                    (result)=>{\n                                        // КОНЕЧНЫЕ ДАННЫЕ\n                                        this.setState({\n                                            openDialogWindow: false\n                                        });\n                                        this.props.isLoginSuccess(result)\n\n                                    }, (error) => {\n                                        console.log(error)\n                                    }\n                                )\n                        })\n                    }\n                    this.setState({\n                        isLoading: false\n                    })\n                },\n                (error) => {\n                    console.log(error)\n                }\n            );\n    };\n\n    public handleEmailChange = (event: any) => {\n        this.setState({\n            email: event.target.value\n        })\n    };\n\n    public handlePasswordChange = (event: any) => {\n        this.setState({\n            password: event.target.value\n        })\n    };\n\n    public render() {\n        return (\n            <div>\n\n                {this.props.mobile === true ?\n                    <div onClick={this.handleOpenLoginDialog} style={{height: '2rem', width: '7rem'}}>\n                        <Typography variant=\"button\"><MeetingRoom/>&nbsp;&nbsp;Вход</Typography>\n                    </div>\n                    :\n                    <Button color=\"secondary\" onClick={this.handleOpenLoginDialog}>\n                        <MeetingRoom/>&nbsp;&nbsp;Вход\n                    </Button>}\n\n                <Dialog open={this.state.openDialogWindow} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Вход</DialogTitle>\n                    <div style={{marginLeft: 'auto', marginRight: 'auto'}}>\n                        {this.state.isLoading ? <CircularProgress/> : null}\n                    </div>\n                    <DialogContent>\n                        <DialogContentText>\n                            Введите Email и пароль\n                        </DialogContentText>\n\n                        <Typography variant=\"button\">{this.state.loginState}</Typography>\n\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Email <span style={{color: 'red'}}>*</span></Typography>}\n                            type=\"email\"\n                            fullWidth\n                            onChange={this.handleEmailChange}\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            id=\"pass\"\n                            label={<Typography>Пароль <span style={{color: 'red'}}>*</span></Typography>}\n                            type=\"password\"\n                            fullWidth\n                            onChange={this.handlePasswordChange}\n                        />\n                    </DialogContent>\n\n                    <DialogActions>\n\n                        <Button onClick={this.login} color=\"primary\">\n                            Войти\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Отмена\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport {\n    Button, CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle, Fade,\n    TextField, Typography\n} from \"@material-ui/core\";\nimport Http from \"../../serverApi/http\";\nimport {DataStorage} from \"../../serverApi/dataStorage\";\nimport {LocalStorage} from \"../../serverApi/localStorage\";\nimport CustomizedSnackbars from \"./SnackBar\";\nimport {PersonAdd} from \"@material-ui/icons\";\n\ninterface DialogRegisterFormProps {\n    mobile: boolean\n    isLoginSuccess: any;\n}\n\ninterface DialogRegisterFormState {\n    openDialogWindow: boolean,\n    email: string,\n    password: string,\n    confirmPassword: string,\n    isLoading: boolean,\n    registrationState: string\n}\n\nexport class DialogRegisterForm extends React.Component<DialogRegisterFormProps, DialogRegisterFormState> {\n\n    state = {\n        openDialogWindow: false,\n        email: '',\n        password: '',\n        confirmPassword: '',\n        isLoading: false,\n        registrationState: ''\n    };\n\n    public handleOpenLoginDialog = () => {\n        this.setState({\n            openDialogWindow: true\n        })\n    };\n\n\n    public handleClose = () => {\n\n        this.setState({\n            openDialogWindow: false,\n\n        })\n    };\n\n    public login = () => {\n        this.setState({\n            isLoading: true\n        });\n        const http = new Http();\n        const data = {\n            email: this.state.email,\n            password: this.state.password,\n            confirmPassword: this.state.confirmPassword\n        };\n        http.loginForToken(data, '/registration')\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        isLoading: false\n                    });\n                    if (result === 'Passwords Not Confirmed') {\n                        console.log(result);\n                        this.setState({\n                            registrationState: 'Введенные пароли не совпадают'\n                        })\n                    }\n\n                    if (result.token !== undefined) {\n                        this.setState({\n                            registrationState: 'Вы успешно зарегистрированы. Сейчас Вы будете перенаправлены'\n                        }, () => {\n                            const storage = new DataStorage(new LocalStorage());\n                            storage.add(result.token);\n                            http.loginWithToken(result.token, '/user')\n                                .then(res => res.json())\n                                .then(\n                                    (result) => {\n                                        // КОНЕЧНЫЕ ДАННЫЕ\n                                        this.setState({\n                                            openDialogWindow: false\n                                        });\n                                        this.props.isLoginSuccess(result)\n\n                                    }, (error) => {\n                                        console.log(error)\n                                    }\n                                )\n                        })\n                    }\n\n                    if (result === 'This email already registered') {\n                        this.setState({\n                            registrationState: 'Этот Email уже занят'\n                        })\n                    }\n\n                    if (result === '8 symbols') {\n                        this.setState({\n                            registrationState: 'Длина пароля должна быть не менее 8 символов'\n                        })\n                    }\n                },\n                (error) => {\n                    console.log(error)\n                }\n            );\n    };\n\n    public handleEmailChange = (event: any) => {\n        this.setState({\n            email: event.target.value\n        })\n    };\n\n    public handlePasswordChange = (event: any) => {\n        this.setState({\n            password: event.target.value\n        })\n    };\n\n    public handleConfirmPasswordChange = (event: any) => {\n        this.setState({\n            confirmPassword: event.target.value\n        })\n    };\n\n    public render() {\n        return (\n            <div>\n\n                {this.props.mobile === true ?\n                    <div onClick={this.handleOpenLoginDialog} style={{height: '2rem', width: '7rem'}}>\n                        <PersonAdd/>&nbsp;&nbsp;<Typography variant=\"button\">Регистрация</Typography>\n                    </div>\n                    :\n                    <Button color=\"secondary\" onClick={this.handleOpenLoginDialog}>\n                        <PersonAdd/>&nbsp;&nbsp;Регистрация\n                    </Button>}\n\n                <Dialog open={this.state.openDialogWindow} onClose={this.handleClose}\n                        aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Регистрация</DialogTitle>\n                    <div style={{marginLeft: 'auto', marginRight: 'auto'}}>\n                        {this.state.isLoading ? <CircularProgress/> : null}\n                    </div>\n                    <DialogContent>\n                        <DialogContentText>\n                            Для регистрации необходимо ввести свой email и пароль. Введенные пароли должны совпадать\n                        </DialogContentText>\n\n                        <Typography variant=\"button\">{this.state.registrationState}</Typography>\n\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"login\"\n                            label={<Typography>Email <span style={{color: 'red'}}>*</span></Typography>}\n                            type=\"email\"\n                            fullWidth\n                            onChange={this.handleEmailChange}\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            id=\"pass\"\n                            label={<Typography>Пароль <span style={{color: 'red'}}>*</span></Typography>}\n                            type=\"password\"\n                            fullWidth\n                            onChange={this.handlePasswordChange}\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            id=\"confirmPass\"\n                            label={<Typography>Повторите пароль <span style={{color: 'red'}}>*</span></Typography>}\n                            type=\"password\"\n                            fullWidth\n                            onChange={this.handleConfirmPasswordChange}\n                        />\n                    </DialogContent>\n\n                    <DialogActions>\n                        <Button onClick={this.login} color=\"primary\">\n                            Зарегистрироваться\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Отмена\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n","import {Switch, Route, Link, NavLink, Redirect} from 'react-router-dom'\nimport React from 'react'\nimport {AppBar, Button, CircularProgress, Container, Icon, Menu, Toolbar, Typography} from \"@material-ui/core\";\nimport {MuiThemeProvider} from '@material-ui/core/styles';\nimport {theme} from \"../Theme\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {pagesForMenus} from \"../pages/AppPagesList\";\nimport {DialogLoginForm} from \"./Dialogs/DialogLoginForm\";\nimport {DialogRegisterForm} from \"./Dialogs/DialogRegisterForm\";\nimport {DataStorage} from \"../serverApi/dataStorage\";\nimport {LocalStorage} from \"../serverApi/localStorage\";\nimport Http from \"../serverApi/http\";\nimport {Input} from \"@material-ui/icons\";\nimport StartPage from \"../pages/StartPage\";\n\n\ninterface pageData {\n    path: string;\n    buttonText: string;\n    isDataConfirmed: boolean;\n    component: any,\n    icon: any\n}\n\ninterface MainState {\n    menuEl: any,\n    mobileOpenDialogLoginForm: any,\n    isDataConfirmed: any,\n    data: any,\n}\n\nexport default class Main extends React.Component {\n\n    public storage = new DataStorage(new LocalStorage());\n\n    public state: MainState = {\n        menuEl: null,\n        mobileOpenDialogLoginForm: false,\n        isDataConfirmed: null, // флаг становится true только в том случае, если пришли данные по токену. Флаг прокидывается в детей и внутри проходят запросы\n        data: null,\n    };\n\n    // вспомогательное для меню\n    public handleClick = (evt: React.MouseEvent<HTMLButtonElement>) => {\n        this.setState({\n            menuEl: evt.currentTarget\n        })\n    };\n\n    // открытие - закрытие меню на мобильной версии\n    public handleClose = () => {\n        this.setState({\n            menuEl: null\n        })\n    };\n\n    // поднимается через пропсы с форм регистрации и логина\n    public isLoginSuccess = (data: any) => {\n        this.setState({\n            data: data\n        }, () => {\n            this.setState({\n                isDataConfirmed: true\n            })\n        })\n    };\n\n    // обработчик кнопки выхода\n    public handleExitButton = () => {\n        this.storage.logOut();\n        this.setState({\n            isDataConfirmed: false,\n            data: null\n        })\n    };\n\n    // событие изменения страницы - проверка данных\n    public changePage = () => {\n        const storage = new DataStorage(new LocalStorage());\n        const http = new Http();\n        if (storage.getUserData !== null) {\n            http.loginWithToken(storage.getUserData, '/user')\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        if (result.email !== undefined) {\n                            this.setState({\n                                data: result\n                            }, () => {\n                                this.setState({\n                                    isDataConfirmed: true\n                                })\n                            })\n                        } else {\n                            this.setState({\n                                isDataConfirmed: false\n                            }, () => {\n                                storage.logOut()\n                            })\n                        }\n                    }, (error) => {\n                        console.log(error)\n                    }\n                );\n        } else {\n            this.setState({\n                isDataConfirmed: false\n            })\n        }\n    }\n\n    componentDidMount(): void {\n        const storage = new DataStorage(new LocalStorage());\n        const http = new Http();\n        if (storage.getUserData !== null) {\n            http.loginWithToken(storage.getUserData, '/user')\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        if (result.email !== undefined) {\n                            this.setState({\n                                data: result\n                            }, () => {\n                                this.setState({\n                                    isDataConfirmed: true\n                                })\n                            })\n                        } else {\n                            this.setState({\n                                isDataConfirmed: false\n                            }, () => {\n                                storage.logOut()\n                            })\n                        }\n                    }, (error) => {\n                        console.log(error)\n                    }\n                );\n        } else {\n            this.setState({\n                isDataConfirmed: false\n            })\n        }\n\n    }\n\n    public render() {\n\n        const isDataConfirmedMobileMenu = (\n            <AppBar>\n                <Toolbar className=\"topBarMin\">\n                    <Button color=\"secondary\" aria-controls=\"customized-menu\" aria-haspopup=\"true\"\n                            onClick={this.handleClick}>\n                        <MenuIcon/>\n                    </Button>\n                    <Menu\n                        id=\"customized-menu\" anchorEl={this.state.menuEl} keepMounted\n                        open={Boolean(this.state.menuEl)} onClose={this.handleClose}\n                        style={{marginTop: '2rem'}}>\n                        {/* ОТДЕЛЬНО ВОЗВРАЩАЕТСЯ КНОПКА ВХОДА */}\n                        <div>\n                            {pagesForMenus.pages.map((dataPage: pageData) => {\n                                    return (\n                                        <div key={dataPage.buttonText + 'logged'}  onClick={this.changePage} style={{width: '180px'}}>\n                                            <NavLink to={dataPage.path} style={{color: \"black\"}}\n                                                     activeStyle={{color: \"black\", fontWeight: \"bold\"}}>\n                                                <MenuItem onClick={this.handleClose}>\n                                                    <Icon>{dataPage.icon}</Icon>&nbsp;&nbsp;\n\n                                                    <Typography\n                                                        variant=\"button\">{dataPage.buttonText}</Typography>\n                                                </MenuItem>\n                                            </NavLink>\n                                        </div>\n                                    )\n\n                                }\n                            )}\n                            <MenuItem onClick={this.handleExitButton}>\n                                <Input/>&nbsp;&nbsp;Выйти\n                            </MenuItem>\n                        </div>\n                    </Menu>\n                    {this.state.data === null ? null :\n                        <Typography style={{marginLeft: 'auto'}}\n                                    variant=\"subtitle2\">Привет, {this.state.data.email}</Typography>}\n                </Toolbar>\n            </AppBar>\n        )\n\n        const isDataNotConfirmedMobileMenu = (\n            <AppBar>\n                <Toolbar className=\"topBarMin\">\n                    <Button color=\"secondary\" aria-controls=\"customized-menu\" aria-haspopup=\"true\"\n                            onClick={this.handleClick}>\n                        <MenuIcon/>\n                    </Button>\n                    <Menu\n                        id=\"customized-menu\" anchorEl={this.state.menuEl} keepMounted\n                        open={Boolean(this.state.menuEl)} onClose={this.handleClose}\n                        style={{marginTop: '2rem'}}>\n                        {pagesForMenus.pages.map((dataPage: pageData) => {\n                            if (dataPage.isDataConfirmed === false){\n                                return (\n                                    <div key={dataPage.buttonText}  onClick={this.changePage} style={{width: '180px'}}>\n                                        <NavLink to={dataPage.path} style={{color: \"black\"}}\n                                                 activeStyle={{color: \"black\", fontWeight: \"bold\"}}>\n                                            <MenuItem onClick={this.handleClose}>\n                                                <Icon>{dataPage.icon}</Icon>&nbsp;&nbsp;\n\n                                                <Typography\n                                                    variant=\"button\">{dataPage.buttonText}</Typography>\n                                            </MenuItem>\n                                        </NavLink>\n                                    </div>\n                                )\n                            }\n\n                            }\n                        )}\n                        {/* ОТДЕЛЬНО ВОЗВРАЩАЕТСЯ КНОПКА ВХОДА */}\n\n                        <div>\n                            <MenuItem>\n                                <DialogLoginForm mobile={true} isLoginSuccess={this.isLoginSuccess}/>\n                            </MenuItem>\n                        </div>\n                        <div>\n                            <MenuItem>\n                                <DialogRegisterForm mobile={true} isLoginSuccess={this.isLoginSuccess}/>\n                            </MenuItem>\n                        </div>\n\n                    </Menu>\n                </Toolbar>\n            </AppBar>\n        );\n\n\n        const isLoadingComponent = (\n            <MuiThemeProvider theme={theme}>\n                <AppBar>\n                    <Toolbar style={{textAlign: 'right'}}>\n                        <CircularProgress color=\"inherit\"/>\n                    </Toolbar>\n                </AppBar>\n            </MuiThemeProvider>\n        );\n\n        const isDataConfirmed = (\n            <Switch>\n                <MuiThemeProvider theme={theme}>\n                    {/* МЕНЮ В МОБИЛЬНОЙ ВЕРСИИ */}\n\n                    {isDataConfirmedMobileMenu}\n\n                    {/* МЕНЮ В ПОЛНОЙ ВЕРСИИ */}\n                    <AppBar>\n                        <Toolbar className=\"topBarMax\" style={{textAlign: 'right'}}>\n                            {/* ОТДЕЛЬНО ВОЗВРАЩАЕТСЯ КНОПКА ВХОДА */}\n\n                            {pagesForMenus.pages.map((dataPage: pageData) => {\n                                return (\n                                    <div key={dataPage.buttonText + 'logged'}>\n                                        <Link to={dataPage.path}>\n                                            <Button color=\"secondary\"  onClick={this.changePage}>\n                                                <Icon>{dataPage.icon}</Icon>&nbsp;&nbsp;{dataPage.buttonText}\n                                            </Button>\n                                        </Link>\n                                    </div>\n                                )\n                            })}\n                            <Button onClick={this.handleExitButton} color=\"secondary\">\n                                <Input/>&nbsp;&nbsp;ВЫХОД\n                            </Button>\n                            &nbsp;\n                            {this.state.data === null ? null :\n                                <Typography style={{marginLeft: 'auto'}}\n                                            variant=\"subtitle2\">Привет, {this.state.data.email}</Typography>}\n                        </Toolbar>\n                    </AppBar>\n\n                    {/*{ ТЕЛО ВСЕЙ СТРАНИЦЫ }*/}\n                    <Container>\n                        <div style={{marginTop: '5rem'}}>\n                            {pagesForMenus.pages.map((dataPage: pageData) => {\n                                return (\n                                    <div key={dataPage.buttonText}>\n                                        <Route exact path={dataPage.path} component={dataPage.component}/>\n                                    </div>\n                                )\n                            })}\n                            <Redirect to=\"/React-timetable\"/>\n                        </div>\n                    </Container>\n                </MuiThemeProvider>\n                <StartPage/>\n            </Switch>\n        );\n\n        const isDataNotConfrimed = (\n            <Switch>\n                <MuiThemeProvider theme={theme}>\n                        {/* МЕНЮ В МОБИЛЬНОЙ ВЕРСИИ */}\n\n                        {isDataNotConfirmedMobileMenu}\n                        {/* МЕНЮ В ПОЛНОЙ ВЕРСИИ */}\n                        <AppBar>\n                            <Toolbar className=\"topBarMax\" style={{textAlign: 'right'}}>\n                                {/* ОТДЕЛЬНО ВОЗВРАЩАЕТСЯ КНОПКА ВХОДА */}\n\n                                {pagesForMenus.pages.map((dataPage: pageData) => {\n                                    if (dataPage.isDataConfirmed === false) {\n                                        return (\n                                            <div key={dataPage.buttonText}>\n                                                <Link to={dataPage.path}>\n                                                    <Button color=\"secondary\" onClick={this.changePage}>\n                                                        <Icon>{dataPage.icon}</Icon>&nbsp;&nbsp;{dataPage.buttonText}\n                                                    </Button>\n                                                </Link>\n                                            </div>\n                                        )\n                                    }\n                                })}\n\n                                <DialogLoginForm mobile={false} isLoginSuccess={this.isLoginSuccess}/>\n                                <DialogRegisterForm mobile={false} isLoginSuccess={this.isLoginSuccess}/>\n\n                            </Toolbar>\n                        </AppBar>\n\n                        {/* ТЕЛО ВСЕЙ СТРАНИЦЫ */}\n                        <Container>\n                            <div style={{marginTop: '5rem'}}>\n                                {pagesForMenus.pages.map((dataPage: pageData) => {\n                                    if (dataPage.isDataConfirmed === false){\n                                        return (\n                                            <div key={dataPage.buttonText}>\n                                                <Route exact path={dataPage.path} component={dataPage.component}/>\n                                            </div>\n                                        )\n                                    }\n                                })}\n                                <Redirect to=\"/React-timetable\"/>\n                            </div>\n                        </Container>\n                </MuiThemeProvider>\n            </Switch>\n        );\n\n        // ВОЗВРАЩАЕТСЯ ЕСЛИ ОЖИДАНИЕ ЗАПРОСА\n        if (this.state.isDataConfirmed === null) {\n            return (isLoadingComponent)\n        }\n        // ВОЗВРАЩАЕТСЯ ЕСЛИ ДАННЫЕ НЕ ПРИШЛИ\n        if (!this.state.isDataConfirmed) {\n            return (isDataNotConfrimed)\n        } else {\n            return (isDataConfirmed)\n        }\n\n    }\n};\n","import React from 'react';\nimport './App.css';\nimport {BrowserRouter} from \"react-router-dom\";\nimport Main from \"./components/Main\";\n\nconst App: React.FC = () => {\n    return (\n        <BrowserRouter>\n            <Main/>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}